#N canvas 42 25 907 259 10;
#N canvas -6 -690 1313 577 simple_sqaure 0;
#X obj 10 11 cnv 15 200 25 empty empty Simple_Square_Wave 20 12 0 14
-233017 -66577 0;
#X obj 469 95 mtof;
#X obj 469 117 s sqFreq;
#X obj 543 118 s reset;
#X obj 469 73 t f b;
#X obj 469 14 loadbang;
#X text 525 14 <--- loadbang sends out a bang as soon as the patch
opens.;
#X text 555 26 This is useful for setting initial values for objects
;
#X text 601 117 <--- the [s ] objects send data 'wirelessly';
#X text 631 132 to [r ] objects with the same name;
#X obj 11 188 cnv 15 250 220 empty empty Fundamental_(1st_Partial)
20 12 0 12 -228856 -66577 0;
#X obj 27 229 r sqFreq;
#X obj 83 229 r reset;
#X obj 27 350 osc~;
#X msg 48 293 0.75;
#X obj 271 188 cnv 15 250 220 empty empty 2nd_Partial 20 12 0 12 -228856
-66577 0;
#X obj 287 229 r sqFreq;
#X obj 343 229 r reset;
#X obj 287 350 osc~;
#X obj 363 329 /;
#X obj 348 382 *~;
#X obj 287 329 *;
#X msg 363 293 1;
#X msg 308 293 0.75;
#X obj 344 251 t b b b;
#X obj 27 382 *~ 1;
#X text 111 253 The right outlet of;
#X text 110 267 [osc~] sets the phase.;
#X text 112 281 All oscilators have;
#X text 111 293 this argument reset to;
#X text 112 320 are in-sync \, and that;
#X text 110 333 the phases line up to;
#X text 112 345 make a square wave \, and;
#X text 81 351 <---;
#X text 81 292 <---;
#X text 111 383 to see more about this;
#X obj 531 188 cnv 15 250 220 empty empty 3rd_Partial 20 12 0 12 -228856
-66577 0;
#X obj 791 188 cnv 15 250 220 empty empty 4th_Partial 20 12 0 12 -228856
-66577 0;
#X obj 1051 188 cnv 15 250 220 empty empty 5th_Partial 20 12 0 12 -228856
-66577 0;
#X text 269 144 From here \, each partial has a successive odd-numbered
multiple of the fundamental frequency \, and an amplitude of 1/"odd
number" ---------->>;
#X obj 27 553 dac~;
#X obj 27 447 clip~ -1 1;
#X text 634 144 If you prefer a formula \, each partial has frequency:
f=fundamental*n \, and amplitude: a=1/n;
#X obj 27 520 *~;
#X obj 42 499 tgl 15 0 empty empty <---MUTE/UNMUTE_SQUARE_WAVE 17 7
0 10 -262144 -1 -1 0 1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sqWave 512 float 4;
#X coords 0 1 511 -1 200 100 1 0 0;
#X restore 440 463 graph;
#X obj 292 457 tgl 15 1 empty empty SEE_WAVEFORM 0 -6 0 10 -262144
-1 -1 1 1;
#X text 422 553 -1;
#X text 428 507 0;
#X text 428 457 1;
#X obj 292 503 tabwrite~ sqWave;
#X obj 469 33 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 469 51 60;
#X obj 27 329 * 1;
#X obj 27 428 *~ 0.5;
#X obj 408 293 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 3 256;
#X obj 547 229 r sqFreq;
#X obj 603 229 r reset;
#X obj 547 350 osc~;
#X obj 623 329 /;
#X obj 608 382 *~;
#X obj 547 329 *;
#X msg 623 293 1;
#X msg 568 293 0.75;
#X obj 604 251 t b b b;
#X obj 668 293 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 5 256;
#X obj 807 229 r sqFreq;
#X obj 863 229 r reset;
#X obj 807 350 osc~;
#X obj 883 329 /;
#X obj 868 382 *~;
#X obj 807 329 *;
#X msg 883 293 1;
#X msg 828 293 0.75;
#X obj 864 251 t b b b;
#X obj 938 293 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 7 256;
#X obj 1067 229 r sqFreq;
#X obj 1123 229 r reset;
#X obj 1067 350 osc~;
#X obj 1143 329 /;
#X obj 1128 382 *~;
#X obj 1067 329 *;
#X msg 1143 293 1;
#X msg 1088 293 0.75;
#X obj 1124 251 t b b b;
#X obj 1188 293 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 9 256;
#X text 12 43 By adding pure sine tones together \, we can make other
\, more complex waveforms. In this example we use seven sinewave oscilators
to synthesise a square wave. Each sinewave component \, or partial
is also scaled according to its partial number \, the multiple of the
original frequency. In this case \, we add odd numbered harmonics together
to get an approximate square wave.;
#X obj 292 480 metro 250;
#X text 112 307 to ensure they;
#X text 111 358 not something else.;
#X text 111 370 Open [pd moreOnPhase];
#X text 652 500 <--- you can see this isn't a perfect square wave \,
but its close. Adding in more odd-numbered harmonics would improve
this further.;
#X connect 1 0 2 0;
#X connect 4 0 1 0;
#X connect 4 1 3 0;
#X connect 5 0 51 0;
#X connect 11 0 53 0;
#X connect 12 0 14 0;
#X connect 13 0 25 0;
#X connect 14 0 13 1;
#X connect 16 0 21 0;
#X connect 17 0 24 0;
#X connect 18 0 20 0;
#X connect 19 0 20 1;
#X connect 20 0 54 0;
#X connect 21 0 18 0;
#X connect 22 0 19 0;
#X connect 23 0 18 1;
#X connect 24 0 23 0;
#X connect 24 1 22 0;
#X connect 24 2 55 0;
#X connect 25 0 54 0;
#X connect 41 0 43 0;
#X connect 41 0 50 0;
#X connect 43 0 40 0;
#X connect 43 0 40 1;
#X connect 44 0 43 1;
#X connect 46 0 87 0;
#X connect 51 0 52 0;
#X connect 52 0 4 0;
#X connect 53 0 13 0;
#X connect 54 0 41 0;
#X connect 55 0 21 1;
#X connect 55 0 19 1;
#X connect 56 0 61 0;
#X connect 57 0 64 0;
#X connect 58 0 60 0;
#X connect 59 0 60 1;
#X connect 60 0 54 0;
#X connect 61 0 58 0;
#X connect 62 0 59 0;
#X connect 63 0 58 1;
#X connect 64 0 63 0;
#X connect 64 1 62 0;
#X connect 64 2 65 0;
#X connect 65 0 61 1;
#X connect 65 0 59 1;
#X connect 66 0 71 0;
#X connect 67 0 74 0;
#X connect 68 0 70 0;
#X connect 69 0 70 1;
#X connect 70 0 54 0;
#X connect 71 0 68 0;
#X connect 72 0 69 0;
#X connect 73 0 68 1;
#X connect 74 0 73 0;
#X connect 74 1 72 0;
#X connect 74 2 75 0;
#X connect 75 0 69 1;
#X connect 75 0 71 1;
#X connect 76 0 81 0;
#X connect 77 0 84 0;
#X connect 78 0 80 0;
#X connect 79 0 80 1;
#X connect 80 0 54 0;
#X connect 81 0 78 0;
#X connect 82 0 79 0;
#X connect 83 0 78 1;
#X connect 84 0 83 0;
#X connect 84 1 82 0;
#X connect 84 2 85 0;
#X connect 85 0 79 1;
#X connect 85 0 81 1;
#X connect 87 0 50 0;
#X restore 10 97 pd simple_sqaure;
#N canvas 55 25 1145 596 simple-triangle 0;
#X obj 10 11 cnv 15 200 25 empty empty Simple_Triangle_Wave 20 12 0
14 -233017 -66577 0;
#X obj 409 86 mtof;
#X obj 483 89 s reset;
#X obj 409 64 t f b;
#X obj 409 5 loadbang;
#X obj 409 24 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 409 42 60;
#X obj 11 187 cnv 15 200 220 empty empty Fundamental_(1st_Partial)
20 12 0 12 -228856 -66577 0;
#X obj 83 228 r reset;
#X obj 27 349 osc~;
#X obj 221 187 cnv 15 220 220 empty empty 2nd_Partial 20 12 0 12 -228856
-66577 0;
#X obj 293 218 r reset;
#X obj 237 349 osc~;
#X obj 293 358 /;
#X obj 278 381 *~;
#X obj 237 328 *;
#X msg 293 292 1;
#X obj 293 240 t b b b;
#X obj 27 381 *~ 1;
#X obj 27 572 dac~;
#X obj 27 466 clip~ -1 1;
#X obj 27 539 *~;
#X obj 42 518 tgl 15 0 empty empty <---MUTE/UNMUTE_SQUARE_WAVE 17 7
0 10 -262144 -1 -1 0 1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array triWave 512 float 4;
#X coords 0 1 511 -1 200 100 1 0 0;
#X restore 440 462 graph;
#X obj 292 476 tgl 15 1 empty empty SEE_WAVEFORM 0 -6 0 10 -262144
-1 -1 1 1;
#X text 422 552 -1;
#X text 428 506 0;
#X text 428 456 1;
#X obj 27 328 * 1;
#X obj 27 447 *~ 0.5;
#X obj 348 292 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 3 256;
#X obj 292 499 metro 250;
#X obj 409 108 s triFreq;
#X obj 27 228 r triFreq;
#X obj 237 218 r triFreq;
#X obj 292 522 tabwrite~ triWave;
#X obj 328 311 t f f;
#X obj 328 330 *;
#X obj 451 187 cnv 15 220 220 empty empty 3rd_Partial 20 12 0 12 -228856
-66577 0;
#X obj 523 218 r reset;
#X obj 467 349 osc~;
#X obj 523 358 /;
#X obj 508 381 *~;
#X obj 467 328 *;
#X msg 523 292 1;
#X obj 523 240 t b b b;
#X obj 578 292 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 5 256;
#X obj 467 218 r triFreq;
#X obj 558 311 t f f;
#X obj 558 330 *;
#X obj 681 187 cnv 15 220 220 empty empty 4th_Partial 20 12 0 12 -228856
-66577 0;
#X obj 753 218 r reset;
#X obj 697 349 osc~;
#X obj 753 358 /;
#X obj 738 381 *~;
#X obj 697 328 *;
#X msg 753 292 1;
#X obj 753 240 t b b b;
#X obj 808 292 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 7 256;
#X obj 697 218 r triFreq;
#X obj 788 311 t f f;
#X obj 788 330 *;
#X obj 911 187 cnv 15 220 220 empty empty 5th_Partial 20 12 0 12 -228856
-66577 0;
#X obj 983 218 r reset;
#X obj 927 349 osc~;
#X obj 983 358 /;
#X obj 968 381 *~;
#X obj 927 328 *;
#X msg 983 292 1;
#X obj 983 240 t b b b;
#X obj 1038 292 nbx 5 14 -1e+37 1e+37 0 1 empty empty harmonic_number
0 -8 0 10 -262144 -1 -1 9 256;
#X obj 927 218 r triFreq;
#X obj 1018 311 t f f;
#X obj 1018 330 *;
#X msg 48 292 0;
#X msg 258 292 0;
#X text 12 43 This example works in a very similar way to the previous
square wave example. The formula for each partial's amplitude is slightly
different \, and the phase of each oscilator is set to 0 \, resulting
in a triangular \, rather than square waveform.;
#X msg 488 292 0;
#X msg 718 292 0;
#X msg 948 292 0;
#X text 681 27 N.B.;
#X text 229 144 From here \, each partial has a successive odd-numbered
multiple of the fundamental frequency \, and an amplitude of 1/"odd
number squared" ---------->>;
#X text 594 144 If you prefer a formula \, each partial has frequency:
f=fundamental*n \, and amplitude: a=1/(n^2);
#X text 716 26 if you checked out the [moreOnPhase] subpatch in the
previous example \, you may have noticed this example uses the [osc~]
objects with phase 0 \, meaning we are summing cosine waves and not
sine waves.;
#X connect 1 0 32 0;
#X connect 3 0 1 0;
#X connect 3 1 2 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 8 0 74 0;
#X connect 9 0 18 0;
#X connect 11 0 17 0;
#X connect 12 0 14 0;
#X connect 13 0 14 1;
#X connect 14 0 29 0;
#X connect 15 0 12 0;
#X connect 16 0 13 0;
#X connect 17 0 75 0;
#X connect 17 1 16 0;
#X connect 17 2 30 0;
#X connect 18 0 29 0;
#X connect 20 0 21 0;
#X connect 20 0 35 0;
#X connect 21 0 19 0;
#X connect 21 0 19 1;
#X connect 22 0 21 1;
#X connect 24 0 31 0;
#X connect 28 0 9 0;
#X connect 29 0 20 0;
#X connect 30 0 15 1;
#X connect 30 0 36 0;
#X connect 31 0 35 0;
#X connect 33 0 28 0;
#X connect 34 0 15 0;
#X connect 36 0 37 0;
#X connect 36 1 37 1;
#X connect 37 0 13 1;
#X connect 39 0 45 0;
#X connect 40 0 42 0;
#X connect 41 0 42 1;
#X connect 42 0 29 0;
#X connect 43 0 40 0;
#X connect 44 0 41 0;
#X connect 45 0 77 0;
#X connect 45 1 44 0;
#X connect 45 2 46 0;
#X connect 46 0 43 1;
#X connect 46 0 48 0;
#X connect 47 0 43 0;
#X connect 48 0 49 0;
#X connect 48 1 49 1;
#X connect 49 0 41 1;
#X connect 51 0 57 0;
#X connect 52 0 54 0;
#X connect 53 0 54 1;
#X connect 54 0 29 0;
#X connect 55 0 52 0;
#X connect 56 0 53 0;
#X connect 57 0 78 0;
#X connect 57 1 56 0;
#X connect 57 2 58 0;
#X connect 58 0 55 1;
#X connect 58 0 60 0;
#X connect 59 0 55 0;
#X connect 60 0 61 0;
#X connect 60 1 61 1;
#X connect 61 0 53 1;
#X connect 63 0 69 0;
#X connect 64 0 66 0;
#X connect 65 0 66 1;
#X connect 66 0 29 0;
#X connect 67 0 64 0;
#X connect 68 0 65 0;
#X connect 69 0 79 0;
#X connect 69 1 68 0;
#X connect 69 2 70 0;
#X connect 70 0 67 1;
#X connect 70 0 72 0;
#X connect 71 0 67 0;
#X connect 72 0 73 0;
#X connect 72 1 73 1;
#X connect 73 0 65 1;
#X connect 74 0 9 1;
#X connect 75 0 12 1;
#X connect 77 0 40 1;
#X connect 78 0 52 1;
#X connect 79 0 64 1;
#X restore 10 123 pd simple-triangle;
#N canvas 37 25 1150 733 send_receive_throw_catch 0;
#X obj 814 643 *~ 0.5;
#X obj 814 696 dac~;
#X obj 10 11 cnv 15 200 25 empty empty Simple_Square_Wave 20 12 0 14
-233017 -66577 0;
#X text 12 42 Soon after some introductory patching \, a Pd user will
soon discover the slight inconvenience of connection lines running
over objects to reach other objects. Most likely you will end up with
a mess of Pd spaghetti at some point.;
#X text 12 99 Luckily \, there's a solution. Using the send and receive
objects ( [s] & [r] ) data can be sent from one part of the patch to
another without connecting lines. These objects can also send data
to other windows. The send and receive objects need an argument to
identify each other. This argument is usually in the form of a word.
;
#X obj 14 182 cnv 15 200 25 empty empty Sending_Control_Data: 20 12
0 12 -228856 -66577 0;
#X obj 264 182 cnv 15 200 25 empty empty Sending_Audio_Signals 20 12
0 12 -228856 -66577 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array one2many 128 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 128 -1 200 140 1 0 0;
#X restore 456 302 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array many2master 512 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0;
#X coords 0 1 512 -1 200 140 1;
#X restore 889 574 graph;
#X obj 677 552 catch~ many-to-master;
#X text 391 219 To send audio signals wirelessly \, we can use [s~]
and [r~] \, but there are some slight complications with this method.
The audio version of [s]&[r] can only have one send - [s~] - going
to multiple receives - [r~].;
#X obj 677 694 tabwrite~ many2master;
#X obj 814 618 *~;
#X obj 8 281 cnv 15 50 80 empty empty empty 20 12 0 14 -245500 -66577
0;
#X floatatom 14 371 5 0 0 0 - - -;
#X obj 15 253 mtof;
#X text 86 299 object with the argument \,;
#X text 86 312 osc;
#X text 56 339 <--- as you can see here!;
#X obj 15 222 nbx 5 14 -1e+37 1e+37 0 1 empty empty empty 0 -8 0 10
-262144 -1 -1 60 256;
#X text 56 286 <--- send frequency to an [r];
#X obj 259 347 cnv 15 100 55 empty empty empty 20 12 0 14 -245500 -66577
0;
#X obj 264 353 s~ one-to-many;
#X obj 264 379 r~ one-to-many;
#X obj 264 247 t b b;
#X msg 264 288 0 1000;
#X obj 264 224 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 264 314 line~;
#X obj 264 423 tabwrite~ one2many;
#X msg 393 384 1;
#X obj 393 364 loadbang;
#X obj 264 267 del 50;
#X msg 331 288 0.5 50;
#X obj 393 402 metro 25;
#X obj 890 267 cnv 15 125 55 empty empty empty 20 12 0 14 -245500 -66577
0;
#X obj 897 273 throw~ many-to-one;
#X obj 896 299 catch~ many-to-one;
#X text 783 218 In cases where we need to do the opposite - send many
sources to one receive - we can use [throw~] and [catch~];
#X text 783 339 To see these in action \, have a look at the example
below...;
#X obj 14 482 cnv 15 300 25 empty empty Example_using_s/r_s~/r~_throw~/catch~
20 12 0 12 -228856 -66577 0;
#X obj 829 517 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 814 664 clip~ -1 1;
#X msg 758 643 1;
#X obj 758 619 loadbang;
#X obj 758 664 metro 25;
#X msg 14 580 0 1000;
#X obj 14 516 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 14 606 line~;
#X obj 14 559 del 50;
#X msg 81 580 0.5 50;
#X obj 14 635 s~ env-to-many;
#X text 849 516 <--- TURN SOUND ON/OFF;
#X text 30 516 <--- TRIGGER NOTE;
#X obj 238 633 osc~;
#X obj 238 612 * 1;
#X obj 238 654 *~ 1;
#X obj 144 581 mtof;
#X obj 144 560 nbx 5 14 -1e+37 1e+37 0 1 empty empty empty 0 -8 0 10
-262144 -1 -1 60 256;
#X obj 14 539 t b b b;
#X obj 144 604 s oscFreq;
#X obj 15 286 s freq;
#X obj 14 339 r freq;
#X obj 238 549 r oscFreq;
#X obj 238 572 t f b;
#X msg 265 592 0.75;
#X obj 238 705 throw~ many-to-master;
#X obj 275 654 r~ env-to-many;
#X obj 238 685 *~;
#X obj 375 633 osc~;
#X obj 375 549 r oscFreq;
#X obj 375 572 t f b;
#X msg 402 592 0.75;
#X obj 375 705 throw~ many-to-master;
#X obj 424 654 r~ env-to-many;
#X obj 375 685 *~;
#X obj 375 612 * 3;
#X obj 375 654 *~ 0.33;
#X obj 549 549 r oscFreq;
#X obj 509 579 noise~;
#X obj 524 685 *~;
#X obj 573 661 r~ env-to-many;
#X obj 524 705 throw~ many-to-master;
#X obj 524 661 *~ 0.5;
#X obj 524 627 bp~ 100 1;
#X connect 0 0 41 0;
#X connect 9 0 12 0;
#X connect 9 0 11 0;
#X connect 12 0 0 0;
#X connect 15 0 60 0;
#X connect 19 0 15 0;
#X connect 23 0 28 0;
#X connect 24 0 31 0;
#X connect 24 1 32 0;
#X connect 25 0 27 0;
#X connect 26 0 24 0;
#X connect 27 0 22 0;
#X connect 29 0 33 0;
#X connect 30 0 29 0;
#X connect 31 0 25 0;
#X connect 32 0 27 0;
#X connect 33 0 28 0;
#X connect 40 0 12 1;
#X connect 41 0 1 0;
#X connect 41 0 1 1;
#X connect 42 0 44 0;
#X connect 43 0 42 0;
#X connect 44 0 11 0;
#X connect 45 0 47 0;
#X connect 46 0 58 0;
#X connect 47 0 50 0;
#X connect 48 0 45 0;
#X connect 49 0 47 0;
#X connect 53 0 55 0;
#X connect 54 0 53 0;
#X connect 55 0 67 0;
#X connect 56 0 59 0;
#X connect 57 0 56 0;
#X connect 58 0 48 0;
#X connect 58 1 49 0;
#X connect 58 2 57 0;
#X connect 61 0 14 0;
#X connect 62 0 63 0;
#X connect 63 0 54 0;
#X connect 63 1 64 0;
#X connect 64 0 53 1;
#X connect 66 0 67 1;
#X connect 67 0 65 0;
#X connect 68 0 76 0;
#X connect 69 0 70 0;
#X connect 70 0 75 0;
#X connect 70 1 71 0;
#X connect 71 0 68 1;
#X connect 73 0 74 1;
#X connect 74 0 72 0;
#X connect 75 0 68 0;
#X connect 76 0 74 0;
#X connect 77 0 83 1;
#X connect 78 0 83 0;
#X connect 79 0 81 0;
#X connect 80 0 79 1;
#X connect 82 0 79 0;
#X connect 83 0 82 0;
#X restore 10 233 pd send_receive_throw_catch;
#X text 196 233 How to connect in PD wirelessly;
#X text 500 92 BRINGING IT ALL TOGETHER;
#N canvas 736 25 704 847 more_fun 0;
#X text 66 196 amplitude factor for each harmonic = 1/n *A0;
#X floatatom 68 269 5 0 0 0 - - -;
#X obj 68 360 osc~;
#X obj 68 389 *~ 1;
#X obj 120 360 osc~;
#X text 68 177 odd harmonics: 1 \, 3 \, 5 \, 7;
#X floatatom 120 317 5 0 0 0 - - -;
#X obj 120 389 *~ 0.33;
#X obj 180 360 osc~;
#X floatatom 180 317 5 0 0 0 - - -;
#X obj 240 360 osc~;
#X floatatom 240 317 5 0 0 0 - - -;
#X obj 180 389 *~ 0.2;
#X obj 240 389 *~ 0.14;
#X msg 349 334 0;
#X obj 305 360 osc~;
#X floatatom 305 317 5 0 0 0 - - -;
#X obj 305 389 *~ 0.11;
#X obj 258 459 *~;
#X obj 411 428 line~;
#X obj 409 380 del 10;
#X obj 410 334 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 410 355 t b b;
#X obj 258 487 dac~;
#X obj 67 247 line;
#X obj 405 111 sel 0 1 2 3 4 5 6 7;
#X obj 406 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 422 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 439 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 455 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 475 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 491 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 507 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 523 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 406 164 41;
#X msg 445 165 82;
#X msg 484 165 100;
#X msg 67 227 \$1 10;
#X msg 457 407 1 0;
#X msg 410 406 0 500;
#X obj 120 299 * 3;
#X obj 180 299 * 5;
#X obj 240 299 * 7;
#X obj 305 299 * 9;
#X obj 124 4 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1 1
;
#X obj 126 78 f;
#X obj 162 78 + 1;
#X floatatom 126 122 5 0 0 0 - - -;
#X msg 147 57 0;
#X obj 126 100 mod 8;
#X obj 124 37 metro 150;
#X obj 126 139 s beat;
#X obj 404 90 r beat;
#X text 121 223 <- \$1 is a placeholder--it has no value until you
send a message to the message box;
#X text 122 246 <- creates smooth ramps between values and outputs
them as numbers (not signal like line~);
#X obj 60 539;
#X connect 1 0 2 0;
#X connect 1 0 40 0;
#X connect 1 0 41 0;
#X connect 1 0 42 0;
#X connect 1 0 43 0;
#X connect 2 0 3 0;
#X connect 3 0 18 0;
#X connect 4 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 18 0;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 13 0;
#X connect 11 0 10 0;
#X connect 12 0 18 0;
#X connect 13 0 18 0;
#X connect 14 0 10 1;
#X connect 14 0 8 1;
#X connect 14 0 4 1;
#X connect 14 0 2 1;
#X connect 14 0 15 1;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 23 0;
#X connect 18 0 23 1;
#X connect 19 0 18 1;
#X connect 20 0 39 0;
#X connect 21 0 22 0;
#X connect 22 0 20 0;
#X connect 22 1 38 0;
#X connect 24 0 1 0;
#X connect 25 0 26 0;
#X connect 25 1 27 0;
#X connect 25 2 28 0;
#X connect 25 3 29 0;
#X connect 25 4 30 0;
#X connect 25 5 31 0;
#X connect 25 6 32 0;
#X connect 25 7 33 0;
#X connect 26 0 34 0;
#X connect 29 0 35 0;
#X connect 30 0 34 0;
#X connect 31 0 36 0;
#X connect 33 0 35 0;
#X connect 34 0 37 0;
#X connect 34 0 21 0;
#X connect 35 0 37 0;
#X connect 35 0 21 0;
#X connect 36 0 37 0;
#X connect 36 0 21 0;
#X connect 37 0 24 0;
#X connect 38 0 19 0;
#X connect 39 0 19 0;
#X connect 40 0 6 0;
#X connect 41 0 9 0;
#X connect 42 0 11 0;
#X connect 43 0 16 0;
#X connect 44 0 48 0;
#X connect 44 0 50 0;
#X connect 45 0 46 0;
#X connect 45 0 49 0;
#X connect 46 0 45 1;
#X connect 47 0 51 0;
#X connect 48 0 45 1;
#X connect 49 0 47 0;
#X connect 50 0 45 0;
#X connect 52 0 25 0;
#X restore 760 174 pd more_fun;
#N canvas 253 104 1009 490 switch 0;
#X obj 68 16 hradio 20 1 0 3 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X floatatom 67 46 5 0 0 0 - - -;
#X obj 51 212 osc~;
#X obj 239 36 phasor~;
#X obj 299 35 noise~;
#X obj 51 233 *~;
#X obj 83 212 line~;
#X msg 83 192 \$1 10;
#X obj 83 170 == 0;
#X text 124 163 <- conditional logic: if incoming number is equal to
0 \, output 1;
#X floatatom 127 193 5 0 0 0 - - -;
#X obj 49 265 *~ 0.1;
#X floatatom 39 185 5 0 0 0 - - -;
#X obj 197 277 *~;
#X obj 253 255 line~;
#X msg 253 235 \$1 10;
#X obj 195 309 *~ 0.1;
#X obj 195 326 dac~;
#X floatatom 185 229 5 0 0 0 - - -;
#X obj 197 256 phasor~;
#X obj 331 272 *~;
#X obj 387 249 line~;
#X msg 387 230 \$1 10;
#X obj 329 303 *~ 0.1;
#X obj 329 321 dac~;
#X obj 387 208 == 2;
#X obj 253 214 == 1;
#X obj 331 251 noise~;
#X obj 67 62 s source-sel;
#X obj 83 144 r source-sel;
#X obj 253 194 r source-sel;
#X obj 387 189 r source-sel;
#X obj 48 305 dac~;
#X connect 0 0 1 0;
#X connect 1 0 28 0;
#X connect 2 0 5 0;
#X connect 5 0 11 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 8 0 10 0;
#X connect 11 0 32 0;
#X connect 11 0 32 1;
#X connect 12 0 2 0;
#X connect 13 0 16 0;
#X connect 14 0 13 1;
#X connect 15 0 14 0;
#X connect 16 0 17 0;
#X connect 16 0 17 1;
#X connect 18 0 19 0;
#X connect 19 0 13 0;
#X connect 20 0 23 0;
#X connect 21 0 20 1;
#X connect 22 0 21 0;
#X connect 23 0 24 0;
#X connect 23 0 24 1;
#X connect 25 0 22 0;
#X connect 26 0 15 0;
#X connect 27 0 20 0;
#X connect 29 0 8 0;
#X connect 30 0 26 0;
#X connect 31 0 25 0;
#X restore 760 203 pd switch;
#X obj 9 9 cnv 15 700 40 empty empty Lab3-Additive_Synthesis 20 12
0 20 -233017 -66577 0;
#X obj 9 56 cnv 15 230 25 empty empty 1:_Synthesising_Waveforms 20
12 0 14 -228856 -66577 0;
#X obj 9 196 cnv 15 270 25 empty empty 1:_Patching_'Wirelessly'_in_PD
20 12 0 14 -228856 -66577 0;
#X obj 499 56 cnv 15 270 25 empty empty 3:_Bringing_It_All_Together
20 12 0 14 -228856 -66577 0;
#N canvas 262 34 991 762 moreOnPhase 0;
#X obj 10 11 cnv 15 200 25 empty empty More_on_phase 20 12 0 14 -233017
-66577 0;
#N canvas 32 25 352 90 init 0;
#X obj 10 11 loadbang;
#X msg 200 34 \; sineWave sinesum 128 1;
#X msg 10 34 \; cosineWave cosinesum 128 0 1;
#X connect 0 0 2 0;
#X connect 0 0 1 0;
#X restore 770 2 pd init;
#N canvas 0 22 450 278 (subpatch) 0;
#X array cosineWave 131 float 1;
#A 0 0.998795 1 0.998795 0.995185 0.989177 0.980785 0.970031 0.95694
0.941544 0.92388 0.903989 0.881921 0.857729 0.83147 0.803208 0.773011
0.740952 0.707107 0.671559 0.634394 0.5957 0.555571 0.514103 0.471398
0.427556 0.382684 0.336891 0.290286 0.242981 0.195091 0.146732 0.0980184
0.049069 1.32679e-06 -0.0490663 -0.0980157 -0.146729 -0.195089 -0.242979
-0.290283 -0.336888 -0.382682 -0.427554 -0.471395 -0.514101 -0.555569
-0.595698 -0.634392 -0.671557 -0.707105 -0.74095 -0.773009 -0.803206
-0.831468 -0.857727 -0.88192 -0.903988 -0.923879 -0.941543 -0.95694
-0.970031 -0.980785 -0.989176 -0.995184 -0.998795 -1 -0.998796 -0.995185
-0.989177 -0.980786 -0.970032 -0.956941 -0.941545 -0.923881 -0.903991
-0.881923 -0.85773 -0.831471 -0.803209 -0.773013 -0.740953 -0.707109
-0.671561 -0.634396 -0.595702 -0.555573 -0.514106 -0.4714 -0.427558
-0.382687 -0.336893 -0.290288 -0.242984 -0.195094 -0.146734 -0.098021
-0.0490716 -3.98038e-06 0.0490637 0.0980131 0.146726 0.195086 0.242976
0.290281 0.336886 0.382679 0.427551 0.471393 0.514099 0.555566 0.595696
0.63439 0.671556 0.707103 0.740948 0.773007 0.803205 0.831467 0.857726
0.881919 0.903987 0.923878 0.941542 0.956939 0.97003 0.980784 0.989176
0.995184 0.998795 1 0.998796;
#X coords 0 1 130 -1 200 140 1 0 0;
#X restore 397 39 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array sineWave 131 float 1;
#A 0 -0.0490676 0 0.0490676 0.0980171 0.14673 0.19509 0.24298 0.290284
0.33689 0.382683 0.427555 0.471396 0.514102 0.55557 0.595699 0.634393
0.671558 0.707106 0.740951 0.77301 0.803207 0.831469 0.857728 0.881921
0.903989 0.923879 0.941544 0.95694 0.970031 0.980785 0.989176 0.995185
0.998795 1 0.998796 0.995185 0.989177 0.980786 0.970032 0.956941 0.941545
0.92388 0.90399 0.881922 0.85773 0.831471 0.803209 0.773012 0.740952
0.707108 0.67156 0.634395 0.595701 0.555572 0.514105 0.471399 0.427557
0.382686 0.336892 0.290287 0.242983 0.195093 0.146733 0.0980197 0.0490703
2.65359e-06 -0.049065 -0.0980144 -0.146728 -0.195088 -0.242977 -0.290282
-0.336887 -0.382681 -0.427552 -0.471394 -0.5141 -0.555568 -0.595697
-0.634391 -0.671557 -0.707104 -0.740949 -0.773008 -0.803205 -0.831468
-0.857727 -0.88192 -0.903988 -0.923878 -0.941543 -0.956939 -0.97003
-0.980785 -0.989176 -0.995184 -0.998795 -1 -0.998796 -0.995185 -0.989177
-0.980786 -0.970032 -0.956942 -0.941545 -0.923881 -0.903991 -0.881923
-0.857731 -0.831472 -0.80321 -0.773013 -0.740954 -0.70711 -0.671562
-0.634397 -0.595703 -0.555574 -0.514107 -0.471401 -0.42756 -0.382688
-0.336895 -0.29029 -0.242985 -0.195095 -0.146736 -0.0980223 -0.0490729
-5.30718e-06 0.0490623;
#X coords 0 1 130 -1 200 140 1 0 0;
#X restore 616 39 graph;
#X text 9 76 In this square wave example \, we set the phase of all
[osc~] objects to 0.75 \, that's three quarters of the way through
one cycle (3/4 = 0.75).;
#X text 9 38 By default \, the [osc~] object loops round a cosine wave:
a wave that starts at 1 \, and oscilates back and forth between 1/-1.
;
#X text 387 39 1;
#X text 387 105 0;
#X text 381 165 -1;
#X text 606 39 1;
#X text 606 105 0;
#X text 600 165 -1;
#X text 9 115 So when we set the phase of [osc~] to 0.75 \, the waveform
starts from 0 \, then ramps up to 1 \, continuing in the same way as
the cosine waveform. This is a sinewave.;
#X text 509 24 [osc~] phase=0;
#X text 710 24 [osc~] phase=0.75;
#X text 9 156 We took the trouble to sum sinewaves (not cosines) in
the previous example so that the resulting waveform looks sqare. in
practice \, summing cosines in the same way sounds pretty much the
same \, but isn't as clear visually when graphed. In practice \, it's
not essential to be specific with sines/cosines \, just make sure you
sync the [osc~] objects are reset so that they start together.;
#X obj 864 392 s phExAudio;
#X obj 864 374 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 882 373 <--- HEAR AUDIO;
#X obj 390 320 bng 30 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 390 360 0;
#X obj 510 320 bng 30 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 390 388 s oscPhase;
#X obj 8 435 cnv 15 970 315 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 11 509 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 11 528 60;
#X obj 11 548 t f b;
#X obj 141 556 osc~;
#X obj 11 567 mtof;
#X msg 348 508 3;
#X obj 367 567 /;
#X msg 367 549 1;
#X obj 251 617 *~;
#X obj 11 586 s phExFreq;
#X obj 46 567 s phExReset;
#X obj 141 529 r phExFreq;
#X obj 163 510 r oscPhase;
#X obj 251 596 osc~;
#X obj 251 489 r phExFreq;
#X obj 272 577 r oscPhase;
#X obj 348 526 t f b f;
#X obj 251 550 *;
#X obj 348 489 r phExReset;
#X obj 547 567 /;
#X msg 547 549 1;
#X obj 431 617 *~;
#X obj 431 596 osc~;
#X obj 431 489 r phExFreq;
#X obj 452 577 r oscPhase;
#X obj 528 526 t f b f;
#X obj 431 550 *;
#X obj 528 489 r phExReset;
#X obj 727 567 /;
#X msg 727 549 1;
#X obj 611 617 *~;
#X obj 611 596 osc~;
#X obj 611 489 r phExFreq;
#X obj 632 577 r oscPhase;
#X obj 708 526 t f b f;
#X obj 611 550 *;
#X obj 708 489 r phExReset;
#X obj 907 567 /;
#X msg 907 549 1;
#X obj 791 617 *~;
#X obj 791 596 osc~;
#X obj 791 489 r phExFreq;
#X obj 812 577 r oscPhase;
#X obj 888 526 t f b f;
#X obj 791 550 *;
#X obj 888 489 r phExReset;
#X obj 141 656 *~ 0.5;
#X msg 38 611 0.75;
#X obj 38 629 s oscPhase;
#X obj 11 489 loadbang;
#X obj 141 675 clip~ -1 1;
#X obj 141 726 dac~;
#X obj 213 675 r phExAudio;
#X obj 141 704 *~;
#X msg 528 508 5;
#X msg 708 508 7;
#X msg 888 508 9;
#X text 10 470 Initialise;
#X text 137 470 Generate Square Wave;
#X obj 349 679 tgl 15 1 empty empty SEE_WAVEFORM 0 -6 0 10 -262144
-1 -1 1 1;
#X obj 349 702 metro 250;
#X text 10 439 This looks a bit different \, but is functionally the
same as the previous squarewave example;
#X obj 625 263 cnv 15 80 25 empty empty RESULT 20 12 0 12 -233017 -66577
0;
#X text 508 299 PHASE 0.75 SINE;
#X text 388 299 PHASE 0: COSINE;
#X obj 389 263 cnv 15 160 25 empty empty SWITCH_SINE/COSINE 20 12 0
12 -233017 -66577 0;
#X msg 510 360 0.75;
#X obj 9 263 cnv 15 160 25 empty empty SHOULD_I_CARE? 20 12 0 12 -233017
-66577 0;
#X text 9 333 Click on the two bang objects to switch the phases between
0 and 0.75. The sound shouldn't be significantly different \, but the
plotted waveform will be.;
#X text 9 299 It depends \, let's see this at work using the same squarewave
example:;
#X text 9 380 One difference that may affect a mix is that the cosine
version of this patch has higher peaks \, and may give you less headroom
to work with for the same overall volume.;
#N canvas 0 22 450 300 (subpatch) 0;
#X array phExSqWave 512 float 4;
#X coords 0 1 511 -1 200 100 1 0 0;
#X restore 625 308 graph;
#X text 607 398 -1;
#X text 613 352 0;
#X text 613 302 1;
#X obj 349 725 tabwrite~ phExSqWave;
#X connect 17 0 16 0;
#X connect 19 0 20 0;
#X connect 20 0 22 0;
#X connect 21 0 90 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 28 0;
#X connect 26 1 34 0;
#X connect 26 1 71 0;
#X connect 27 0 70 0;
#X connect 28 0 33 0;
#X connect 29 0 40 0;
#X connect 30 0 32 1;
#X connect 31 0 30 0;
#X connect 32 0 70 0;
#X connect 35 0 27 0;
#X connect 36 0 27 1;
#X connect 37 0 32 0;
#X connect 38 0 41 0;
#X connect 39 0 37 1;
#X connect 40 0 41 1;
#X connect 40 1 31 0;
#X connect 40 2 30 1;
#X connect 41 0 37 0;
#X connect 42 0 29 0;
#X connect 43 0 45 1;
#X connect 44 0 43 0;
#X connect 45 0 70 0;
#X connect 46 0 45 0;
#X connect 47 0 50 0;
#X connect 48 0 46 1;
#X connect 49 0 50 1;
#X connect 49 1 44 0;
#X connect 49 2 43 1;
#X connect 50 0 46 0;
#X connect 51 0 78 0;
#X connect 52 0 54 1;
#X connect 53 0 52 0;
#X connect 54 0 70 0;
#X connect 55 0 54 0;
#X connect 56 0 59 0;
#X connect 57 0 55 1;
#X connect 58 0 59 1;
#X connect 58 1 53 0;
#X connect 58 2 52 1;
#X connect 59 0 55 0;
#X connect 60 0 79 0;
#X connect 61 0 63 1;
#X connect 62 0 61 0;
#X connect 63 0 70 0;
#X connect 64 0 63 0;
#X connect 65 0 68 0;
#X connect 66 0 64 1;
#X connect 67 0 68 1;
#X connect 67 1 62 0;
#X connect 67 2 61 1;
#X connect 68 0 64 0;
#X connect 69 0 80 0;
#X connect 70 0 74 0;
#X connect 71 0 72 0;
#X connect 73 0 24 0;
#X connect 74 0 77 0;
#X connect 74 0 99 0;
#X connect 76 0 77 1;
#X connect 77 0 75 0;
#X connect 77 0 75 1;
#X connect 78 0 49 0;
#X connect 79 0 58 0;
#X connect 80 0 67 0;
#X connect 83 0 84 0;
#X connect 84 0 99 0;
#X connect 90 0 22 0;
#X restore 10 149 pd moreOnPhase;
#X text 140 123 Make a triangle wave using additive synthesis;
#X text 140 97 Make a square wave using additive synthesis;
#X text 140 149 Some extra detail on phase and [osc~];
#N canvas 333 58 873 692 Example1-SoundExplorer 0;
#X obj 13 87 hsl 120 30 0 128 0 1 empty empty NOTE-SLIDER 5 15 0 16
-262130 -1 -1 8700 1;
#X obj 10 121 s ex1NoteSlider;
#X obj 10 10 cnv 15 320 25 empty empty Example_1:_Additive_Sound_Explorer
20 12 0 14 -228856 -66577 0;
#X obj 153 87 hsl 120 30 0 1 0 1 empty empty AMPLITUDE 5 15 0 16 -204786
-1 -1 10200 1;
#X obj 10 204 cnv 15 230 200 empty empty FREQUENCY_MULTIPLIERS 20 12
0 15 -228856 -66577 0;
#X obj 25 240 vsl 30 140 1 10 0 1 empty empty PAR-1 0 -9 0 9 -261682
-1 -1 0 1;
#X obj 59 240 vsl 30 140 1 10 0 1 empty empty PAR-2 0 -9 0 9 -261682
-1 -1 1700 1;
#X obj 93 240 vsl 30 140 1 10 0 1 empty empty PAR-3 0 -9 0 9 -261682
-1 -1 3100 1;
#X obj 127 240 vsl 30 140 1 10 0 1 empty empty PAR-4 0 -9 0 9 -261682
-1 -1 6300 1;
#X obj 161 240 vsl 30 140 1 10 0 1 empty empty PAR-5 0 -9 0 9 -261682
-1 -1 7000 1;
#X obj 195 240 vsl 30 140 1 10 0 1 empty empty PAR-6 0 -9 0 9 -261682
-1 -1 10800 1;
#X obj 10 446 cnv 15 230 200 empty empty PARTIAL_AMPLITUDES 20 12 0
15 -228856 -66577 0;
#X obj 25 407 s e1fm1;
#X obj 72 407 s e1fm2;
#X obj 118 407 s e1fm3;
#X obj 102 425 s e1fm4;
#X obj 149 425 s e1fm5;
#X obj 195 425 s e1fm6;
#X obj 25 483 vsl 30 140 0 1 0 1 empty empty PAR-1 0 -9 0 9 -203904
-1 -1 13900 1;
#X obj 59 483 vsl 30 140 0 1 0 1 empty empty PAR-6 0 -9 0 9 -203904
-1 -1 7800 1;
#X obj 93 483 vsl 30 140 0 1 0 1 empty empty PAR-3 0 -9 0 9 -203904
-1 -1 7200 1;
#X obj 127 483 vsl 30 140 0 1 0 0 empty empty PAR-4 0 -9 0 9 -203904
-1 -1 0 1;
#X obj 161 483 vsl 30 140 0 1 0 1 empty empty PAR-5 0 -9 0 9 -203904
-1 -1 4100 1;
#X obj 195 483 vsl 30 140 0 1 0 1 empty empty PAR-6 0 -9 0 9 -203904
-1 -1 5200 1;
#X obj 25 649 s e1pa1;
#X obj 72 649 s e1pa2;
#X obj 118 649 s e1pa3;
#X obj 102 667 s e1pa4;
#X obj 149 667 s e1pa5;
#X obj 195 667 s e1pa6;
#X floatatom 25 385 4 0 0 0 - - -;
#X floatatom 59 385 4 0 0 0 - - -;
#X floatatom 93 385 4 0 0 0 - - -;
#X floatatom 127 385 4 0 0 0 - - -;
#X floatatom 160 385 4 0 0 0 - - -;
#X floatatom 195 385 4 0 0 0 - - -;
#X floatatom 25 628 4 0 0 0 - - -;
#X floatatom 59 628 4 0 0 0 - - -;
#X floatatom 93 628 4 0 0 0 - - -;
#X floatatom 127 628 4 0 0 0 - - -;
#X floatatom 160 628 4 0 0 0 - - -;
#X floatatom 195 628 4 0 0 0 - - -;
#X obj 257 407 cnv 10 300 25 empty empty ADDITIVE_SYNTH_PARTIALS 20
12 0 15 -228856 -66577 0;
#X obj 258 465 * 1;
#X obj 258 483 osc~;
#X obj 258 436 r freq;
#X obj 284 465 r phase;
#X obj 258 519 *~;
#X obj 300 436 r e1fm1;
#X obj 300 497 r e1pa1;
#X obj 358 465 * 1;
#X obj 358 483 osc~;
#X obj 358 436 r freq;
#X obj 384 465 r phase;
#X obj 358 519 *~;
#X obj 458 465 * 1;
#X obj 458 483 osc~;
#X obj 458 436 r freq;
#X obj 484 465 r phase;
#X obj 458 519 *~;
#X obj 258 595 * 1;
#X obj 258 613 osc~;
#X obj 258 566 r freq;
#X obj 284 595 r phase;
#X obj 258 649 *~;
#X obj 358 595 * 1;
#X obj 358 613 osc~;
#X obj 358 566 r freq;
#X obj 384 595 r phase;
#X obj 358 649 *~;
#X obj 458 595 * 1;
#X obj 458 613 osc~;
#X obj 458 566 r freq;
#X obj 484 595 r phase;
#X obj 458 649 *~;
#X obj 400 436 r e1fm2;
#X obj 400 497 r e1pa2;
#X obj 500 436 r e1fm3;
#X obj 500 497 r e1pa3;
#X obj 300 566 r e1fm4;
#X obj 300 627 r e1pa4;
#X obj 400 566 r e1fm5;
#X obj 400 627 r e1pa5;
#X obj 500 566 r e1fm6;
#X obj 500 627 r e1pa6;
#X obj 257 204 cnv 10 120 25 empty empty ENVELOPE 20 12 0 15 -228856
-66577 0;
#X obj 257 237 r ex1NoteSlider;
#X obj 13 147 hsl 120 30 0 1000 0 0 empty empty ATTACK 5 15 0 16 -261234
-1 -1 0 1;
#X obj 153 147 hsl 120 30 0 1000 0 1 empty empty RELEASE 5 15 0 16
-232576 -1 -1 4600 1;
#X obj 10 181 s ex1Attack;
#X obj 150 181 s ex1Release;
#X obj 320 300 r ex1Attack;
#X obj 320 279 r ex1Release;
#X obj 257 321 f;
#X obj 305 321 f;
#X obj 257 365 line~;
#X obj 257 390 s~ ex1Env;
#X text 8 35 This additive synthesiser has 6 partials. Experiment with
different frequency/amplitude multipliers and see the effect this has
on the timbre. Can you figure out how everything works?;
#X obj 150 121 s ex1Amp;
#X obj 258 537 throw~ lab3ex1;
#X obj 358 537 throw~ lab3ex1;
#X obj 458 537 throw~ lab3ex1;
#X obj 258 667 throw~ lab3ex1;
#X obj 358 667 throw~ lab3ex1;
#X obj 458 667 throw~ lab3ex1;
#X obj 601 247 catch~ lab3ex1;
#X obj 601 472 clip~ -1 1;
#X obj 601 512 dac~;
#X obj 290 121 s ex1Graph;
#X obj 290 87 tgl 30 0 empty empty GRAPH_OUTPUT 32 16 0 15 -262144
-1 -1 0 1;
#X obj 690 274 r ex1Graph;
#N canvas 32 25 450 278 (subpatch) 0;
#X array ex1-Waveform 512 float 1;
#A 0 0.0831032 0.152115 0.0480494 0.00407138 -0.00398081 -0.0261796
0.0349674 0.061713 0.0246449 0.132969 0.252298 0.155601 0.0389291 0.0133425
-0.0408755 -0.0539751 -0.0366207 -0.122359 -0.147286 -0.0476647 -0.0725831
-0.16138 -0.111018 -0.0508257 -0.0220062 0.0633914 0.0633322 -0.0126554
0.0193381 0.0277487 -0.0567586 -0.0117033 0.103277 0.12159 0.16763
0.216384 0.131361 0.0588917 0.0270668 -0.0919754 -0.134539 -0.0459553
-0.062578 -0.121344 -0.0690294 -0.0586014 -0.0957573 -0.0641601 -0.075387
-0.0872811 0.0381978 0.0839572 -0.033904 -0.0532169 0.00864528 0.00927453
0.0517329 0.105873 0.101425 0.190186 0.272518 0.126711 -0.0325717 -0.037494
-0.0635612 -0.099226 -0.0737939 -0.0982938 -0.0856134 0.0257554 -0.00667987
-0.142113 -0.118327 -0.0502817 -0.0572361 -0.0201959 -0.00759057 -0.0524448
0.00815898 0.06299 -0.0060088 0.0269856 0.160679 0.180031 0.17514 0.18837
0.0838927 -0.0143351 -0.0271516 -0.105181 -0.143048 -0.035473 -0.00524997
-0.0521699 -0.00700304 -0.0100334 -0.103297 -0.1141 -0.112294 -0.131449
-0.0332174 0.0326809 -0.0448261 -0.0259235 0.0806864 0.076252 0.0746682
0.131823 0.134978 0.17154 0.206639 0.0528551 -0.0952524 -0.0523498
-0.0365311 -0.0845973 -0.0480879 -0.0179532 -0.00447798 0.0572129 -0.0155933
-0.189089 -0.177361 -0.0869392 -0.105279 -0.0851674 -0.0188836 -0.00331686
0.0674448 0.123828 0.0402672 0.0387424 0.166785 0.171707 0.110698 0.107774
0.0377904 -0.038273 -0.0195987 -0.0569287 -0.0943423 0.014228 0.0646087
-0.0103811 -0.0187933 -0.0461388 -0.165627 -0.187971 -0.148919 -0.147564
-0.0520666 0.0553984 0.0229935 0.0407805 0.135001 0.0972871 0.0435525
0.0966183 0.109139 0.107396 0.130361 0.0263464 -0.0756834 0.00130444
0.0345431 -0.0412651 -0.0170887 0.0349032 0.0126804 -0.000208652 -0.0929519
-0.251621 -0.218378 -0.0914716 -0.100687 -0.0806848 0.038516 0.089164
0.115202 0.124611 0.0203493 -0.00559368 0.120009 0.126964 0.0443596
0.0666343 0.0696542 0.0208707 0.0356812 0.00533722 -0.0512106 0.0303871
0.0723753 -0.043786 -0.0993972 -0.111852 -0.20219 -0.20883 -0.129215
-0.101843 -0.0132517 0.11204 0.0876749 0.0554452 0.105289 0.0487287
-0.026114 0.0412346 0.0867378 0.080947 0.121843 0.0838835 0.00798427
0.0644841 0.0755812 -0.0383962 -0.0400124 0.0190411 -0.0330901 -0.0909999
-0.151154 -0.246144 -0.18658 -0.043953 -0.0524025 -0.0455139 0.0899898
0.132511 0.0812697 0.0435549 -0.040878 -0.0514592 0.0871624 0.117788
0.0450242 0.103377 0.162221 0.0979359 0.0557045 0.00777489 -0.0641619
-0.0118383 0.0237955 -0.103154 -0.161768 -0.117727 -0.155712 -0.163099
-0.0773141 -0.0436006 0.0154223 0.120989 0.0781284 -0.00749894 0.0213663
-0.00346649 -0.057962 0.0339519 0.120616 0.122418 0.169204 0.1616 0.0644941
0.0569858 0.039505 -0.0867221 -0.0973248 -0.0181768 -0.064344 -0.124895
-0.127136 -0.162438 -0.117671 -0.00556782 -0.0301369 -0.0494074 0.0742839
0.098233 -0.00630036 -0.0450286 -0.058241 -0.0296611 0.111429 0.159637
0.0965492 0.160985 0.2249 0.106035 -0.00705411 -0.0515506 -0.100606
-0.0568024 -0.00978447 -0.109318 -0.142784 -0.0496531 -0.0678168 -0.123154
-0.0695409 -0.0382862 -0.0125982 0.0629978 0.0175585 -0.076614 -0.0235586
0.0158039 -0.0140121 0.0765831 0.181889 0.175987 0.192703 0.173749
0.039553 -0.0200587 -0.0280306 -0.11968 -0.117487 -0.0097659 -0.0288926
-0.0847991 -0.0586976 -0.0817755 -0.098062 -0.0401701 -0.068771 -0.0979227
0.0180157 0.0499808 -0.0559158 -0.058099 0.00636281 0.0497033 0.151312
0.191774 0.125897 0.164317 0.203509 0.0420072 -0.0999934 -0.0939179
-0.0854876 -0.044344 0.0110019 -0.0534357 -0.0763477 0.0143434 -0.0325359
-0.157971 -0.133163 -0.0781578 -0.0607514 0.000767896 -0.0124114 -0.0717647
0.0146265 0.0937182 0.0507034 0.0988507 0.199212 0.177919 0.149229
0.115749 -0.0192736 -0.0804472 -0.041293 -0.0797881 -0.0743446 0.0403498
0.0363734 -0.0407707 -0.0363226 -0.080941 -0.156351 -0.126464 -0.118228
-0.126007 -0.00528779 0.0574127 -0.0239617 -0.00330041 0.0913352 0.102559
0.133309 0.160816 0.102321 0.114931 0.141746 -0.0113368 -0.129881 -0.0567035
-0.00272978 0.00708829 0.0426175 -0.00283138 -0.0445304 0.000542933
-0.0833094 -0.243234 -0.203979 -0.0900848 -0.0603243 -0.00682906 0.0227056
-0.000567125 0.0785853 0.140333 0.0527928 0.0511354 0.156119 0.140825
0.0844401 0.063741 -0.0234109 -0.0558333 0.0177814 0.00118714 -0.025364
0.064224 0.0584686 -0.0565544 -0.0918164 -0.140639 -0.22365 -0.177299
-0.10733 -0.0875838 0.0258319 0.108441 0.0364053 0.033375 0.106798
0.0734096 0.0517867 0.0960781 0.076357 0.0832221 0.120241 0.0119205
-0.0744192 0.0254178 0.0753662 0.0216733 0.0203596 -0.00926053 -0.0727784
-0.0722433 -0.154062 -0.286519 -0.201929 -0.0330725 -0.0058398 0.0188267
0.0705831 0.0563994 0.0820974 0.0966864 -0.0143791 -0.0245209 0.116578
0.133646 0.0688569 0.0753958 0.0473722 0.0221534 0.0735996 0.0352598
-0.0377251 0.0238537 0.0252661 -0.110329 -0.163042 -0.17226 -0.21567
-0.146207 -0.0403411 -0.0217113 0.0543958 0.130591 0.0471941 -0.00488153
0.042739 0.00642747 -0.0151594 0.0751835 0.108448 0.112446 0.154415
0.0822631 -0.00705931 0.0595567 0.0734351 -0.0331574 -0.0499891 -0.0417971
-0.10332 -0.121416 -0.162223 -0.23874 -0.131758 0.0412002 0.0326342
0.00886336 0.0656205 0.0487195 0.0155881 0.00606133 -0.0689482 -0.0406461
0.142301 0.185123 0.104722 0.120479;
#X coords 0 1 511 -1 200 140 1;
#X restore 444 52 graph;
#X obj 601 391 *~;
#X obj 601 341 *~;
#X msg 413 365 0.75;
#X obj 413 384 s phase;
#X obj 412 289 mtof;
#X obj 412 310 s freq;
#X obj 257 257 t b b;
#X obj 412 269 i;
#X obj 257 301 del;
#X obj 412 346 loadbang;
#X obj 412 249 r ex1NoteSlider;
#X obj 411 204 cnv 10 180 25 empty empty FREQUENCY/PHASE 20 12 0 15
-228856 -66577 0;
#X obj 601 204 cnv 10 180 25 empty empty GRAPH/OUTPUT 20 12 0 15 -228856
-66577 0;
#X msg 257 340 0 \$1;
#N canvas 32 25 450 278 (subpatch) 0;
#X array ex1-SoundOut 512 float 1;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0;
#X coords 0 1 511 -1 200 140 1;
#X restore 645 52 graph;
#X obj 616 322 r~ ex1Env;
#X obj 616 372 r ex1Amp;
#X msg 305 340 1 \$1;
#X obj 690 318 tabwrite~ ex1-Waveform;
#X obj 700 338 tabwrite~ ex1-SoundOut;
#X obj 601 271 *~ 0.1;
#X obj 690 296 metro 250;
#X connect 0 0 1 0;
#X connect 3 0 98 0;
#X connect 5 0 30 0;
#X connect 6 0 31 0;
#X connect 7 0 32 0;
#X connect 8 0 33 0;
#X connect 9 0 34 0;
#X connect 10 0 35 0;
#X connect 18 0 36 0;
#X connect 19 0 37 0;
#X connect 20 0 38 0;
#X connect 21 0 39 0;
#X connect 22 0 40 0;
#X connect 23 0 41 0;
#X connect 30 0 12 0;
#X connect 31 0 13 0;
#X connect 32 0 14 0;
#X connect 33 0 15 0;
#X connect 34 0 16 0;
#X connect 35 0 17 0;
#X connect 36 0 24 0;
#X connect 37 0 25 0;
#X connect 38 0 26 0;
#X connect 39 0 27 0;
#X connect 40 0 28 0;
#X connect 41 0 29 0;
#X connect 43 0 44 0;
#X connect 44 0 47 0;
#X connect 45 0 43 0;
#X connect 46 0 44 1;
#X connect 47 0 99 0;
#X connect 48 0 43 1;
#X connect 49 0 47 1;
#X connect 50 0 51 0;
#X connect 51 0 54 0;
#X connect 52 0 50 0;
#X connect 53 0 51 1;
#X connect 54 0 100 0;
#X connect 55 0 56 0;
#X connect 56 0 59 0;
#X connect 57 0 55 0;
#X connect 58 0 56 1;
#X connect 59 0 101 0;
#X connect 60 0 61 0;
#X connect 61 0 64 0;
#X connect 62 0 60 0;
#X connect 63 0 61 1;
#X connect 64 0 102 0;
#X connect 65 0 66 0;
#X connect 66 0 69 0;
#X connect 67 0 65 0;
#X connect 68 0 66 1;
#X connect 69 0 103 0;
#X connect 70 0 71 0;
#X connect 71 0 74 0;
#X connect 72 0 70 0;
#X connect 73 0 71 1;
#X connect 74 0 104 0;
#X connect 75 0 50 1;
#X connect 76 0 54 1;
#X connect 77 0 55 1;
#X connect 78 0 59 1;
#X connect 79 0 60 1;
#X connect 80 0 64 1;
#X connect 81 0 65 1;
#X connect 82 0 69 1;
#X connect 83 0 70 1;
#X connect 84 0 74 1;
#X connect 86 0 118 0;
#X connect 87 0 89 0;
#X connect 88 0 90 0;
#X connect 91 0 94 1;
#X connect 91 0 120 1;
#X connect 92 0 93 1;
#X connect 93 0 125 0;
#X connect 94 0 129 0;
#X connect 95 0 96 0;
#X connect 105 0 132 0;
#X connect 106 0 131 0;
#X connect 106 0 107 0;
#X connect 106 0 107 1;
#X connect 109 0 108 0;
#X connect 110 0 133 0;
#X connect 112 0 106 0;
#X connect 113 0 112 0;
#X connect 114 0 115 0;
#X connect 116 0 117 0;
#X connect 118 0 120 0;
#X connect 118 1 94 0;
#X connect 119 0 116 0;
#X connect 120 0 93 0;
#X connect 121 0 114 0;
#X connect 122 0 119 0;
#X connect 125 0 95 0;
#X connect 127 0 113 1;
#X connect 128 0 112 1;
#X connect 129 0 95 0;
#X connect 132 0 113 0;
#X connect 132 0 130 0;
#X connect 133 0 130 0;
#X connect 133 0 131 0;
#X restore 502 117 pd Example1-SoundExplorer;
#N canvas 82 69 817 668 Example2-BasicStepSequencer 1;
#X obj 10 10 cnv 15 320 25 empty empty Example_2:_BasicStepSequencer
20 12 0 14 -228856 -66577 0;
#X obj 10 48 cnv 15 120 25 empty empty Create_Pulse 20 12 0 12 -233017
-66577 0;
#X obj 12 85 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 12 145 metro 150;
#X obj 12 166 f;
#X obj 12 200 mod 8;
#X floatatom 12 227 5 0 0 0 - - -;
#X obj 54 166 + 1;
#X obj 12 104 t b b;
#X msg 27 125 0;
#X text 30 84 <--- START/STOP BEAT;
#X text 81 166 <--- add 1 and save;
#X text 110 177 for next step;
#X text 46 199 <--- gives the remainder;
#X text 76 213 of n/8 \, meaning we;
#X text 75 227 can loop from 0-7;
#X text 51 125 <--- always start from 0;
#X obj 230 48 cnv 15 120 25 empty empty Create_Loop 20 12 0 12 -233017
-66577 0;
#X obj 231 123 sel 0 1 2 3 4 5 6 7;
#X floatatom 231 103 5 0 0 0 - - -;
#X obj 231 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 231 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 20 256;
#X obj 231 228 t b f;
#X obj 231 210 mtof;
#X obj 231 304 s ex2trigger;
#X obj 12 250 s ex2pulse;
#X obj 231 82 r ex2pulse;
#X obj 231 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 309 304 s ex2freq;
#X obj 231 179 route 0;
#X obj 281 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 281 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 0 256;
#X obj 281 228 t b f;
#X obj 281 210 mtof;
#X obj 281 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 281 179 route 0;
#X obj 331 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 331 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 0 256;
#X obj 331 228 t b f;
#X obj 331 210 mtof;
#X obj 331 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 331 179 route 0;
#X obj 381 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 381 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 31 256;
#X obj 381 228 t b f;
#X obj 381 210 mtof;
#X obj 381 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 381 179 route 0;
#X obj 431 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 431 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 0 256;
#X obj 431 228 t b f;
#X obj 431 210 mtof;
#X obj 431 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 431 179 route 0;
#X obj 481 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 481 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 28 256;
#X obj 481 228 t b f;
#X obj 481 210 mtof;
#X obj 481 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 481 179 route 0;
#X obj 531 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 531 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 26 256;
#X obj 531 228 t b f;
#X obj 531 210 mtof;
#X obj 531 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 531 179 route 0;
#X obj 581 144 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 581 163 nbx 3 14 0 127 0 0 empty empty empty 0 -8 0 10 -262130
-1 -1 0 256;
#X obj 581 228 t b f;
#X obj 581 210 mtof;
#X obj 581 246 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234
-1 -1;
#X obj 581 179 route 0;
#X obj 10 338 cnv 15 120 25 empty empty Envelope 20 12 0 12 -233017
-66577 0;
#X obj 10 375 r ex2trigger;
#X text 353 122 <--- bang when a number matches the input;
#X text 621 162 <--- set midi note;
#X text 629 179 <--- 0 is a rest;
#X text 657 193 [route] filters out;
#X text 658 206 all 0's;
#X obj 10 484 line~;
#X obj 10 443 del 10;
#X obj 10 404 bng 15 250 50 0 empty empty empty 17 7 0 10 -261234 -1
-1;
#X obj 10 423 t b b;
#X msg 57 464 1 0;
#X msg 10 463 0 500;
#X obj 10 507 s~ ex2Env;
#X obj 139 338 cnv 15 200 25 empty empty Triangle_Wave_Synth 20 12
0 12 -233017 -66577 0;
#X floatatom 139 435 5 0 0 0 - - -;
#X obj 139 415 line;
#X obj 139 375 r ex2freq;
#X msg 139 395 \$1 50;
#X obj 139 481 osc~;
#X obj 139 501 *~ 1;
#X obj 179 481 osc~;
#X obj 139 461 * 1;
#X obj 179 461 * 3;
#X obj 240 481 osc~;
#X obj 240 461 * 5;
#X obj 300 481 osc~;
#X obj 300 461 * 7;
#X obj 179 501 *~ 0.333;
#X obj 240 501 *~ 0.2;
#X obj 300 501 *~ 0.143;
#X obj 139 524 *~ 0.1;
#X obj 139 543 s~ ex2Tri;
#X obj 389 338 cnv 15 200 25 empty empty Sound_Output 20 12 0 12 -233017
-66577 0;
#X obj 389 377 r~ ex2Tri;
#X obj 389 421 *~;
#X obj 404 401 r~ ex2Env;
#X obj 389 463 *~;
#X obj 465 429 hsl 120 30 0 1 0 1 empty empty AMPLITUDE 5 15 0 16 -204786
-1 -1 9000 1;
#X obj 389 515 dac~;
#X obj 389 489 clip~ -1 1;
#X connect 2 0 8 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 25 0;
#X connect 7 0 4 1;
#X connect 8 0 3 0;
#X connect 8 1 9 0;
#X connect 9 0 4 1;
#X connect 18 0 20 0;
#X connect 18 1 30 0;
#X connect 18 2 36 0;
#X connect 18 3 42 0;
#X connect 18 4 48 0;
#X connect 18 5 54 0;
#X connect 18 6 60 0;
#X connect 18 7 66 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 21 0 29 0;
#X connect 22 0 24 0;
#X connect 22 0 27 0;
#X connect 22 1 28 0;
#X connect 23 0 22 0;
#X connect 26 0 19 0;
#X connect 29 1 23 0;
#X connect 30 0 31 0;
#X connect 31 0 35 0;
#X connect 32 0 34 0;
#X connect 32 0 24 0;
#X connect 32 1 28 0;
#X connect 33 0 32 0;
#X connect 35 1 33 0;
#X connect 36 0 37 0;
#X connect 37 0 41 0;
#X connect 38 0 40 0;
#X connect 38 0 24 0;
#X connect 38 1 28 0;
#X connect 39 0 38 0;
#X connect 41 1 39 0;
#X connect 42 0 43 0;
#X connect 43 0 47 0;
#X connect 44 0 46 0;
#X connect 44 0 24 0;
#X connect 44 1 28 0;
#X connect 45 0 44 0;
#X connect 47 1 45 0;
#X connect 48 0 49 0;
#X connect 49 0 53 0;
#X connect 50 0 52 0;
#X connect 50 0 24 0;
#X connect 50 1 28 0;
#X connect 51 0 50 0;
#X connect 53 1 51 0;
#X connect 54 0 55 0;
#X connect 55 0 59 0;
#X connect 56 0 58 0;
#X connect 56 0 24 0;
#X connect 56 1 28 0;
#X connect 57 0 56 0;
#X connect 59 1 57 0;
#X connect 60 0 61 0;
#X connect 61 0 65 0;
#X connect 62 0 64 0;
#X connect 62 0 24 0;
#X connect 62 1 28 0;
#X connect 63 0 62 0;
#X connect 65 1 63 0;
#X connect 66 0 67 0;
#X connect 67 0 71 0;
#X connect 68 0 70 0;
#X connect 68 0 24 0;
#X connect 68 1 28 0;
#X connect 69 0 68 0;
#X connect 71 1 69 0;
#X connect 73 0 81 0;
#X connect 79 0 85 0;
#X connect 80 0 84 0;
#X connect 81 0 82 0;
#X connect 82 0 80 0;
#X connect 82 1 83 0;
#X connect 83 0 79 0;
#X connect 84 0 79 0;
#X connect 87 0 94 0;
#X connect 87 0 95 0;
#X connect 87 0 97 0;
#X connect 87 0 99 0;
#X connect 88 0 87 0;
#X connect 89 0 90 0;
#X connect 90 0 88 0;
#X connect 91 0 92 0;
#X connect 92 0 103 0;
#X connect 93 0 100 0;
#X connect 94 0 91 0;
#X connect 95 0 93 0;
#X connect 96 0 101 0;
#X connect 97 0 96 0;
#X connect 98 0 102 0;
#X connect 99 0 98 0;
#X connect 103 0 104 0;
#X connect 106 0 107 0;
#X connect 107 0 109 0;
#X connect 108 0 107 1;
#X connect 109 0 112 0;
#X connect 110 0 109 1;
#X connect 112 0 111 0;
#X connect 112 0 111 1;
#X restore 502 143 pd Example2-BasicStepSequencer;
