#N canvas 57 25 771 723 12;
#X obj 3 3 cnv 15 750 60 empty empty 9b_Let's_Make_an_Operator 20 12
0 20 -233017 -66577 0;
#X obj 318 254 * 1;
#X obj 318 278 phasor~;
#X obj 300 322 +~;
#X obj 300 346 cos~;
#X obj 408 390 *~;
#X obj 408 444 *~;
#X obj 408 468 outlet~;
#X obj 318 176 unpack f f;
#X obj 318 198 mtof;
#X text 357 155 <- MIDI note/velocity in;
#X obj 19 159 inlet~;
#X text 18 137 Modulating Signal;
#X obj 426 229 / 127;
#X obj 426 320 adsr~, f 13;
#X obj 157 159 inlet;
#X obj 317 154 inlet;
#X text 156 137 Pitch Ratio;
#X text 25 68 An operator is a modular sinewave generator \, with a
pitch multiplier \, phase modulation \, envelope and gain. We can make
one a little bit like this:;
#X obj 519 216 inlet;
#X obj 529 236 inlet;
#X obj 539 256 inlet;
#X obj 549 276 inlet;
#X text 534 195 A \, D \, S \, R;
#X obj 579 356 inlet;
#X text 579 335 Output Gain;
#X text 45 506 make it into an abstraction \,;
#X obj 46 539 operator~, f 19;
#X text 43 566 and for convinience \, let's also stuff it inside a
visual abstraction with some on-screen controls \, and an internal
receive for incoming MIDI messages:;
#X text 19 210 Feedback;
#X obj 252 297 +~;
#X obj 475 490 s~ \$0-fdbk;
#X obj 21 231 r~ \$0-fdbk;
#X obj 619 396 inlet;
#X text 619 375 Feedback;
#X obj 474 467 *~;
#X obj 42 615 opGUI~;
#X text 198 741 <- We'll have a play with these in the next part!;
#X connect 1 0 2 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 35 0;
#X connect 8 0 9 0;
#X connect 8 1 13 0;
#X connect 9 0 1 0;
#X connect 11 0 30 1;
#X connect 13 0 14 0;
#X connect 14 0 5 1;
#X connect 15 0 1 1;
#X connect 16 0 8 0;
#X connect 19 0 14 1;
#X connect 20 0 14 2;
#X connect 21 0 14 3;
#X connect 22 0 14 4;
#X connect 24 0 6 1;
#X connect 30 0 3 0;
#X connect 32 0 30 0;
#X connect 33 0 35 1;
#X connect 35 0 31 0;
