#N canvas 272 25 896 262 12;
#X obj 4 2 cnv 15 888 40 empty empty Lab\ 4\ -Amplitude\ Modulation
20 12 0 20 #e0e0e0 #404040 0;
#X obj 4 47 cnv 15 308 25 empty empty 4.1:\ Task\ -\ multiply\ two\ waves...
20 12 0 14 #dcdcdc #404040 0;
#N canvas 106 35 969 681 multiply-waves 1;
#X obj 4 4 cnv 15 960 25 empty empty 4.1:\ Task\ -\ multiply\ two\ waves...
20 12 0 14 #dcdcdc #404040 0;
#X text 5 35 We'll use some of the abstractions in our library to create
some soundwaves \, controlled by a slider. We can then explore what
hapens when two waveforms are multiplied together;
#X text 14 96 1 Make a hslider object (cmd/ctl-shift-h);
#X text 14 125 2 Make a [waveSelect~] object (cmd/ctl-shift-h);
#X text 14 154 3 Convert the output of the slider from midi to Hz using
[mtof], f 48;
#X text 14 199 4 Connect these to a [waveSelect~] abstraction;
#X text 14 228 5 Copy and paste these objects;
#X text 14 257 6 Multiply the two signals with [*~];
#X text 14 331 8 Experiment with different settings between the two
tones \, what do you hear?, f 51;
#X text 14 286 7 Send the sound to an [output~] abstraction \, and
graph it with [waveScope~], f 50;
#X restore 22 78 pd multiply-waves;
#X obj 4 121 cnv 15 325 25 empty empty 4.2:\ Amplitude\ Modulation\ Examples
20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 685 847 basicAM 0;
#X obj 4 4 cnv 15 308 25 empty empty Basic\ Amplitude\ Modulation 20
12 0 14 #dcdcdc #404040 0;
#X obj 4 34 cnv 15 308 25 empty empty Carrier\ Wave 20 12 0 14 #dcdcdc
#404040 0;
#X obj 362 34 cnv 15 308 25 empty empty Modulator\ Wave 20 12 0 14
#dcdcdc #404040 0;
#X obj 26 75 hsl 177 37 0 127 0 1 empty empty Carrier\ Freq -2 -8 0
10 #fcfcfc #000000 #000000 9950 1;
#X floatatom 26 135 5 0 0 0 - - -, f 5;
#X text 77 121 by default \, the slider outputs numbers that can be
used for MIDI: 0-127, f 30;
#X obj 26 183 mtof;
#X text 77 183 MIDI to Frequency;
#X msg 26 212 \$1 10;
#X text 77 212 add freq to a list with number 10;
#X obj 26 241 line~;
#X text 77 241 We can use out line~ to smooth out sudden value changes.
Such changes can cause clicks in the audio., f 33;
#X obj 26 318 osc~;
#X text 77 318 generate the carrier wave;
#X obj 26 347 s~ bAM-carWave;
#X obj 363 75 hsl 177 37 10 1000 1 1 empty empty Modulator\ Freq -2
-8 0 10 #fcfcfc #000000 #000000 450 1;
#X floatatom 363 135 5 0 0 0 - - -, f 5;
#X msg 363 172 \$1 10;
#X obj 363 201 line~;
#X obj 363 278 osc~;
#X text 414 278 generate the modulator wave;
#X text 558 76 In properties \, the output of the slider has been changed
so we get a different range of values here, f 16;
#X obj 21 426 waveScope~;
#X obj 21 405 r~ bAM-carWave;
#X obj 229 426 waveScope~;
#X obj 229 405 r~ bAM-modWave;
#X obj 363 307 s~ bAM-modWave;
#X obj 5 375 cnv 15 308 25 empty empty The\ AM\ bit... 20 12 0 14 #dcdcdc
#404040 0;
#X text 438 427 Now we can catch our carrier and multiplier signals
and muliply them, f 33;
#X obj 21 610 *~;
#X obj 21 803 output~;
#X obj 21 634 waveScope~;
#X text 233 612 By multiplying these together \, the modulator wave
acts as an ever-changing volume control for the carrier wave. This
style of AM is called Ring Modulation., f 33;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 6 0 8 0;
#X connect 8 0 10 0;
#X connect 10 0 12 0;
#X connect 12 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 26 0;
#X connect 22 0 29 0;
#X connect 23 0 22 0;
#X connect 24 0 29 1;
#X connect 25 0 24 0;
#X connect 29 0 31 0;
#X connect 31 0 30 0;
#X connect 31 0 30 1;
#X restore 21 155 pd basicAM;
#X obj 3 193 cnv 15 325 25 empty empty 4.3:\ Make\ a\ Ring\ Mod\ abstraction
20 12 0 14 #dcdcdc #404040 0;
#N canvas 383 25 482 847 RingModAbstraction 0;
#X obj 4 4 cnv 15 472 25 empty empty Ring\ Mod\ Abstraction 20 12 0
14 #dcdcdc #404040 0;
#X obj 39 423 waveSelect~;
#X obj 39 311 hsl 128 15 0 127 0 0 empty empty car -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 39 335 mtof;
#X msg 39 364 \$1 10;
#X obj 39 393 line~;
#X obj 176 423 waveSelect~;
#X obj 176 311 hsl 128 15 0 127 0 0 empty empty mod -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 176 335 mtof;
#X msg 176 364 \$1 10;
#X obj 176 393 line~;
#X obj 158 602 *~;
#X obj 39 636 xFade~, f 42;
#X obj 328 311 hsl 128 15 0 1 0 0 empty empty dry/wet\ mix -2 -8 0
10 #fcfcfc #000000 #000000 0 1;
#X obj 39 685 output~;
#X text 7 38 1 - Can we figure out what's going on here? It's very
simiar to what we've seen already., f 43;
#X text 7 99 2 - Encapsulate the section that's actually doing the
ring modulation with cmd/ctl-shift-E \, and name the encapsulated code
, f 43;
#X text 7 176 3 - Right click on the new [pd ...] object and save as
a new abstraction., f 43;
#X text 7 221 4 - Do we want to add anything to the abstraction?,
f 43;
#X connect 1 0 11 0;
#X connect 1 0 12 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 11 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 6 0;
#X connect 11 0 12 1;
#X connect 12 0 14 0;
#X connect 13 0 12 2;
#X restore 20 227 pd RingModAbstraction;
#X obj 497 47 cnv 15 325 25 empty empty 4.4:\ Another\ AM\ example\ 
20 12 0 14 #dcdcdc #404040 0;
#N canvas 266 22 1154 832 fancyAM 0;
#X obj 3 5 cnv 15 1096 24 empty empty Fancy\ Amplitude\ Modulation
20 12 0 14 #dcdcdc #404040 0;
#X obj 3 97 cnv 15 308 25 empty empty Carrier\ Wave 20 12 0 14 #dcdcdc
#404040 0;
#X obj 361 97 cnv 15 308 25 empty empty Modulator\ Wave 20 12 0 14
#dcdcdc #404040 0;
#X obj 25 138 hsl 177 37 0 127 0 1 empty empty Carrier\ Freq -2 -8
0 10 #fcfcfc #000000 #000000 9350 1;
#X floatatom 25 181 5 0 0 0 - - -, f 5;
#X obj 25 208 mtof;
#X msg 25 237 \$1 10;
#X obj 25 266 line~;
#X obj 25 294 osc~;
#X text 76 294 generate the carrier wave;
#X obj 362 138 hsl 177 37 1 1000 1 1 empty empty Modulator\ Freq -2
-8 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 362 182 5 0 0 0 - - -, f 5;
#X msg 362 209 \$1 10;
#X obj 362 238 line~;
#X obj 362 265 osc~;
#X text 413 265 generate the modulator wave;
#X obj 692 97 cnv 15 308 25 empty empty Setting\ Modulation\ Depth
20 12 0 14 #dcdcdc #404040 0;
#X text 3 35 This time \, we modify our modulator to be in the range
of 0-1 \, then scale it by the ammount of modulation we want to apply
\, and then take this away from 1 to get our final modulating signal.
Why? Because if we simply scale the modulator wave by depth \, we would
also reduce the volume of the sound as depth is reduced (depth=0 means
no sound)., f 142;
#X obj 915 138 hsl 177 37 0 1 0 1 empty empty Modulator\ Depth -2 -8
0 10 #fcfcfc #000000 #000000 17600 1;
#X floatatom 915 184 5 0 0 0 - - -, f 5;
#X msg 915 212 \$1 10;
#X obj 362 294 s~ fAM-modWave;
#X obj 25 323 s~ fAM-carWave;
#X obj 772 162 *~ 0.5;
#X obj 772 185 +~ 0.5;
#X text 824 166 scale to 0-1 range, f 9;
#X obj 772 280 *~;
#X obj 915 241 line~;
#X obj 696 137 sig~ 1;
#X obj 696 321 -~;
#X text 802 280 scale by chosen depth value;
#X text 723 321 take our modulator away from 1 \, this way if depth
== 0 \, we still get a full-volume carrier wave when we multiply the
carrier and modifier together.;
#X obj 696 382 s~ fAM-modWithDepth;
#X obj 20 405 waveScope~;
#X obj 228 405 waveScope~;
#X obj 4 354 cnv 15 308 25 empty empty The\ AM\ bit... 20 12 0 14 #dcdcdc
#404040 0;
#X obj 20 583 *~;
#X obj 20 782 output~;
#X obj 20 607 waveScope~;
#X obj 20 384 r~ fAM-carWave;
#X obj 228 384 r~ fAM-modWithDepth;
#X obj 772 138 r~ fAM-modWave;
#X text 437 406 The carrier signal can have varying degrees of influence
on the sound thanks to the depth control., f 20;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 22 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 21 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 27 0;
#X connect 23 0 24 0;
#X connect 24 0 26 0;
#X connect 26 0 29 1;
#X connect 27 0 26 1;
#X connect 28 0 29 0;
#X connect 29 0 32 0;
#X connect 33 0 36 0;
#X connect 34 0 36 1;
#X connect 36 0 38 0;
#X connect 38 0 37 0;
#X connect 38 0 37 1;
#X connect 39 0 33 0;
#X connect 40 0 34 0;
#X connect 41 0 23 0;
#X restore 498 77 pd fancyAM;
#X obj 3 193 cnv 15 325 25 empty empty 4.3:\ Make\ a\ Ring\ Mod\ abstraction
20 12 0 14 #dcdcdc #404040 0;
#N canvas 383 25 482 847 RingModAbstraction 0;
#X obj 4 4 cnv 15 472 25 empty empty Ring\ Mod\ Abstraction 20 12 0
14 #dcdcdc #404040 0;
#X obj 39 423 waveSelect~;
#X obj 39 311 hsl 128 15 0 127 0 0 empty empty car -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 39 335 mtof;
#X msg 39 364 \$1 10;
#X obj 39 393 line~;
#X obj 176 423 waveSelect~;
#X obj 176 311 hsl 128 15 0 127 0 0 empty empty mod -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 176 335 mtof;
#X msg 176 364 \$1 10;
#X obj 176 393 line~;
#X obj 158 602 *~;
#X obj 39 636 xFade~, f 42;
#X obj 328 311 hsl 128 15 0 1 0 0 empty empty dry/wet\ mix -2 -8 0
10 #fcfcfc #000000 #000000 0 1;
#X obj 39 685 output~;
#X text 7 38 1 - Can we figure out what's going on here? It's very
simiar to what we've seen already., f 43;
#X text 7 99 2 - Encapsulate the section that's actually doing the
ring modulation with cmd/ctl-shift-E \, and name the encapsulated code
, f 43;
#X text 7 176 3 - Right click on the new [pd ...] object and save as
a new abstraction., f 43;
#X text 7 221 4 - Do we want to add anything to the abstraction?,
f 43;
#X connect 1 0 11 0;
#X connect 1 0 12 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 11 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 6 0;
#X connect 11 0 12 1;
#X connect 12 0 14 0;
#X connect 13 0 12 2;
#X restore 20 227 pd RingModAbstraction;
#X obj 497 117 cnv 15 325 25 empty empty 4.4:\ Make\ a\ AM\ abstraction
20 12 0 14 #dcdcdc #404040 0;
#N canvas 70 25 1279 847 AM-Abstraction 0;
#X obj 4 4 cnv 15 472 25 empty empty Ring\ Mod\ Abstraction 20 12 0
14 #dcdcdc #404040 0;
#X obj 367 163 waveSelect~;
#X obj 367 51 hsl 128 15 0 127 0 0 empty empty car -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 367 75 mtof;
#X msg 367 104 \$1 10;
#X obj 367 133 line~;
#X obj 504 163 waveSelect~;
#X obj 504 51 hsl 128 15 0 127 0 0 empty empty mod -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 504 75 mtof;
#X msg 504 104 \$1 10;
#X obj 504 133 line~;
#X obj 656 51 hsl 128 15 0 1 0 0 empty empty mod\ depth -2 -8 0 10
#fcfcfc #000000 #000000 0 1;
#X obj 368 716 output~;
#X text 7 160 3 - Right click on the new [pd ...] object and save as
a new abstraction., f 43;
#X text 7 205 4 - Do we want to add anything to the abstraction?,
f 43;
#X text 7 38 1 - Copy over the modulation depth section from the previous
example, f 43;
#X text 7 83 2 - Encapsulate the section that's actually doing the
amplitude modulation with cmd/ctl-shift-E \, and name the encapsulated
code, f 43;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 6 0;
#X restore 497 151 pd AM-Abstraction;
