#N canvas 32 25 1035 578 10;
#N canvas 33 25 475 319 noise 0;
#X obj 15 51 noise~;
#X obj 15 106 *~ 0.1;
#X obj 15 289 dac~;
#X obj 30 169 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 15 201 *~;
#X text 95 49 White Noise: random numbers at signal rate in the range
-1 to 1;
#X text 95 102 Here we use *~ to multiply the audio signal \, this
acts as a volume control;
#X text 95 165 Toggle UI element: a toggle switch that spits out a
1 (on) or a 0 (off);
#X text 95 197 Here the *~ object is again used to control volume \,
but with the toggle connected to the right inlet \, it now works as
an off/on switch for the audio;
#X obj 14 18 cnv 15 100 25 empty empty Noise 20 12 0 14 -233017 -66577
0;
#X text 95 289 Audio output (digital to analog converter);
#X obj 15 252 clip~ -1 1;
#X text 95 253 Constrain signals in case of accidents!;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 11 0;
#X connect 11 0 2 0;
#X connect 11 0 2 1;
#X restore 492 95 pd noise;
#N canvas 79 38 551 685 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array lop 1000 float 0;
#X coords 0 1 999 -1 200 100 1 0 0;
#X restore 318 439 graph;
#X obj 180 433 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 296 526 -1;
#X text 302 481 0;
#X text 302 435 1;
#X obj 180 456 metro 100;
#X obj 22 654 dac~;
#X obj 180 479 tabwrite~ lop;
#X obj 22 243 noise~;
#X obj 22 371 lop~;
#X obj 43 321 mtof;
#X obj 46 270 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X text 180 270 Slider sends MIDI note values (0-127).;
#X text 180 241 Generate white noise.;
#X text 179 369 [lop~] allows frequencies below the cutoff frequency
to pass and reduces or eliminates frequencies above it.;
#X obj 22 557 *~ 0.1;
#X obj 10 42 cnv 15 380 180 empty empty Graphical_Depiction_of_a_Low_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array lop_display 6 float 5;
#A 0 0.971422 0.971422 0.971422 -0.16 -0.985712 -0.985712;
#X coords 0 1 5 -1 200 100 1;
#X restore 31 94 graph;
#X text 76 197 Frequency in Hz;
#X text 239 136 Volume of sound passed;
#X text 29 198 0;
#X text 239 181 0;
#X text 239 91 1;
#X text 90 98 ^ cutoff frequency;
#X text 206 198 20k;
#X obj 10 7 cnv 15 170 25 empty empty Low_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X text 316 410 Output of Low Pass Filter;
#X text 179 316 [mtof] converts MIDI notes to frequency in Hertz (cycles
per second).;
#X text 180 411 Graph output;
#X text 200 432 on/ff;
#X obj 22 616 *~;
#X obj 92 594 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 178 553 Multiply audio signal: multiplying by less than reuces
volume \, more than one increases volume;
#X text 178 591 Turn Audio on/off;
#X text 179 654 Output;
#X floatatom 54 288 5 0 0 0 - - -;
#X floatatom 54 340 5 0 0 0 - - -;
#X connect 1 0 5 0;
#X connect 5 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 9 0 15 0;
#X connect 10 0 9 1;
#X connect 10 0 36 0;
#X connect 11 0 35 0;
#X connect 11 0 10 0;
#X connect 15 0 30 0;
#X connect 30 0 6 0;
#X connect 30 0 6 1;
#X connect 31 0 30 1;
#X restore 492 121 pd filt 1;
#X text 563 120 Low Pass;
#N canvas 239 84 559 673 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array hip 1000 float 0;
#X coords 0 1 999 -1 200 100 1;
#X restore 307 431 graph;
#X obj 187 418 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 285 518 -1;
#X text 291 473 0;
#X text 291 427 1;
#X text 185 397 Graph output;
#X obj 187 441 metro 100;
#X obj 23 241 noise~;
#X obj 44 304 mtof;
#X obj 47 281 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 12700 1;
#X text 184 304 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 185 280 Slider sends MIDI note values (0-127).;
#X text 184 241 Generate white noise.;
#X text 185 353 [hip~] allows frequencies above the cutoff frequency
to pass and reduces or eliminates frequencies below it.;
#X obj 187 465 tabwrite~ hip;
#X obj 23 353 hip~;
#X obj 23 569 *~ 0.1;
#X obj 8 9 cnv 15 200 25 empty empty High_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X obj 8 45 cnv 15 380 180 empty empty Graphical_Depiction_of_a_High_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array hip_display 6 float 5;
#A 0 -0.9857 -0.9857 -0.9857 0.97142 0.97141 0.97141;
#X coords 0 1 5 -1 200 100 1;
#X restore 29 86 graph;
#X text 74 188 Frequency in Hz;
#X text 244 127 Volume of sound passed;
#X text 27 189 0;
#X text 234 173 0;
#X text 237 83 1;
#X text 55 87 cutoff frequency ^;
#X text 194 189 20k;
#X obj 23 648 dac~;
#X obj 23 620 *~;
#X obj 93 598 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 210 417 on/ff;
#X text 304 397 Output of High Pass Filter;
#X text 183 597 Turn audio on/off;
#X text 184 569 Reduce volume;
#X text 183 648 Output;
#X connect 1 0 6 0;
#X connect 6 0 14 0;
#X connect 7 0 15 0;
#X connect 8 0 15 1;
#X connect 9 0 8 0;
#X connect 15 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 28 0;
#X connect 28 0 27 0;
#X connect 28 0 27 1;
#X connect 29 0 28 1;
#X restore 492 147 pd filt 2;
#X text 564 147 High Pass;
#N canvas 105 25 558 718 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array bp 1000 float 0;
#X coords 0 1 999 -1 200 100 1;
#X restore 309 501 graph;
#X obj 189 488 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 287 588 -1;
#X text 293 543 0;
#X text 293 497 1;
#X text 187 466 Graph output;
#X obj 189 511 metro 100;
#X obj 22 237 noise~;
#X obj 47 285 mtof;
#X obj 50 267 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 7700 1;
#X text 187 285 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 189 237 Generate white noise.;
#X obj 189 534 tabwrite~ bp;
#X obj 22 418 bp~ 220 1;
#X text 188 414 [bp~] passes the center frequency unchanged \, and
reduces or eliminates frequencies above and below it.;
#X obj 73 337 nbx 5 14 0 20 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 20 256;
#X obj 10 7 cnv 15 170 25 empty empty Band_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X obj 10 43 cnv 15 380 180 empty empty Graphical_Depiction_of_a_Band_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array bp_display 7 float 5;
#A 0 -0.9857 -0.9857 -0.9857 1.61426 -0.985712 -0.985712 -0.985704
;
#X coords 0 1 6 -1 200 100 1;
#X restore 30 86 graph;
#X text 75 188 Frequency in Hz;
#X text 236 127 Volume of sound passed;
#X text 28 189 0;
#X text 195 189 20 \, 0;
#X text 237 173 0;
#X text 238 83 1;
#X text 18 90 cutoff frequency ^;
#X text 189 265 MIDI slider (0-127).;
#X text 189 333 The third inlet of [bp] controls the Resonance \, i.e.
how far above or below the center frequency the filter still allows
sound to pass. Generally this number is between 0-10.;
#X obj 22 614 *~ 0.1;
#X obj 22 693 dac~;
#X obj 22 665 *~;
#X obj 92 643 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 182 642 Turn audio on/off;
#X text 183 614 Reduce volume;
#X text 182 693 Output;
#X text 211 487 on/ff;
#X text 304 466 Output of Band Pass Filter;
#X connect 1 0 6 0;
#X connect 6 0 12 0;
#X connect 7 0 13 0;
#X connect 8 0 13 1;
#X connect 9 0 8 0;
#X connect 13 0 12 0;
#X connect 13 0 28 0;
#X connect 15 0 13 2;
#X connect 28 0 30 0;
#X connect 30 0 29 0;
#X connect 30 0 29 1;
#X connect 31 0 30 1;
#X restore 492 173 pd filt 3;
#X text 564 172 Band Pass;
#N canvas 140 151 1142 627 filter 0;
#X obj 68 92 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 8 40 Just as an example of how filters might be used \, here
is a random distribution of band-pass filters:;
#X obj 9 13 cnv 15 200 25 empty empty Filter_Example 20 12 0 14 -233017
-66577 0;
#X obj 10 206 noise~;
#X obj 68 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 10 553 dac~;
#X obj 10 495 *~;
#X obj 25 473 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 57 473 Turn audio on/off;
#X text 58 444 Reduce volume;
#X text 58 554 Output;
#X text 86 91 This bang triggers a change in sonic 'colour' when clicked
;
#X obj 68 229 random 9950;
#X obj 68 248 + 50;
#X obj 10 444 *~ 0.05;
#X obj 550 396 cnv 15 580 220 empty empty There_are_8_identical_filters_contributing_to_the_sound
20 12 0 14 -208240 -66577 0;
#X text 728 436 The bang UI object triggers a random frequency value
;
#X text 728 481 +50 shifts the range of possible frequencies up to
a minimum of 50 hz;
#X text 728 582 Refer to the previous [pd filt 3] examlple if you need
help understanding this further;
#X obj 10 331 bp~ 0 50;
#X obj 10 522 clip~ -1 1;
#X text 78 522 Clip signals;
#X obj 68 287 line;
#X floatatom 68 306 5 0 0 0 - - -;
#X obj 572 437 noise~;
#X obj 630 437 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 630 460 random 9950;
#X obj 630 479 + 50;
#X obj 572 584 bp~ 0 50;
#X obj 630 540 line;
#X floatatom 630 559 5 0 0 0 - - -;
#X msg 68 267 \$1 1000;
#X msg 630 520 \$1 1000;
#X text 728 514 The [line] object creates a smooth transition to the
new frequency;
#X obj 150 206 noise~;
#X obj 208 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 208 229 random 9950;
#X obj 208 248 + 50;
#X obj 150 331 bp~ 0 50;
#X obj 208 287 line;
#X floatatom 208 306 5 0 0 0 - - -;
#X msg 208 267 \$1 1000;
#X obj 290 206 noise~;
#X obj 348 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 348 229 random 9950;
#X obj 348 248 + 50;
#X obj 290 331 bp~ 0 50;
#X obj 348 287 line;
#X floatatom 348 306 5 0 0 0 - - -;
#X msg 348 267 \$1 1000;
#X obj 430 206 noise~;
#X obj 488 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 488 229 random 9950;
#X obj 488 248 + 50;
#X obj 430 331 bp~ 0 50;
#X obj 488 287 line;
#X floatatom 488 306 5 0 0 0 - - -;
#X msg 488 267 \$1 1000;
#X obj 570 206 noise~;
#X obj 628 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 628 229 random 9950;
#X obj 628 248 + 50;
#X obj 570 331 bp~ 0 50;
#X obj 628 287 line;
#X floatatom 628 306 5 0 0 0 - - -;
#X msg 628 267 \$1 1000;
#X obj 710 206 noise~;
#X obj 768 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 768 229 random 9950;
#X obj 768 248 + 50;
#X obj 710 331 bp~ 0 50;
#X obj 768 287 line;
#X floatatom 768 306 5 0 0 0 - - -;
#X msg 768 267 \$1 1000;
#X obj 850 206 noise~;
#X obj 908 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 908 229 random 9950;
#X obj 908 248 + 50;
#X obj 850 331 bp~ 0 50;
#X obj 908 287 line;
#X floatatom 908 306 5 0 0 0 - - -;
#X msg 908 267 \$1 1000;
#X obj 990 206 noise~;
#X obj 1048 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144
-1 -1;
#X obj 1048 229 random 9950;
#X obj 1048 248 + 50;
#X obj 990 331 bp~ 0 50;
#X obj 1048 287 line;
#X floatatom 1048 306 5 0 0 0 - - -;
#X msg 1048 267 \$1 1000;
#X connect 0 0 4 0;
#X connect 0 0 35 0;
#X connect 0 0 43 0;
#X connect 0 0 51 0;
#X connect 0 0 59 0;
#X connect 0 0 67 0;
#X connect 0 0 75 0;
#X connect 0 0 83 0;
#X connect 3 0 19 0;
#X connect 4 0 12 0;
#X connect 6 0 20 0;
#X connect 7 0 6 1;
#X connect 12 0 13 0;
#X connect 13 0 31 0;
#X connect 14 0 6 0;
#X connect 19 0 14 0;
#X connect 20 0 5 1;
#X connect 20 0 5 0;
#X connect 22 0 23 0;
#X connect 23 0 19 1;
#X connect 24 0 28 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 32 0;
#X connect 29 0 30 0;
#X connect 30 0 28 1;
#X connect 31 0 22 0;
#X connect 32 0 29 0;
#X connect 34 0 38 0;
#X connect 35 0 36 0;
#X connect 36 0 37 0;
#X connect 37 0 41 0;
#X connect 38 0 14 0;
#X connect 39 0 40 0;
#X connect 40 0 38 1;
#X connect 41 0 39 0;
#X connect 42 0 46 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 45 0 49 0;
#X connect 46 0 14 0;
#X connect 47 0 48 0;
#X connect 48 0 46 1;
#X connect 49 0 47 0;
#X connect 50 0 54 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 57 0;
#X connect 54 0 14 0;
#X connect 55 0 56 0;
#X connect 56 0 54 1;
#X connect 57 0 55 0;
#X connect 58 0 62 0;
#X connect 59 0 60 0;
#X connect 60 0 61 0;
#X connect 61 0 65 0;
#X connect 62 0 14 0;
#X connect 63 0 64 0;
#X connect 64 0 62 1;
#X connect 65 0 63 0;
#X connect 66 0 70 0;
#X connect 67 0 68 0;
#X connect 68 0 69 0;
#X connect 69 0 73 0;
#X connect 70 0 14 0;
#X connect 71 0 72 0;
#X connect 72 0 70 1;
#X connect 73 0 71 0;
#X connect 74 0 78 0;
#X connect 75 0 76 0;
#X connect 76 0 77 0;
#X connect 77 0 81 0;
#X connect 78 0 14 0;
#X connect 79 0 80 0;
#X connect 80 0 78 1;
#X connect 81 0 79 0;
#X connect 82 0 86 0;
#X connect 83 0 84 0;
#X connect 84 0 85 0;
#X connect 85 0 89 0;
#X connect 86 0 14 0;
#X connect 87 0 88 0;
#X connect 88 0 86 1;
#X connect 89 0 87 0;
#X restore 492 199 pd filter colours;
#X text 607 198 An example of how filters might be used \, here is
a random distribution of band-pass filters:;
#X text 152 376 Envelope using line;
#X text 152 406 More ways of using line;
#X text 674 347 Using Subtractive synthesis to make percussive sounds
;
#X obj 9 122 line~;
#X obj 9 148 del;
#X obj 9 202 hip~;
#X obj 9 254 bp~;
#X obj 9 228 lop~;
#X text 56 121 generate audio ramps;
#X text 56 200 High Pass Filter;
#X text 55 227 Low Pass Filter;
#X text 55 254 Band Pass Filter;
#X obj 9 95 noise~;
#N canvas 112 137 1025 735 more 0;
#N canvas 159 39 603 551 crash 0;
#X obj 61 227 line~;
#X obj 188 148 t b b;
#X obj 187 249 line~;
#X obj 161 189 del 4;
#X obj 119 325 *~;
#X obj 247 156 noise~;
#X obj 248 191 *~ 1;
#X obj 393 268 line~;
#X obj 27 115 t b b b;
#X obj 35 167 del 10;
#X msg 157 211 0 100;
#X obj 93 66 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 155 381 hip~ 2000;
#X obj 107 279 phasor~;
#X msg 87 189 5500 10;
#X msg 32 189 4500 100;
#X msg 215 210 1;
#X obj 373 155 t b b b;
#X msg 366 242 0 1500;
#X obj 156 429 *~ 0.04;
#X obj 355 210 del 20;
#X msg 418 219 1 50;
#X obj 248 213 hip~ 15000;
#X obj 341 305 *~;
#X msg 484 220 5 0;
#X obj 165 473 dac~;
#X connect 0 0 13 0;
#X connect 1 0 3 0;
#X connect 1 0 3 0;
#X connect 1 1 16 0;
#X connect 2 0 4 1;
#X connect 3 0 10 0;
#X connect 4 0 12 0;
#X connect 5 0 6 0;
#X connect 6 0 22 0;
#X connect 7 0 23 1;
#X connect 8 1 9 0;
#X connect 8 2 14 0;
#X connect 9 0 15 0;
#X connect 10 0 2 0;
#X connect 11 0 8 0;
#X connect 11 0 1 0;
#X connect 11 0 17 0;
#X connect 12 0 19 0;
#X connect 13 0 4 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 2 0;
#X connect 17 0 20 0;
#X connect 17 1 21 0;
#X connect 17 2 24 0;
#X connect 18 0 7 0;
#X connect 19 0 25 0;
#X connect 19 0 25 1;
#X connect 20 0 18 0;
#X connect 21 0 7 0;
#X connect 22 0 23 0;
#X connect 23 0 12 0;
#X connect 24 0 7 0;
#X restore 39 63 pd crash;
#N canvas 653 85 450 300 bell 0;
#X obj 196 92 t b b;
#X obj 195 193 line~;
#X obj 33 184 *~;
#X obj 88 39 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 145 125 del 10;
#X msg 165 155 0 200;
#X obj 33 141 +~ 440;
#X obj 34 119 *~ 10000;
#X obj 33 206 *~ 0.5;
#X obj 25 95 osc~ 3000;
#X obj 30 163 osc~;
#X msg 224 151 0.1 0;
#X obj 116 255 dac~;
#X connect 0 0 4 0;
#X connect 0 0 4 0;
#X connect 0 1 11 0;
#X connect 1 0 2 1;
#X connect 2 0 8 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 8 0 12 0;
#X connect 8 0 12 1;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X connect 11 0 1 0;
#X restore 40 103 pd bell;
#N canvas 243 62 966 775 kick 0;
#X obj 82 255 line~;
#X obj 82 272 osc~;
#X obj 119 342 dac~;
#X obj 123 69 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 93 119 t b b;
#X obj 57 165 del 5;
#X msg 52 204 37 200;
#X msg 112 213 70;
#X obj 119 316 *~;
#X obj 154 159 t b b;
#X obj 154 232 line~;
#X msg 241 223 1 1;
#X obj 153 187 del 5;
#X msg 154 209 0 300;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 3 0 4 0;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 2 0;
#X connect 8 0 2 1;
#X connect 9 0 12 0;
#X connect 9 1 11 0;
#X connect 10 0 8 1;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X restore 40 141 pd kick;
#N canvas 32 25 1384 847 woosh 0;
#X obj 32 79 noise~;
#X obj 39 161 *~;
#X obj 86 57 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 86 71 t b b;
#X obj 88 139 line~;
#X msg 88 116 0 500;
#X obj 79 232 *~;
#X obj 128 210 line~;
#X msg 183 188 1 1;
#X obj 127 165 del 5;
#X obj 41 297 dac~;
#X msg 143 117 1 400;
#X obj 87 94 del 400;
#X msg 128 187 0 500;
#X obj 78 265 bp~ 1000 10;
#X obj 38 194 bp~ 250 10;
#X obj 228 220 *~;
#X obj 277 198 line~;
#X msg 277 175 0 500;
#X obj 227 253 bp~ 2456 20;
#X msg 332 176 1 100;
#X obj 276 153 del 100;
#X obj 382 198 *~;
#X obj 431 176 line~;
#X msg 431 153 0 500;
#X obj 430 131 del 1000;
#X msg 474 157 1 5000;
#X obj 381 231 bp~ 6000 25;
#X connect 0 0 1 0;
#X connect 0 0 6 0;
#X connect 0 0 16 0;
#X connect 0 0 22 0;
#X connect 1 0 15 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 3 0 12 0;
#X connect 3 0 21 0;
#X connect 3 0 25 0;
#X connect 3 1 11 0;
#X connect 3 1 8 0;
#X connect 3 1 20 0;
#X connect 3 1 26 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 14 0;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 9 0 13 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 13 0 7 0;
#X connect 14 0 10 1;
#X connect 14 0 10 0;
#X connect 15 0 10 0;
#X connect 15 0 10 1;
#X connect 16 0 19 0;
#X connect 17 0 16 1;
#X connect 18 0 17 0;
#X connect 19 0 10 0;
#X connect 19 0 10 1;
#X connect 20 0 17 0;
#X connect 21 0 18 0;
#X connect 22 0 27 0;
#X connect 23 0 22 1;
#X connect 24 0 23 0;
#X connect 25 0 24 0;
#X connect 26 0 23 0;
#X connect 27 0 10 0;
#X connect 27 0 10 1;
#X restore 39 182 pd woosh;
#N canvas 25 23 1205 914 hat 0;
#X obj 62 85 noise~;
#X obj 69 192 *~;
#X obj 135 77 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 135 92 t b b;
#X obj 118 170 line~;
#X msg 173 147 1 1;
#X msg 118 147 0 30;
#X obj 117 124 del 3;
#X floatatom 173 194 5 0 0 0 - - -;
#X obj 68 209 hip~ 5600;
#X obj 68 227 dac~;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 9 0 10 1;
#X restore 40 221 pd hat;
#N canvas 25 23 1455 976 snare 0;
#X obj 136 302 noise~;
#X obj 148 375 *~;
#X obj 365 104 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 346 150 t b b;
#X obj 251 345 line~;
#X msg 314 234 1 1;
#X obj 165 464 dac~;
#X obj 166 416 lop~ 500;
#X text 230 418 Low Pass Filter;
#X text 399 102 Bang;
#X obj 246 177 del 5;
#X msg 231 237 0 300;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 3 1 5 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 7 0 6 0;
#X connect 7 0 6 1;
#X connect 10 0 11 0;
#X connect 11 0 4 0;
#X restore 40 263 pd snare;
#X restore 490 377 pd more percussive sounds;
#X text 673 378 kick \, snare \, hat etc;
#X obj 9 13 cnv 15 700 40 empty empty Lab2-Amplitude_Control/Filters/Percussive_Sounds
20 12 0 20 -233017 -66577 0;
#X obj 9 60 cnv 15 200 25 empty empty 1:_Key_Ingredients 20 12 0 14
-228856 -66577 0;
#X text 56 94 uniformly distributed white noise;
#X text 56 145 The delay object sends a bang to its outlet after a
delay in milliseconds specified by its right inlet or its creation
argument. Right click and choose 'help' to see more details and examples
;
#X obj 9 314 cnv 15 250 25 empty empty 2:_Basic_Envelopes_with_Line
20 12 0 14 -228856 -66577 0;
#X obj 490 60 cnv 15 200 25 empty empty 3:_Filter_Examples 20 12 0
14 -228856 -66577 0;
#X obj 490 314 cnv 15 400 25 empty empty 4:_Percussive_Sounds_Combining_Line_and_Filters
20 12 0 14 -228856 -66577 0;
#N canvas -199 -975 636 576 line_envelope 0;
#X obj 11 87 osc~ 440;
#X obj 11 552 dac~;
#X msg 422 104 \; pd dsp 1;
#X msg 514 104 \; pd dsp 0;
#X text 423 137 ON;
#X text 531 137 OFF;
#X obj 11 430 *~;
#X text 122 384 <--- ramp generator;
#X text 87 86 <-- sine wave;
#X msg 27 154 0.1 2000;
#X msg 27 271 0 2000;
#X msg 27 176 0.1 50;
#X msg 27 293 0 50;
#X msg 27 198 0.1;
#X msg 27 249 0;
#X text 119 154 <-- slow;
#X text 120 177 <-- fast;
#X text 120 197 <-- instantly;
#X text 121 248 <-- slow;
#X text 122 271 <-- fast;
#X text 122 293 <-- instantly;
#X text 52 551 <-- out;
#X text 9 37 In this patch \, the multiplier is configured to multiply
two signals. The amplitude is now a signal computed by the line~ object.
;
#X text 48 429 <-- multiply the sine wave by the ramp. There's no longer
a "0" argument-- this tells Pd to expect a signal here.;
#X obj 46 524 tabwrite~ line;
#X obj 56 501 metro 250;
#X obj 63 483 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array line 882 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0;
#X coords 0 1 882 -1 200 140 1 0 0;
#X restore 423 193 graph;
#X msg 27 346 0.1 \, 0 3000;
#X obj 8 9 cnv 15 450 25 empty empty Basic_Envelope:_controlling_amplitude_using_line
20 12 0 14 -233017 -66577 0;
#X obj 27 384 line~;
#X text 419 83 Turn DSP on or off:;
#X obj 26 125 cnv 15 170 25 empty empty Note_on 20 12 0 10 -233017
-66577 0;
#X obj 26 220 cnv 15 170 25 empty empty Note_off 20 12 0 10 -233017
-66577 0;
#X obj 26 316 cnv 15 170 25 empty empty Note_on&off 20 12 0 10 -233017
-66577 0;
#X text 122 345 <-- instantly on \, slow fade out;
#X obj 11 460 clip~ -1 1;
#X text 86 481 <--- graph audio output;
#X text 27 109 Click the messages to trigger an envelope...;
#X connect 0 0 6 0;
#X connect 6 0 36 0;
#X connect 9 0 30 0;
#X connect 10 0 30 0;
#X connect 11 0 30 0;
#X connect 12 0 30 0;
#X connect 13 0 30 0;
#X connect 14 0 30 0;
#X connect 25 0 24 0;
#X connect 26 0 25 0;
#X connect 28 0 30 0;
#X connect 30 0 6 1;
#X connect 36 0 24 0;
#X connect 36 0 1 0;
#X connect 36 0 1 1;
#X restore 9 377 pd line_envelope;
#N canvas 339 -973 661 725 line_ramp_generator 0;
#X obj 92 250 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array ramp 882 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0;
#X coords 0 1 882 -1 200 140 1 0 0;
#X restore 13 344 graph;
#X obj 13 95 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 13 118 t b b;
#X msg 53 151 2000;
#X obj 13 227 line;
#X floatatom 13 308 5 0 0 0 - - -;
#X msg 13 151 1;
#X text 11 75 Trigger Ramp!;
#X text 131 75 Reset;
#X obj 133 95 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 133 151 0;
#X obj 8 9 cnv 15 450 25 empty empty Using_line/line~ 20 12 0 14 -233017
-66577 0;
#X obj 92 287 tabwrite~ ramp;
#X obj 67 227 line~;
#X obj 92 268 metro 25;
#X text 54 309 < Control rate output;
#X text 109 249 < show signal rate output;
#X text 295 72 [line]/[line~]'s left inlet is a target value \; it
reaches that target in the time specified (in milliseconds) to its
second inlet.;
#X obj 383 141 line~;
#X text 295 134 target value >;
#X text 417 135 < ramp-to-target time in ms;
#X text 296 224 target value >;
#X obj 384 231 line;
#X text 295 117 Signal Rate:;
#X text 295 188 Control Rate:;
#X text 383 206 ramp-to-target time in ms;
#X text 393 217 V;
#X text 295 320 For more info on each of these objects \, right click
on them and choose "help";
#X text 294 265 The line~ object (and its control-rate sibling \, line)
treat their right inlet specially. The inlets don't retain values the
way other inlets do but revert to zero whenever a target is received.
;
#X text 428 147 (resets to 0 after ramp);
#X text 429 219 (resets to 0 after ramp);
#X obj 16 551 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 16 581 1 2000;
#X obj 95 645 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 16 622 line;
#X floatatom 16 703 5 0 0 0 - - -;
#X obj 95 682 tabwrite~ ramp;
#X obj 70 622 line~;
#X obj 95 663 metro 25;
#X text 57 704 < Control rate output;
#X text 112 644 < show signal rate output;
#X text 81 529 Reset;
#X obj 83 549 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 83 581 0;
#X text 16 529 Ramp;
#X obj 12 49 cnv 15 170 25 empty empty Try_this: 20 12 0 10 -233017
-66577 0;
#X obj 12 499 cnv 15 170 25 empty empty A_shorthand_Version 20 12 0
10 -233017 -66577 0;
#X text 294 530 In this example \, message boxes with two numbers each
are connected to line~'s left inlet. This can be used as a shorthand
for the example above. This is because most Pd objects with more than
one inlet will automatically distribute lists of numbers across their
inlets (there are some exceptions). In this case \, "0 50" becomes
\, "50 at right and 0 at left.";
#X connect 0 0 15 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 4 0;
#X connect 4 0 5 1;
#X connect 4 0 14 1;
#X connect 5 0 6 0;
#X connect 7 0 5 0;
#X connect 7 0 14 0;
#X connect 10 0 11 0;
#X connect 11 0 5 0;
#X connect 11 0 14 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 32 0 33 0;
#X connect 33 0 35 0;
#X connect 33 0 38 0;
#X connect 34 0 39 0;
#X connect 35 0 36 0;
#X connect 38 0 37 0;
#X connect 39 0 37 0;
#X connect 43 0 44 0;
#X connect 44 0 38 0;
#X connect 44 0 35 0;
#X restore 9 347 pd line_ramp_generator;
#X text 151 347 using [line]/[line~] as a ramp generator;
#N canvas 140 37 1197 822 more_envelopes 0;
#X obj 12 143 line;
#X msg 13 119 1 \, 0 1000;
#X floatatom 12 168 5 0 0 0 - - -;
#X msg 71 274 1 \, 0 1000;
#X obj 71 298 line~;
#X obj 11 299 noise~;
#X obj 56 376 *~;
#X obj 46 434 dac~;
#X obj 11 323 *~ 0.2;
#X obj 236 297 line~;
#X obj 176 298 noise~;
#X obj 221 375 *~;
#X obj 211 434 dac~;
#X obj 176 322 *~ 0.2;
#X msg 236 274 1 \, 0 100;
#X obj 75 664 line~;
#X obj 15 597 noise~;
#X obj 60 694 *~;
#X obj 50 743 dac~;
#X obj 15 641 *~ 0.2;
#X msg 75 641 1 \, 0 \$1;
#X obj 75 597 f;
#X obj 100 566 nbx 4 14 10 1000 1 1 empty empty empty 0 -8 0 10 -262144
-1 -1 10 256;
#X text 149 566 ms;
#X msg 75 537 bang;
#X obj 602 687 noise~;
#X obj 641 743 *~;
#X obj 631 792 dac~;
#X obj 602 711 *~ 0.2;
#X obj 599 165 line;
#X floatatom 599 190 5 0 0 0 - - -;
#X msg 599 124 1 1000;
#X msg 668 124 0 1000;
#X text 597 106 attack;
#X obj 812 248 line;
#X msg 812 124 1 1000;
#X msg 840 220 0 1000;
#X text 810 106 attack;
#X text 890 220 decay;
#X obj 839 196 delay 1000;
#X obj 815 271 hsl 80 12 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 53 171 hsl 80 12 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X text 592 329 Now let's make a signal version of that \, using [line~]
;
#X text 10 199 Let's make a signal version of that \, with [line~]
and then envelope some [noise~] \, first with a 1000ms line \, and
then with a 100ms line:;
#X text 591 344 Let's also make the attack and decay times variable.
;
#X obj 656 462 f;
#X obj 741 428 nbx 4 14 5 1000 1 0 empty empty attack 0 -8 0 10 -262144
-1 -1 5 256;
#X text 790 428 ms;
#X msg 656 428 bang;
#X obj 923 633 f;
#X obj 960 610 nbx 4 14 10 10000 1 1 empty empty decay 0 -8 0 10 -262144
-1 -1 10 256;
#X text 1017 609 ms;
#X text 591 363 We want the decay to trigger directly after the attack
is finished \, so we set the time for the [delay] object to equal the
attack time:;
#X msg 923 656 0 \$1;
#X msg 656 541 1 \$1;
#X obj 923 540 delay;
#X obj 656 484 t f f;
#X text 995 554 inlet of [delay] forces it to;
#X text 996 569 output a bang after x ms);
#X obj 656 687 line~;
#X obj 8 9 cnv 15 450 25 empty empty More_Envelopes:_some_more_ways_of_using_line
20 12 0 14 -233017 -66577 0;
#X obj 8 41 cnv 15 230 25 empty empty 1:_Basic_envelope:_release_only
20 12 0 10 -233017 -66577 0;
#X text 10 77 A very basic envelope: starts at 1 \, then ramps down
(releases) to zero over 1000ms (1 second);
#X text 68 252 1s release;
#X text 235 252 0.1s release;
#X text 12 504 Ok \, now let's make a version that lets us choose the
length of the release.;
#X obj 224 535 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 239 534 \, it triggers the envelope;
#X obj 56 397 clip~ -1 1;
#X obj 221 396 clip~ -1 1;
#X text 173 565 <--- set the release time;
#X text 110 535 <--- Equivalent to;
#X obj 8 477 cnv 15 340 25 empty empty 2:_Basic_envelope:_release_only_with_variable_length
20 12 0 10 -233017 -66577 0;
#X text 102 596 <--- This float (floating point number) object stores
the;
#X text 132 610 release time;
#X obj 60 715 clip~ -1 1;
#X obj 598 41 cnv 15 340 25 empty empty 3:_Attack&Release:_an_AR_envelope
20 12 0 10 -233017 -66577 0;
#X text 596 71 Triggering these in sequence;
#X text 596 82 gives an AR envelope;
#X text 668 106 release;
#X text 806 71 This sequence can be automated as follows:;
#X text 906 196 <--- wait until the attack ramp is done;
#X obj 812 151 t l b;
#X text 852 151 <--- Trigger a bang (b) \, then the listed numbers
(l) for;
#X text 881 166 [line]. Remember \, trigger goes from right to left!
;
#X text 126 640 <--- the \$1 symbol in this message is a variale ($)
;
#X text 156 655 In this case \, the first item coming into the message
is added to the message in place of \$1 \, completing the list of values
for [line~]. In otherwords \, '\$1' is a variable placeholder for incoming
values.;
#X text 691 483 <--- send float first to [delay] \, then to the message
object;
#X text 690 540 <--- swap variable placeholder;
#X text 718 553 (\$1) for the incoming number;
#X text 966 538 <--- sending a float to the left;
#X obj 641 765 clip~ -1 1;
#X connect 0 0 2 0;
#X connect 0 0 41 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 6 1;
#X connect 5 0 8 0;
#X connect 6 0 68 0;
#X connect 8 0 6 0;
#X connect 9 0 11 1;
#X connect 10 0 13 0;
#X connect 11 0 69 0;
#X connect 13 0 11 0;
#X connect 14 0 9 0;
#X connect 15 0 17 1;
#X connect 16 0 19 0;
#X connect 17 0 75 0;
#X connect 19 0 17 0;
#X connect 20 0 15 0;
#X connect 21 0 20 0;
#X connect 22 0 21 1;
#X connect 24 0 21 0;
#X connect 25 0 28 0;
#X connect 26 0 91 0;
#X connect 28 0 26 0;
#X connect 29 0 30 0;
#X connect 31 0 29 0;
#X connect 32 0 29 0;
#X connect 34 0 40 0;
#X connect 35 0 82 0;
#X connect 36 0 34 0;
#X connect 39 0 36 0;
#X connect 45 0 56 0;
#X connect 46 0 45 1;
#X connect 48 0 45 0;
#X connect 49 0 53 0;
#X connect 50 0 49 1;
#X connect 53 0 59 0;
#X connect 54 0 59 0;
#X connect 55 0 49 0;
#X connect 56 0 54 0;
#X connect 56 1 55 0;
#X connect 59 0 26 1;
#X connect 68 0 7 0;
#X connect 68 0 7 1;
#X connect 69 0 12 0;
#X connect 69 0 12 1;
#X connect 75 0 18 0;
#X connect 75 0 18 1;
#X connect 82 0 34 0;
#X connect 82 1 39 0;
#X connect 91 0 27 0;
#X connect 91 0 27 1;
#X restore 9 407 pd more_envelopes;
#N canvas 145 170 986 513 making_a_percussive_sound 0;
#X obj 9 9 cnv 15 450 25 empty empty Putting_things_together:_Making_a_percussive_sound
20 12 0 14 -233017 -66577 0;
#X text 10 41 We can put the elements from this lab together to make
percussive sounds using subtractive synthesis.;
#X obj 428 149 cnv 15 210 200 empty empty Attack-Release_Envelope 20
12 0 14 -229107 -66577 0;
#X obj 447 214 t b b;
#X obj 496 191 nbx 5 14 10 1000 0 0 empty empty Attack 0 -8 0 10 -262144
-1 -1 25 256;
#X obj 566 191 nbx 5 14 10 1000 0 0 empty empty release 0 -8 0 10 -262144
-1 -1 350 256;
#X obj 518 242 del;
#X msg 481 306 1 \$1;
#X msg 551 306 0 \$1;
#X obj 481 275 f;
#X obj 551 274 f;
#X text 657 190 <--- set A-R durations;
#X text 657 210 <--- order two bangs;
#X text 657 240 <--- delay until attack;
#X text 687 253 ramp is done;
#X text 657 273 <--- A-R durations are stored;
#X text 687 283 here;
#X text 657 303 <--- When triggered \, send;
#X text 687 315 target-duration pairs;
#X text 687 328 to [line~];
#X obj 531 329 line~;
#X obj 208 149 cnv 15 210 80 empty empty Sound_Source 20 12 0 14 -208121
-66577 0;
#X obj 228 181 noise~;
#X obj 228 201 *~ 0.1;
#X text 271 180 white noise;
#X text 271 200 reduce volume;
#X obj 208 259 cnv 15 210 90 empty empty _Low_pass_filter 20 12 0 14
-236599 -66577 0;
#X obj 227 327 lop~;
#X obj 248 305 nbx 5 14 20 15000 0 0 empty empty LoP_Cutoff_Freq 0
-8 0 10 -262144 -1 -1 500 256;
#X obj 394 80 cnv 15 100 60 empty empty Trigger 20 12 0 14 -240428
-66577 0;
#X obj 427 104 bng 30 250 50 0 empty empty empty 17 7 0 40 -262144
-1 -1;
#X text 495 110 <--- bang;
#X obj 208 357 cnv 15 300 140 empty empty _Apply_envelope_&_output
20 12 0 14 -228837 -66577 0;
#X obj 227 431 clip~ -1 1;
#X obj 227 461 dac~;
#X obj 227 399 *~;
#X text 9 303 set filter cutoff frequency --->;
#X text 15 400 multiply noise by envelope --->;
#X text 44 440 clip and output audio --->;
#X connect 3 0 9 0;
#X connect 3 1 6 0;
#X connect 4 0 6 1;
#X connect 4 0 9 1;
#X connect 5 0 10 1;
#X connect 6 0 10 0;
#X connect 7 0 20 0;
#X connect 8 0 20 0;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X connect 20 0 35 1;
#X connect 22 0 23 0;
#X connect 23 0 27 0;
#X connect 27 0 35 0;
#X connect 28 0 27 1;
#X connect 30 0 3 0;
#X connect 33 0 34 0;
#X connect 33 0 34 1;
#X connect 35 0 33 0;
#X restore 490 348 pd making_a_percussive_sound;
