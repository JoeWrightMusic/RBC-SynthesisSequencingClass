#N canvas 332 37 970 549 10;
#N canvas 33 25 475 338 noise 0;
#X obj 15 70 noise~;
#X obj 15 125 *~ 0.1;
#X obj 15 308 dac~;
#X obj 30 188 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 15 220 *~;
#X text 95 68 White Noise: random numbers at signal rate in the range
-1 to 1;
#X text 95 121 Here we use *~ to multiply the audio signal \, this
acts as a volume control;
#X text 95 184 Toggle UI element: a toggle switch that spits out a
1 (on) or a 0 (off);
#X text 95 216 Here the *~ object is again used to control volume \,
but with the toggle connected to the right inlet \, it now works as
an off/on switch for the audio;
#X obj 14 18 cnv 15 100 25 empty empty Noise 20 12 0 14 -233017 -66577
0;
#X text 95 308 Audio output (digital to analog converter);
#X obj 15 271 clip~ -1 1;
#X text 95 272 Constrain signals in case of accidents!;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 11 0;
#X connect 11 0 2 0;
#X restore 492 105 pd noise;
#N canvas 79 38 551 685 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array lop 1000 float 0;
#X coords 0 1 999 -1 200 100 1 0 0;
#X restore 318 439 graph;
#X obj 180 433 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 296 526 -1;
#X text 302 481 0;
#X text 302 435 1;
#X obj 180 456 metro 100;
#X obj 22 654 dac~;
#X obj 180 479 tabwrite~ lop;
#X obj 22 243 noise~;
#X obj 22 371 lop~;
#X obj 43 321 mtof;
#X obj 46 270 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X text 180 270 Slider sends MIDI note values (0-127).;
#X text 180 241 Generate white noise.;
#X text 179 369 [lop~] allows frequencies below the cutoff frequency
to pass and reduces or eliminates frequencies above it.;
#X obj 22 557 *~ 0.1;
#X obj 10 42 cnv 15 380 180 empty empty Graphical_Depiction_of_a_Low_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array lop_display 6 float 5;
#A 0 0.971422 0.971422 0.971422 -0.16 -0.985712 -0.985712;
#X coords 0 1 5 -1 200 100 1;
#X restore 31 94 graph;
#X text 76 197 Frequency in Hz;
#X text 239 136 Volume of sound passed;
#X text 29 198 0;
#X text 239 181 0;
#X text 239 91 1;
#X text 90 98 ^ cutoff frequency;
#X text 206 198 20k;
#X obj 10 7 cnv 15 170 25 empty empty Low_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X text 316 410 Output of Low Pass Filter;
#X text 179 316 [mtof] converts MIDI notes to frequency in Hertz (cycles
per second).;
#X text 180 411 Graph output;
#X text 200 432 on/ff;
#X obj 22 616 *~;
#X obj 92 594 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 178 553 Multiply audio signal: multiplying by less than reuces
volume \, more than one increases volume;
#X text 178 591 Turn Audio on/off;
#X text 179 654 Output;
#X floatatom 54 288 5 0 0 0 - - -;
#X floatatom 54 340 5 0 0 0 - - -;
#X connect 1 0 5 0;
#X connect 5 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 9 0 15 0;
#X connect 10 0 9 1;
#X connect 10 0 36 0;
#X connect 11 0 35 0;
#X connect 11 0 10 0;
#X connect 15 0 30 0;
#X connect 30 0 6 0;
#X connect 30 0 6 1;
#X connect 31 0 30 1;
#X restore 492 141 pd filt 1;
#X text 563 140 Low Pass;
#N canvas 239 84 559 673 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array hip 1000 float 0;
#X coords 0 1 999 -1 200 100 1;
#X restore 307 431 graph;
#X obj 187 418 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 285 518 -1;
#X text 291 473 0;
#X text 291 427 1;
#X text 185 397 Graph output;
#X obj 187 441 metro 100;
#X obj 23 241 noise~;
#X obj 44 304 mtof;
#X obj 47 281 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 12700 1;
#X text 184 304 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 185 280 Slider sends MIDI note values (0-127).;
#X text 184 241 Generate white noise.;
#X text 185 353 [hip~] allows frequencies above the cutoff frequency
to pass and reduces or eliminates frequencies below it.;
#X obj 187 465 tabwrite~ hip;
#X obj 23 353 hip~;
#X obj 23 569 *~ 0.1;
#X obj 8 9 cnv 15 200 25 empty empty High_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X obj 8 45 cnv 15 380 180 empty empty Graphical_Depiction_of_a_High_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array hip_display 6 float 5;
#A 0 -0.9857 -0.9857 -0.9857 0.97142 0.97141 0.97141;
#X coords 0 1 5 -1 200 100 1;
#X restore 29 86 graph;
#X text 74 188 Frequency in Hz;
#X text 244 127 Volume of sound passed;
#X text 27 189 0;
#X text 234 173 0;
#X text 237 83 1;
#X text 55 87 cutoff frequency ^;
#X text 194 189 20k;
#X obj 23 648 dac~;
#X obj 23 620 *~;
#X obj 93 598 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 210 417 on/ff;
#X text 304 397 Output of High Pass Filter;
#X text 183 597 Turn audio on/off;
#X text 184 569 Reduce volume;
#X text 183 648 Output;
#X connect 1 0 6 0;
#X connect 6 0 14 0;
#X connect 7 0 15 0;
#X connect 8 0 15 1;
#X connect 9 0 8 0;
#X connect 15 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 28 0;
#X connect 28 0 27 0;
#X connect 28 0 27 1;
#X connect 29 0 28 1;
#X restore 492 177 pd filt 2;
#X text 564 177 High Pass;
#N canvas 105 25 558 718 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array bp 1000 float 0;
#X coords 0 1 999 -1 200 100 1;
#X restore 309 501 graph;
#X obj 189 488 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 287 588 -1;
#X text 293 543 0;
#X text 293 497 1;
#X text 187 466 Graph output;
#X obj 189 511 metro 100;
#X obj 22 237 noise~;
#X obj 47 285 mtof;
#X obj 50 267 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 7700 1;
#X text 187 285 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 189 237 Generate white noise.;
#X obj 189 534 tabwrite~ bp;
#X obj 22 418 bp~ 220 1;
#X text 188 414 [bp~] passes the center frequency unchanged \, and
reduces or eliminates frequencies above and below it.;
#X obj 73 337 nbx 5 14 0 20 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 20 256;
#X obj 10 7 cnv 15 170 25 empty empty Band_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X obj 10 43 cnv 15 380 180 empty empty Graphical_Depiction_of_a_Band_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array bp_display 7 float 5;
#A 0 -0.9857 -0.9857 -0.9857 1.61426 -0.985712 -0.985712 -0.985704
;
#X coords 0 1 6 -1 200 100 1;
#X restore 30 86 graph;
#X text 75 188 Frequency in Hz;
#X text 236 127 Volume of sound passed;
#X text 28 189 0;
#X text 195 189 20 \, 0;
#X text 237 173 0;
#X text 238 83 1;
#X text 18 90 cutoff frequency ^;
#X text 189 265 MIDI slider (0-127).;
#X text 189 333 The third inlet of [bp] controls the Resonance \, i.e.
how far above or below the center frequency the filter still allows
sound to pass. Generally this number is between 0-10.;
#X obj 22 614 *~ 0.1;
#X obj 22 693 dac~;
#X obj 22 665 *~;
#X obj 92 643 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 182 642 Turn audio on/off;
#X text 183 614 Reduce volume;
#X text 182 693 Output;
#X text 211 487 on/ff;
#X text 304 466 Output of Band Pass Filter;
#X connect 1 0 6 0;
#X connect 6 0 12 0;
#X connect 7 0 13 0;
#X connect 8 0 13 1;
#X connect 9 0 8 0;
#X connect 13 0 12 0;
#X connect 13 0 28 0;
#X connect 15 0 13 2;
#X connect 28 0 30 0;
#X connect 30 0 29 0;
#X connect 30 0 29 1;
#X connect 31 0 30 1;
#X restore 492 213 pd filt 3;
#X text 564 212 Band Pass;
#N canvas 140 151 1142 627 filter 0;
#X obj 68 92 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 8 40 Just as an example of how filters might be used \, here
is a random distribution of band-pass filters:;
#X obj 9 13 cnv 15 200 25 empty empty Filter_Example 20 12 0 14 -233017
-66577 0;
#X obj 10 206 noise~;
#X obj 68 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 10 553 dac~;
#X obj 10 495 *~;
#X obj 25 473 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 57 473 Turn audio on/off;
#X text 58 444 Reduce volume;
#X text 58 554 Output;
#X text 86 91 This bang triggers a change in sonic 'colour' when clicked
;
#X obj 68 229 random 9950;
#X obj 68 248 + 50;
#X obj 10 444 *~ 0.05;
#X obj 550 396 cnv 15 580 220 empty empty There_are_8_identical_filters_contributing_to_the_sound
20 12 0 14 -208240 -66577 0;
#X text 728 436 The bang UI object triggers a random frequency value
;
#X text 728 481 +50 shifts the range of possible frequencies up to
a minimum of 50 hz;
#X text 728 582 Refer to the previous [pd filt 3] examlple if you need
help understanding this further;
#X obj 10 331 bp~ 0 50;
#X obj 10 522 clip~ -1 1;
#X text 78 522 Clip signals;
#X obj 68 287 line;
#X floatatom 68 306 5 0 0 0 - - -;
#X obj 572 437 noise~;
#X obj 630 437 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 630 460 random 9950;
#X obj 630 479 + 50;
#X obj 572 584 bp~ 0 50;
#X obj 630 540 line;
#X floatatom 630 559 5 0 0 0 - - -;
#X msg 68 267 \$1 1000;
#X msg 630 520 \$1 1000;
#X text 728 514 The [line] object creates a smooth transition to the
new frequency;
#X obj 150 206 noise~;
#X obj 208 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 208 229 random 9950;
#X obj 208 248 + 50;
#X obj 150 331 bp~ 0 50;
#X obj 208 287 line;
#X floatatom 208 306 5 0 0 0 - - -;
#X msg 208 267 \$1 1000;
#X obj 290 206 noise~;
#X obj 348 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 348 229 random 9950;
#X obj 348 248 + 50;
#X obj 290 331 bp~ 0 50;
#X obj 348 287 line;
#X floatatom 348 306 5 0 0 0 - - -;
#X msg 348 267 \$1 1000;
#X obj 430 206 noise~;
#X obj 488 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 488 229 random 9950;
#X obj 488 248 + 50;
#X obj 430 331 bp~ 0 50;
#X obj 488 287 line;
#X floatatom 488 306 5 0 0 0 - - -;
#X msg 488 267 \$1 1000;
#X obj 570 206 noise~;
#X obj 628 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 628 229 random 9950;
#X obj 628 248 + 50;
#X obj 570 331 bp~ 0 50;
#X obj 628 287 line;
#X floatatom 628 306 5 0 0 0 - - -;
#X msg 628 267 \$1 1000;
#X obj 710 206 noise~;
#X obj 768 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 768 229 random 9950;
#X obj 768 248 + 50;
#X obj 710 331 bp~ 0 50;
#X obj 768 287 line;
#X floatatom 768 306 5 0 0 0 - - -;
#X msg 768 267 \$1 1000;
#X obj 850 206 noise~;
#X obj 908 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 908 229 random 9950;
#X obj 908 248 + 50;
#X obj 850 331 bp~ 0 50;
#X obj 908 287 line;
#X floatatom 908 306 5 0 0 0 - - -;
#X msg 908 267 \$1 1000;
#X obj 990 206 noise~;
#X obj 1048 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144
-1 -1;
#X obj 1048 229 random 9950;
#X obj 1048 248 + 50;
#X obj 990 331 bp~ 0 50;
#X obj 1048 287 line;
#X floatatom 1048 306 5 0 0 0 - - -;
#X msg 1048 267 \$1 1000;
#X connect 0 0 4 0;
#X connect 0 0 35 0;
#X connect 0 0 43 0;
#X connect 0 0 51 0;
#X connect 0 0 59 0;
#X connect 0 0 67 0;
#X connect 0 0 75 0;
#X connect 0 0 83 0;
#X connect 3 0 19 0;
#X connect 4 0 12 0;
#X connect 6 0 20 0;
#X connect 7 0 6 1;
#X connect 12 0 13 0;
#X connect 13 0 31 0;
#X connect 14 0 6 0;
#X connect 19 0 14 0;
#X connect 20 0 5 1;
#X connect 20 0 5 0;
#X connect 22 0 23 0;
#X connect 23 0 19 1;
#X connect 24 0 28 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 32 0;
#X connect 29 0 30 0;
#X connect 30 0 28 1;
#X connect 31 0 22 0;
#X connect 32 0 29 0;
#X connect 34 0 38 0;
#X connect 35 0 36 0;
#X connect 36 0 37 0;
#X connect 37 0 41 0;
#X connect 38 0 14 0;
#X connect 39 0 40 0;
#X connect 40 0 38 1;
#X connect 41 0 39 0;
#X connect 42 0 46 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 45 0 49 0;
#X connect 46 0 14 0;
#X connect 47 0 48 0;
#X connect 48 0 46 1;
#X connect 49 0 47 0;
#X connect 50 0 54 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 57 0;
#X connect 54 0 14 0;
#X connect 55 0 56 0;
#X connect 56 0 54 1;
#X connect 57 0 55 0;
#X connect 58 0 62 0;
#X connect 59 0 60 0;
#X connect 60 0 61 0;
#X connect 61 0 65 0;
#X connect 62 0 14 0;
#X connect 63 0 64 0;
#X connect 64 0 62 1;
#X connect 65 0 63 0;
#X connect 66 0 70 0;
#X connect 67 0 68 0;
#X connect 68 0 69 0;
#X connect 69 0 73 0;
#X connect 70 0 14 0;
#X connect 71 0 72 0;
#X connect 72 0 70 1;
#X connect 73 0 71 0;
#X connect 74 0 78 0;
#X connect 75 0 76 0;
#X connect 76 0 77 0;
#X connect 77 0 81 0;
#X connect 78 0 14 0;
#X connect 79 0 80 0;
#X connect 80 0 78 1;
#X connect 81 0 79 0;
#X connect 82 0 86 0;
#X connect 83 0 84 0;
#X connect 84 0 85 0;
#X connect 85 0 89 0;
#X connect 86 0 14 0;
#X connect 87 0 88 0;
#X connect 88 0 86 1;
#X connect 89 0 87 0;
#X restore 492 249 pd filter colours;
#X text 607 243 An example of how filters might be used \, here is
a random distribution of band-pass filters:;
#N canvas 653 127 702 584 line 0;
#X obj 56 79 osc~ 440;
#X obj 54 361 dac~;
#X msg 446 79 \; pd dsp 1;
#X msg 538 79 \; pd dsp 0;
#X text 467 112 ON;
#X text 555 112 OFF;
#X obj 56 269 *~;
#X obj 72 243 line~;
#X text 129 243 <--- ramp generator;
#X text 132 78 <-- sine wave;
#X msg 72 103 0.1 2000;
#X msg 72 177 0 2000;
#X msg 72 125 0.1 50;
#X msg 72 199 0 50;
#X msg 72 147 0.1;
#X msg 72 221 0;
#X text 274 124 ON;
#X text 154 105 <-- slow;
#X text 144 126 <-- fast;
#X text 111 146 <-- instantly;
#X text 271 197 OFF;
#X text 136 178 <-- slow;
#X text 129 199 <-- fast;
#X text 109 219 <-- instantly;
#X text 112 161 ----------------------;
#X text 95 360 <-- out;
#X text 103 7 CONTROLLING AMPLITUDE USING LINE~;
#X text 41 384 Line~'s left inlet is a target value \; it reaches that
target in the time specified (in milliseconds) to its right inlet.
;
#X text 34 495 The line~ object (and its control brother \, line) treat
their right inlet specially. The inlets don't retain values the way
other inlets do but revert to zero whenever a target is received.;
#X text 14 27 In this patch \, the multiplier is configured to multiply
two signals. The amplitude is now a signal computed by the line~ object.
;
#X text 37 424 (In this example \, message boxes with two numbers each
are connected to line~'s left inlet. Except in some special cases \,
Pd objects with more than one inlet will automatically distribute lists
of numbers across their inlets. In this case \, "0 50" becomes \, "50
at right and 0 at left.");
#X text 386 557 updated for Pd version 0.36;
#X text 93 268 <-- multiply the sine wave by the ramp. There's no longer
a "0" argument-- this tells Pd to expect a signal here.;
#X obj 91 333 tabwrite~ line;
#X obj 101 310 metro 250;
#X obj 108 292 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array line 882 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0;
#X coords 0 1 882 -1 200 140 1 0 0;
#X restore 468 338 graph;
#X msg 270 221 0.1 \, 0 3000;
#X connect 0 0 6 0;
#X connect 6 0 1 0;
#X connect 6 0 1 1;
#X connect 6 0 33 0;
#X connect 7 0 6 1;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 14 0 7 0;
#X connect 15 0 7 0;
#X connect 34 0 33 0;
#X connect 35 0 34 0;
#X connect 37 0 7 0;
#X restore 8 491 pd line;
#X text 151 490 Envelope using line;
#X text 151 517 More ways of using line;
#N canvas 32 25 1164 794 more_line 0;
#X obj 91 123 line;
#X msg 92 99 1 \, 0 1000;
#X floatatom 91 148 5 0 0 0 - - -;
#X obj 505 68 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 508 690 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 151 284 1 \, 0 1000;
#X obj 151 308 line~;
#X obj 91 265 noise~;
#X obj 136 342 *~;
#X obj 129 370 dac~;
#X obj 91 289 *~ 0.2;
#X obj 316 311 line~;
#X obj 256 268 noise~;
#X obj 301 345 *~;
#X obj 291 374 dac~;
#X obj 256 292 *~ 0.2;
#X msg 316 287 1 \, 0 100;
#X obj 205 580 line~;
#X obj 145 537 noise~;
#X obj 190 614 *~;
#X obj 180 643 dac~;
#X obj 145 561 *~ 0.2;
#X msg 205 557 1 \, 0 \$1;
#X obj 205 536 f;
#X obj 230 506 nbx 4 14 10 1000 1 1 empty empty empty 0 -8 0 10 -262144
-1 -1 756.236 256;
#X text 279 506 ms;
#X msg 205 477 bang;
#X text 85 437 the number box stores the time \, and the [bang( message
triggers the envelope;
#X obj 592 578 noise~;
#X obj 688 633 *~;
#X obj 678 662 dac~;
#X obj 592 602 *~ 0.2;
#X obj 600 195 line;
#X floatatom 600 220 5 0 0 0 - - -;
#X msg 554 154 1 1000;
#X msg 623 155 0 1000;
#X text 552 136 attack;
#X text 623 136 decay;
#X obj 788 222 line;
#X msg 742 147 1 1000;
#X msg 794 194 0 1000;
#X text 740 129 attack;
#X text 844 193 decay;
#X obj 793 170 delay 1000;
#X obj 748 174 t a b;
#X obj 791 247 hsl 80 12 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 132 151 hsl 80 12 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X text 586 116 MANUAL:;
#X text 772 105 AUTOMATIC:;
#X text 541 279 Now let's make a signal version of that \, using [line~]
;
#X text 86 424 Ok \, now let's make that decay time variable:;
#X text 80 193 Let's make a signal version of that \, with [line~]
and then envelope some [noise~] \, first with a 1000ms line \, and
then with a 100ms line:;
#X text 89 57 Most basic envelope: starts at 1 \, goes down to zero
in 1000ms;
#X text 631 79 Attack and Decay:;
#X text 540 294 Let's also make the attack and decay times variable.
;
#X obj 656 442 f;
#X obj 681 412 nbx 4 14 5 1000 1 0 empty empty attack 0 -8 0 10 -262144
-1 -1 5 256;
#X text 730 412 ms;
#X msg 656 378 bang;
#X obj 703 543 f;
#X obj 740 540 nbx 4 14 10 10000 1 1 empty empty decay 0 -8 0 10 -262144
-1 -1 105.605 256;
#X text 787 539 ms;
#X text 537 313 We want the decay to trigger directly after the attack
is finished \, so we set the time for the [delay] object to equal the
attack time:;
#X msg 703 566 0 \$1;
#X msg 656 521 1 \$1;
#X obj 703 490 delay;
#X obj 656 465 t f f;
#X text 740 468 (sending a float to the left;
#X text 751 484 inlet of [delay] forces it to;
#X text 748 498 output a bang after x ms);
#X obj 703 597 line~;
#X connect 0 0 2 0;
#X connect 0 0 46 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 8 0 9 1;
#X connect 10 0 8 0;
#X connect 11 0 13 1;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 13 0 14 1;
#X connect 15 0 13 0;
#X connect 16 0 11 0;
#X connect 17 0 19 1;
#X connect 18 0 21 0;
#X connect 19 0 20 0;
#X connect 19 0 20 1;
#X connect 21 0 19 0;
#X connect 22 0 17 0;
#X connect 23 0 22 0;
#X connect 24 0 23 1;
#X connect 26 0 23 0;
#X connect 28 0 31 0;
#X connect 29 0 30 0;
#X connect 29 0 30 1;
#X connect 31 0 29 0;
#X connect 32 0 33 0;
#X connect 34 0 32 0;
#X connect 35 0 32 0;
#X connect 38 0 45 0;
#X connect 39 0 44 0;
#X connect 40 0 38 0;
#X connect 43 0 40 0;
#X connect 44 0 38 0;
#X connect 44 1 43 0;
#X connect 55 0 66 0;
#X connect 56 0 55 1;
#X connect 58 0 55 0;
#X connect 59 0 63 0;
#X connect 60 0 59 1;
#X connect 63 0 70 0;
#X connect 64 0 70 0;
#X connect 65 0 59 0;
#X connect 66 0 64 0;
#X connect 66 1 65 0;
#X connect 70 0 29 1;
#X restore 8 518 pd more_line;
#N canvas 227 24 1439 1004 percussive_sounds 0;
#X obj 429 295 noise~;
#X obj 441 368 *~;
#X obj 314 45 line~;
#X text 365 47 <- create a smooth signal ramp;
#X obj 658 97 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 639 143 t b b;
#X msg 318 13 1 100;
#X msg 373 14 target_value time_to_reach_target_value;
#X obj 544 338 line~;
#X msg 607 227 1 1;
#X obj 458 457 dac~;
#X obj 459 409 lop~ 500;
#X obj 1462 612 noise~;
#X obj 1469 739 *~;
#X obj 1516 635 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1516 649 t b b;
#X obj 1518 717 line~;
#X msg 1518 694 0 500;
#X msg 1573 695 1 1;
#X obj 1517 672 del 5;
#X obj 1468 772 bp~ 250 5;
#X obj 1509 810 *~;
#X obj 1558 788 line~;
#X msg 1613 766 1 1;
#X obj 1557 743 del 5;
#X obj 1508 843 bp~ 1000 5;
#X obj 1471 875 dac~;
#X msg 1558 765 0 50;
#X text 331 296 White noise gen;
#X text 523 411 Low Pass Filter;
#X text 602 318 The line~ object generates linear ramps whose levels
and timing are determined by messages you send it. The messages may
be a single target value (causing the output to jump to the target)
or a target and a time in milliseconds (to start a new ramp.);
#X text 692 95 Bang;
#X text 164 141 The delay object sends a bang to its outlet after a
delay in milliseconds specified by its right inlet or its creation
argument. Sending a bang to a delay which is already set will reschedule
its output \, replacing any previous setting.;
#X obj 539 170 del 5;
#X text 638 409 The filter is initialized to cut off frequencies above
500Hz.;
#X text 324 230 a pair of numbers starts a ramp;
#X msg 524 230 0 300;
#X connect 0 0 1 0;
#X connect 1 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 33 0;
#X connect 5 1 9 0;
#X connect 6 0 2 0;
#X connect 8 0 1 1;
#X connect 9 0 8 0;
#X connect 11 0 10 0;
#X connect 11 0 10 1;
#X connect 12 0 13 0;
#X connect 12 0 21 0;
#X connect 13 0 20 0;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 15 0 24 0;
#X connect 15 1 18 0;
#X connect 15 1 23 0;
#X connect 16 0 13 1;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 19 0 17 0;
#X connect 20 0 26 0;
#X connect 21 0 25 0;
#X connect 22 0 21 1;
#X connect 23 0 22 0;
#X connect 24 0 27 0;
#X connect 25 0 26 1;
#X connect 27 0 22 0;
#X connect 33 0 36 0;
#X connect 36 0 8 0;
#X restore 492 409 pd percussive_sounds;
#X text 626 408 Using Subtractive synthesis to make percussive sounds
;
#X obj 9 141 line~;
#X obj 9 177 del;
#X obj 9 242 hip~;
#X obj 9 314 bp~;
#X obj 9 278 lop~;
#X text 56 140 generate audio ramps;
#X text 56 240 High Pass Filter;
#X text 55 277 Low Pass Filter;
#X text 55 314 Band Pass Filter;
#X obj 9 105 noise~;
#N canvas 112 278 1025 735 more 0;
#N canvas 159 39 603 551 crash 0;
#X obj 61 227 line~;
#X obj 188 148 t b b;
#X obj 187 249 line~;
#X obj 161 189 del 4;
#X obj 119 325 *~;
#X obj 247 156 noise~;
#X obj 248 191 *~ 1;
#X obj 393 268 line~;
#X obj 27 115 t b b b;
#X obj 35 167 del 10;
#X msg 157 211 0 100;
#X obj 93 66 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 155 381 hip~ 2000;
#X obj 107 279 phasor~;
#X msg 87 189 5500 10;
#X msg 32 189 4500 100;
#X msg 215 210 1;
#X obj 373 155 t b b b;
#X msg 366 242 0 1500;
#X obj 156 429 *~ 0.04;
#X obj 355 210 del 20;
#X msg 418 219 1 50;
#X obj 248 213 hip~ 15000;
#X obj 341 305 *~;
#X msg 484 220 5 0;
#X obj 165 473 dac~;
#X connect 0 0 13 0;
#X connect 1 0 3 0;
#X connect 1 0 3 0;
#X connect 1 1 16 0;
#X connect 2 0 4 1;
#X connect 3 0 10 0;
#X connect 4 0 12 0;
#X connect 5 0 6 0;
#X connect 6 0 22 0;
#X connect 7 0 23 1;
#X connect 8 1 9 0;
#X connect 8 2 14 0;
#X connect 9 0 15 0;
#X connect 10 0 2 0;
#X connect 11 0 8 0;
#X connect 11 0 1 0;
#X connect 11 0 17 0;
#X connect 12 0 19 0;
#X connect 13 0 4 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 2 0;
#X connect 17 0 20 0;
#X connect 17 1 21 0;
#X connect 17 2 24 0;
#X connect 18 0 7 0;
#X connect 19 0 25 0;
#X connect 19 0 25 1;
#X connect 20 0 18 0;
#X connect 21 0 7 0;
#X connect 22 0 23 0;
#X connect 23 0 12 0;
#X connect 24 0 7 0;
#X restore 39 63 pd crash;
#N canvas 1172 47 450 300 bell 0;
#X obj 196 92 t b b;
#X obj 195 193 line~;
#X obj 33 184 *~;
#X obj 88 39 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 145 125 del 10;
#X msg 165 155 0 200;
#X obj 33 141 +~ 440;
#X obj 34 119 *~ 10000;
#X obj 33 206 *~ 0.5;
#X obj 25 95 osc~ 3000;
#X obj 30 163 osc~;
#X msg 224 151 0.1 0;
#X obj 116 255 dac~;
#X connect 0 0 4 0;
#X connect 0 0 4 0;
#X connect 0 1 11 0;
#X connect 1 0 2 1;
#X connect 2 0 8 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 8 0 12 0;
#X connect 8 0 12 1;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X connect 11 0 1 0;
#X restore 40 103 pd bell;
#N canvas 243 62 966 775 kick 0;
#X obj 82 255 line~;
#X obj 82 272 osc~;
#X obj 119 342 dac~;
#X obj 123 69 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 93 119 t b b;
#X obj 57 165 del 5;
#X msg 52 204 37 200;
#X msg 112 213 70;
#X obj 119 316 *~;
#X obj 154 159 t b b;
#X obj 154 232 line~;
#X msg 241 223 1 1;
#X obj 153 187 del 5;
#X msg 154 209 0 300;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 3 0 4 0;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 2 0;
#X connect 8 0 2 1;
#X connect 9 0 12 0;
#X connect 9 1 11 0;
#X connect 10 0 8 1;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X restore 40 141 pd kick;
#N canvas 25 23 1384 865 woosh 0;
#X obj 32 79 noise~;
#X obj 39 161 *~;
#X obj 86 57 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 86 71 t b b;
#X obj 88 139 line~;
#X msg 88 116 0 500;
#X obj 79 232 *~;
#X obj 128 210 line~;
#X msg 183 188 1 1;
#X obj 127 165 del 5;
#X obj 41 297 dac~;
#X msg 143 117 1 400;
#X obj 87 94 del 400;
#X msg 128 187 0 500;
#X obj 78 265 bp~ 1000 10;
#X obj 38 194 bp~ 250 10;
#X obj 228 220 *~;
#X obj 277 198 line~;
#X msg 277 175 0 500;
#X obj 227 253 bp~ 2456 20;
#X msg 332 176 1 100;
#X obj 276 153 del 100;
#X obj 382 198 *~;
#X obj 431 176 line~;
#X msg 431 153 0 500;
#X obj 430 131 del 1000;
#X msg 474 157 1 5000;
#X obj 381 231 bp~ 6000 25;
#X connect 0 0 1 0;
#X connect 0 0 6 0;
#X connect 0 0 16 0;
#X connect 0 0 22 0;
#X connect 1 0 15 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 3 0 12 0;
#X connect 3 0 21 0;
#X connect 3 0 25 0;
#X connect 3 1 11 0;
#X connect 3 1 8 0;
#X connect 3 1 20 0;
#X connect 3 1 26 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 14 0;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 9 0 13 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 13 0 7 0;
#X connect 14 0 10 1;
#X connect 14 0 10 0;
#X connect 15 0 10 0;
#X connect 15 0 10 1;
#X connect 16 0 19 0;
#X connect 17 0 16 1;
#X connect 18 0 17 0;
#X connect 19 0 10 0;
#X connect 19 0 10 1;
#X connect 20 0 17 0;
#X connect 21 0 18 0;
#X connect 22 0 27 0;
#X connect 23 0 22 1;
#X connect 24 0 23 0;
#X connect 25 0 24 0;
#X connect 26 0 23 0;
#X connect 27 0 10 0;
#X connect 27 0 10 1;
#X restore 39 182 pd woosh;
#N canvas 25 23 1205 914 hat 0;
#X obj 62 85 noise~;
#X obj 69 192 *~;
#X obj 135 77 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 135 92 t b b;
#X obj 118 170 line~;
#X msg 173 147 1 1;
#X msg 118 147 0 30;
#X obj 117 124 del 3;
#X floatatom 173 194 5 0 0 0 - - -;
#X obj 68 209 hip~ 5600;
#X obj 68 227 dac~;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 9 0 10 1;
#X restore 40 221 pd hat;
#N canvas 25 23 1455 976 snare 0;
#X obj 136 302 noise~;
#X obj 148 375 *~;
#X obj 365 104 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 346 150 t b b;
#X obj 251 345 line~;
#X msg 314 234 1 1;
#X obj 165 464 dac~;
#X obj 166 416 lop~ 500;
#X text 230 418 Low Pass Filter;
#X text 399 102 Bang;
#X obj 246 177 del 5;
#X msg 231 237 0 300;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 3 1 5 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 7 0 6 0;
#X connect 7 0 6 1;
#X connect 10 0 11 0;
#X connect 11 0 4 0;
#X restore 40 263 pd snare;
#X restore 492 445 pd more percussive sounds;
#X text 658 446 kick \, snare \, hat etc;
#X obj 9 13 cnv 15 700 40 empty empty Lab2-Amplitude_Control/Filters/Percussive_Sounds
20 12 0 20 -233017 -66577 0;
#X obj 9 60 cnv 15 200 25 empty empty 1:_Key_Ingredients 20 12 0 14
-228856 -66577 0;
#X text 56 104 uniformly distributed white noise;
#X text 56 174 The delay object sends a bang to its outlet after a
delay in milliseconds specified by its right inlet or its creation
argument. Right click and choose 'help' to see more details and examples
;
#X obj 9 364 cnv 15 200 25 empty empty 2:_Key_Pd_Knowledge 20 12 0
14 -228856 -66577 0;
#X obj 490 60 cnv 15 200 25 empty empty 3:_Filter_Examples 20 12 0
14 -228856 -66577 0;
#X obj 490 364 cnv 15 400 25 empty empty 4:_Percussive_Sounds_Combining_Line_and_Filters
20 12 0 14 -228856 -66577 0;
#N canvas 32 25 992 346 bang 0;
#X obj 12 9 cnv 15 270 25 empty empty Bang_Order 20 12 0 14 -233017
-66577 0;
#X text 11 36 The rules outlined in this patch aren't immediately obvious
\, but understanding them can make the difference between a working
patch and a broken one!;
#X obj 12 90 cnv 15 130 25 empty empty Bang_Order 20 12 0 14 -233017
-66577 0;
#X obj 13 184 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 13 285 print;
#X text 36 185 Bang: sends 'bang' message when clicked;
#X text 53 307 (Press cmd-R to see the PD window);
#X obj 13 153 cnv 15 40 25 empty empty 1 20 12 0 10 -233017 -66577
0;
#X text 12 118 PD will send out bangs in the order that you connect
objects to a bang. Lets start with this example;
#X obj 323 184 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 323 283 print;
#X obj 323 153 cnv 15 40 25 empty empty 2 20 12 0 10 -233017 -66577
0;
#X msg 323 206 1;
#X msg 341 232 2;
#X text 57 152 Print a bang;
#X text 367 150 Now we add some messages for;
#X text 360 165 the bang object to trigger:;
#X text 363 283 The messages are printed in the;
#X text 364 295 order they're conncected;
#X obj 623 153 cnv 15 40 25 empty empty 3 20 12 0 10 -233017 -66577
0;
#X msg 378 258 third;
#X text 420 258 connected third;
#X text 372 231 connected second;
#X text 354 206 connected first;
#X obj 623 184 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 623 283 print;
#X msg 738 256 1;
#X msg 676 232 2;
#X msg 623 208 third;
#X text 665 208 connected third;
#X text 707 231 connected second;
#X text 769 256 connected first;
#X text 667 150 These objects are conncted in the;
#X text 667 164 same order \, but arranged differently;
#X text 663 283 This shows that the messages above do indeed;
#X text 663 296 arrive in the order that the objects are connected
\,;
#X text 663 309 and not according to their position on-screen.;
#X text 53 279 [print]: prints incoming messages;
#X text 48 293 to PD window;
#X connect 3 0 4 0;
#X connect 9 0 12 0;
#X connect 9 0 13 0;
#X connect 9 0 20 0;
#X connect 12 0 10 0;
#X connect 13 0 10 0;
#X connect 20 0 10 0;
#X connect 24 0 26 0;
#X connect 24 0 27 0;
#X connect 24 0 28 0;
#X connect 26 0 25 0;
#X connect 27 0 25 0;
#X connect 28 0 25 0;
#X restore 9 399 pd bang order;
#X text 150 399 SUPER IMPORTANT: quirks about message ordering in PD
;
#N canvas 41 55 1158 389 order 0;
#X obj 13 14 cnv 15 420 25 empty empty Bang_order_consequences:_why_should_we_care?
20 12 0 14 -233017 -66577 0;
#X obj 81 152 +;
#X text 13 146 hot inlet >;
#X text 102 146 < cold inlet;
#X text 12 174 Messages to the hot inlet trigger a math operation \,
and gives us a result from the outlet of [+ ];
#X text 12 78 If we don't know the exact order that messages arrive
at an object \, we can end up with some odd behaviour. Lets take a
simple example \, starting with a closer look at the [+ ] operator.
;
#X text 12 204 Messages to the cold inlet are stored until the hot
inlet reveives a new value. They won't trigger an output on their own:
;
#X obj 137 260 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 137 284 1;
#X obj 185 260 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 185 284 2;
#X obj 159 322 +;
#X text 87 316 hot inlet >;
#X text 183 316 < cold inlet;
#X obj 159 347 print;
#X text 11 259 Triggers an output >;
#X text 201 259 < Doesn't trigger an output;
#X obj 14 49 cnv 15 170 25 empty empty 1:_Hot_and_Cold_Inlets 20 12
0 10 -233017 -66577 0;
#X text 10 130 [+ ] has two inlets: one 'hot' and one 'cold':;
#X obj 403 49 cnv 15 200 25 empty empty 2:_Confusing_Bang_Order_Errors
20 12 0 10 -233017 -66577 0;
#X text 402 79 Now lets imagine that we want to first set the values
sent to [+ ] \, and then add together some new numbers at a later point:
;
#X obj 439 181 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 562 181 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 405 213 5;
#X msg 606 211 10;
#X msg 562 211 105;
#X obj 529 258 +;
#X text 400 132 first calculation:;
#X text 469 288 RESULT;
#X floatatom 528 288 5 0 0 0 - - -;
#X text 560 132 second calculation:;
#X text 560 148 should give 115;
#X text 399 147 should give 0;
#X msg 465 213 -5;
#X text 398 328 If you're used to reading from left to right \, you
might assume from looking at this patch that when we click on the seccond
bang object \, we get the result of 115 But we get 5 instead \, why?!
;
#X obj 793 49 cnv 15 200 25 empty empty 3:_These_can_be_tricky_to_spot
20 12 0 10 -233017 -66577 0;
#X text 792 78 The problem with example two was in the order that the
second bang was connected to the two messages.;
#X text 792 110 The bang was first connected to [10( \, then it was
connected to [105(.;
#X text 661 211 <<-----------------;
#X obj 796 174 cnv 15 80 60 empty empty empty 20 12 0 14 -208240 -66577
0;
#X obj 801 180 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 845 210 10;
#X msg 801 210 105;
#X text 792 140 This means that the number 10 is sent to the hot inlet
of [+ ] before 105 reaches the cold inlet.;
#X text 792 241 So \, the calculation runs in [+ ] with the old value
of -5 \, and we get the result of 5 If you click the second bang again
\, you will then get the correct result \, using the stored value of
105 that was missed beforehand.;
#X text 791 298 This is a trivial \, and not very realistic example.
In a larger patch \, this kind of thing can be hard to spot when things
go wrong.;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 9 0 10 0;
#X connect 10 0 11 1;
#X connect 11 0 14 0;
#X connect 21 0 33 0;
#X connect 21 0 23 0;
#X connect 22 0 24 0;
#X connect 22 0 25 0;
#X connect 23 0 26 0;
#X connect 24 0 26 0;
#X connect 25 0 26 1;
#X connect 26 0 29 0;
#X connect 33 0 26 1;
#X connect 40 0 41 0;
#X connect 40 0 42 0;
#X restore 8 431 pd order consequences;
#X text 150 430 why should we care about bang order?;
#N canvas 32 25 450 300 order 0;
#X restore 8 462 pd order solutions;
#X text 150 462 best practices to avoid confusing errors;
