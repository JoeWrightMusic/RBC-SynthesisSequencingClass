#N canvas 177 76 1047 529 10;
#N canvas 33 25 455 320 noise 0;
#X obj 15 70 noise~;
#X obj 15 125 *~ 0.1;
#X obj 15 288 dac~;
#X obj 30 188 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 15 220 *~;
#X text 65 68 White Noise: random numbers at signal rate in the range
-1 to 1;
#X text 65 121 Here we use *~ to multiply the audio signal \, this
acts as a volume control;
#X text 65 184 Toggle UI element: a toggle switch that spits out a
1 (on) or a 0 (off);
#X text 65 216 Here the *~ object is again used to control volume \,
but with the toggle connected to the right inlet \, it now works as
an off/on switch for the audio;
#X obj 14 18 cnv 15 100 25 empty empty Noise 20 12 0 14 -233017 -66577
0;
#X text 65 288 Audio output (digital to analog converter);
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 2 0;
#X connect 4 0 2 1;
#X restore 492 129 pd noise;
#N canvas 79 38 551 685 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array lop 1000 float 0;
#X coords 0 1 999 -1 200 100 1 0 0;
#X restore 318 439 graph;
#X obj 180 433 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 296 526 -1;
#X text 302 481 0;
#X text 302 435 1;
#X obj 180 456 metro 100;
#X obj 22 654 dac~;
#X obj 180 479 tabwrite~ lop;
#X obj 22 243 noise~;
#X obj 22 371 lop~;
#X obj 43 321 mtof;
#X obj 46 270 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X text 180 270 Slider sends MIDI note values (0-127).;
#X text 180 241 Generate white noise.;
#X text 179 369 [lop~] allows frequencies below the cutoff frequency
to pass and reduces or eliminates frequencies above it.;
#X obj 22 557 *~ 0.1;
#X obj 10 42 cnv 15 380 180 empty empty Graphical_Depiction_of_a_Low_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array lop_display 6 float 5;
#A 0 0.971422 0.971422 0.971422 -0.16 -0.985712 -0.985712;
#X coords 0 1 5 -1 200 100 1;
#X restore 31 94 graph;
#X text 76 197 Frequency in Hz;
#X text 239 136 Volume of sound passed;
#X text 29 198 0;
#X text 239 181 0;
#X text 239 91 1;
#X text 90 98 ^ cutoff frequency;
#X text 206 198 20k;
#X obj 10 7 cnv 15 170 25 empty empty Low_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X text 316 410 Output of Low Pass Filter;
#X text 179 316 [mtof] converts MIDI notes to frequency in Hertz (cycles
per second).;
#X text 180 411 Graph output;
#X text 200 432 on/ff;
#X obj 22 616 *~;
#X obj 92 594 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 178 553 Multiply audio signal: multiplying by less than reuces
volume \, more than one increases volume;
#X text 178 591 Turn Audio on/off;
#X text 179 654 Output;
#X floatatom 54 288 5 0 0 0 - - -;
#X floatatom 54 340 5 0 0 0 - - -;
#X connect 1 0 5 0;
#X connect 5 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 9 0 15 0;
#X connect 10 0 9 1;
#X connect 10 0 36 0;
#X connect 11 0 35 0;
#X connect 11 0 10 0;
#X connect 15 0 30 0;
#X connect 30 0 6 0;
#X connect 30 0 6 1;
#X connect 31 0 30 1;
#X restore 492 165 pd filt 1;
#X text 563 164 Low Pass;
#N canvas 239 84 559 673 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array hip 1000 float 0;
#X coords 0 1 999 -1 200 100 1;
#X restore 307 431 graph;
#X obj 187 418 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 285 518 -1;
#X text 291 473 0;
#X text 291 427 1;
#X text 185 397 Graph output;
#X obj 187 441 metro 100;
#X obj 23 241 noise~;
#X obj 44 304 mtof;
#X obj 47 281 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 12700 1;
#X text 184 304 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 185 280 Slider sends MIDI note values (0-127).;
#X text 184 241 Generate white noise.;
#X text 185 353 [hip~] allows frequencies above the cutoff frequency
to pass and reduces or eliminates frequencies below it.;
#X obj 187 465 tabwrite~ hip;
#X obj 23 353 hip~;
#X obj 23 569 *~ 0.1;
#X obj 8 9 cnv 15 200 25 empty empty High_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X obj 8 45 cnv 15 380 180 empty empty Graphical_Depiction_of_a_High_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array hip_display 6 float 5;
#A 0 -0.9857 -0.9857 -0.9857 0.97142 0.97141 0.97141;
#X coords 0 1 5 -1 200 100 1;
#X restore 29 86 graph;
#X text 74 188 Frequency in Hz;
#X text 244 127 Volume of sound passed;
#X text 27 189 0;
#X text 234 173 0;
#X text 237 83 1;
#X text 55 87 cutoff frequency ^;
#X text 194 189 20k;
#X obj 23 648 dac~;
#X obj 23 620 *~;
#X obj 93 598 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 210 417 on/ff;
#X text 304 397 Output of High Pass Filter;
#X text 183 597 Turn audio on/off;
#X text 184 569 Reduce volume;
#X text 183 648 Output;
#X connect 1 0 6 0;
#X connect 6 0 14 0;
#X connect 7 0 15 0;
#X connect 8 0 15 1;
#X connect 9 0 8 0;
#X connect 15 0 14 0;
#X connect 15 0 16 0;
#X connect 16 0 28 0;
#X connect 28 0 27 0;
#X connect 28 0 27 1;
#X connect 29 0 28 1;
#X restore 492 201 pd filt 2;
#X text 564 201 High Pass;
#N canvas 105 25 558 718 filt 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array bp 1000 float 0;
#X coords 0 1 999 -1 200 100 1;
#X restore 309 501 graph;
#X obj 189 488 tgl 15 1 empty empty empty 0 -6 0 10 -262144 -1 -1 1
1;
#X text 287 588 -1;
#X text 293 543 0;
#X text 293 497 1;
#X text 187 466 Graph output;
#X obj 189 511 metro 100;
#X obj 22 237 noise~;
#X obj 47 285 mtof;
#X obj 50 267 hsl 128 15 0 127 0 1 empty empty empty -2 -6 0 8 -262144
-1 -1 7700 1;
#X text 187 285 [mtof] converts MIDI notes to frequency in Hertz.;
#X text 189 237 Generate white noise.;
#X obj 189 534 tabwrite~ bp;
#X obj 22 418 bp~ 220 1;
#X text 188 414 [bp~] passes the center frequency unchanged \, and
reduces or eliminates frequencies above and below it.;
#X obj 73 337 nbx 5 14 0 20 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 20 256;
#X obj 10 7 cnv 15 170 25 empty empty Band_Pass_Filter 20 12 0 14 -233017
-66577 0;
#X obj 10 43 cnv 15 380 180 empty empty Graphical_Depiction_of_a_Band_Pass_Filter
20 12 0 14 -208240 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array bp_display 7 float 5;
#A 0 -0.9857 -0.9857 -0.9857 1.61426 -0.985712 -0.985712 -0.985704
;
#X coords 0 1 6 -1 200 100 1;
#X restore 30 86 graph;
#X text 75 188 Frequency in Hz;
#X text 236 127 Volume of sound passed;
#X text 28 189 0;
#X text 195 189 20 \, 0;
#X text 237 173 0;
#X text 238 83 1;
#X text 18 90 cutoff frequency ^;
#X text 189 265 MIDI slider (0-127).;
#X text 189 333 The third inlet of [bp] controls the Resonance \, i.e.
how far above or below the center frequency the filter still allows
sound to pass. Generally this number is between 0-10.;
#X obj 22 614 *~ 0.1;
#X obj 22 693 dac~;
#X obj 22 665 *~;
#X obj 92 643 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 182 642 Turn audio on/off;
#X text 183 614 Reduce volume;
#X text 182 693 Output;
#X text 211 487 on/ff;
#X text 304 466 Output of Band Pass Filter;
#X connect 1 0 6 0;
#X connect 6 0 12 0;
#X connect 7 0 13 0;
#X connect 8 0 13 1;
#X connect 9 0 8 0;
#X connect 13 0 12 0;
#X connect 13 0 28 0;
#X connect 15 0 13 2;
#X connect 28 0 30 0;
#X connect 30 0 29 0;
#X connect 30 0 29 1;
#X connect 31 0 30 1;
#X restore 492 237 pd filt 3;
#X text 564 236 Band Pass;
#N canvas 140 151 1147 553 filter 0;
#X obj 68 92 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 8 40 Just as an example of how filters might be used \, here
is a random distribution of band-pass filters:;
#X obj 9 13 cnv 15 200 25 empty empty Filter_Example 20 12 0 14 -233017
-66577 0;
#X obj 10 206 noise~;
#X floatatom 68 272 5 0 0 0 - - -;
#X obj 68 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 10 483 dac~;
#X obj 10 455 *~;
#X obj 25 433 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 57 433 Turn audio on/off;
#X text 58 404 Reduce volume;
#X text 58 484 Output;
#X text 86 91 This bang triggers a change in sonic 'colour' when clicked
;
#X obj 68 229 random 9950;
#X obj 68 250 + 50;
#X obj 150 206 noise~;
#X floatatom 208 272 5 0 0 0 - - -;
#X obj 208 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 208 229 random 9950;
#X obj 208 250 + 50;
#X obj 290 206 noise~;
#X floatatom 348 272 5 0 0 0 - - -;
#X obj 348 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 348 229 random 9950;
#X obj 348 250 + 50;
#X obj 430 206 noise~;
#X floatatom 488 272 5 0 0 0 - - -;
#X obj 488 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 488 229 random 9950;
#X obj 488 250 + 50;
#X obj 570 206 noise~;
#X floatatom 628 272 5 0 0 0 - - -;
#X obj 628 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 628 229 random 9950;
#X obj 628 250 + 50;
#X obj 710 206 noise~;
#X floatatom 768 272 5 0 0 0 - - -;
#X obj 768 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 768 229 random 9950;
#X obj 768 250 + 50;
#X obj 850 206 noise~;
#X floatatom 908 272 5 0 0 0 - - -;
#X obj 908 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 908 229 random 9950;
#X obj 908 250 + 50;
#X obj 990 206 noise~;
#X floatatom 1048 272 5 0 0 0 - - -;
#X obj 1048 206 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144
-1 -1;
#X obj 1048 229 random 9950;
#X obj 1048 250 + 50;
#X obj 10 404 *~ 0.05;
#X obj 550 356 cnv 15 580 180 empty empty There_are_8_identical_filters_contributing_to_the_sound
20 12 0 14 -208240 -66577 0;
#X obj 571 409 noise~;
#X floatatom 629 475 5 0 0 0 - - -;
#X obj 629 409 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 571 494 bp~ 0 80;
#X obj 629 432 random 9950;
#X obj 629 453 + 50;
#X text 728 404 The bang UI object triggers a random frequency value
;
#X text 728 454 +50 shifts the range of possible frequencies up to
a minimum of 50 hz;
#X text 728 492 Refer to the previous [pd filt 3] examlple if you need
help understanding this further;
#X obj 10 291 bp~ 0 50;
#X obj 150 291 bp~ 0 50;
#X obj 290 291 bp~ 0 50;
#X obj 430 291 bp~ 0 50;
#X obj 570 291 bp~ 0 50;
#X obj 710 291 bp~ 0 50;
#X obj 850 291 bp~ 0 50;
#X obj 990 291 bp~ 0 50;
#X connect 0 0 5 0;
#X connect 0 0 17 0;
#X connect 0 0 22 0;
#X connect 0 0 27 0;
#X connect 0 0 32 0;
#X connect 0 0 37 0;
#X connect 0 0 42 0;
#X connect 0 0 47 0;
#X connect 3 0 61 0;
#X connect 4 0 61 1;
#X connect 5 0 13 0;
#X connect 7 0 6 0;
#X connect 7 0 6 1;
#X connect 8 0 7 1;
#X connect 13 0 14 0;
#X connect 14 0 4 0;
#X connect 15 0 62 0;
#X connect 16 0 62 1;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 16 0;
#X connect 20 0 63 0;
#X connect 21 0 63 1;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 21 0;
#X connect 25 0 64 0;
#X connect 26 0 64 1;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 0 26 0;
#X connect 30 0 65 0;
#X connect 31 0 65 1;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 31 0;
#X connect 35 0 66 0;
#X connect 36 0 66 1;
#X connect 37 0 38 0;
#X connect 38 0 39 0;
#X connect 39 0 36 0;
#X connect 40 0 67 0;
#X connect 41 0 67 1;
#X connect 42 0 43 0;
#X connect 43 0 44 0;
#X connect 44 0 41 0;
#X connect 45 0 68 0;
#X connect 46 0 68 1;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 49 0 46 0;
#X connect 50 0 7 0;
#X connect 52 0 55 0;
#X connect 53 0 55 1;
#X connect 54 0 56 0;
#X connect 56 0 57 0;
#X connect 57 0 53 0;
#X connect 61 0 50 0;
#X connect 62 0 50 0;
#X connect 63 0 50 0;
#X connect 64 0 50 0;
#X connect 65 0 50 0;
#X connect 66 0 50 0;
#X connect 67 0 50 0;
#X connect 68 0 50 0;
#X restore 492 273 pd filter colours;
#X text 607 267 An example of how filters might be used \, here is
a random distribution of band-pass filters:;
#N canvas 104 92 1411 936 line 0;
#X obj 56 79 osc~ 440;
#X obj 54 361 dac~;
#X msg 446 79 \; pd dsp 1;
#X msg 538 79 \; pd dsp 0;
#X text 467 112 ON;
#X text 555 112 OFF;
#X obj 56 269 *~;
#X obj 72 243 line~;
#X text 129 243 <--- ramp generator;
#X text 132 78 <-- sine wave;
#X msg 72 103 0.1 2000;
#X msg 72 177 0 2000;
#X msg 72 125 0.1 50;
#X msg 72 199 0 50;
#X msg 72 147 0.1;
#X msg 72 221 0;
#X text 274 124 ON;
#X text 154 105 <-- slow;
#X text 144 126 <-- fast;
#X text 111 146 <-- instantly;
#X text 271 197 OFF;
#X text 136 178 <-- slow;
#X text 129 199 <-- fast;
#X text 109 219 <-- instantly;
#X text 112 161 ----------------------;
#X text 95 360 <-- out;
#X text 103 7 CONTROLLING AMPLITUDE USING LINE~;
#X text 41 384 Line~'s left inlet is a target value \; it reaches that
target in the time specified (in milliseconds) to its right inlet.
;
#X text 34 495 The line~ object (and its control brother \, line) treat
their right inlet specially. The inlets don't retain values the way
other inlets do but revert to zero whenever a target is received.;
#X text 14 27 In this patch \, the multiplier is configured to multiply
two signals. The amplitude is now a signal computed by the line~ object.
;
#X text 37 424 (In this example \, message boxes with two numbers each
are connected to line~'s left inlet. Except in some special cases \,
Pd objects with more than one inlet will automatically distribute lists
of numbers across their inlets. In this case \, "0 50" becomes \, "50
at right and 0 at left.");
#X text 386 557 updated for Pd version 0.36;
#X text 93 268 <-- multiply the sine wave by the ramp. There's no longer
a "0" argument-- this tells Pd to expect a signal here.;
#X obj 91 333 tabwrite~ line;
#X obj 101 310 metro 250;
#X obj 108 292 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array line 882 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0;
#X coords 0 1 882 -1 200 140 1 0 0;
#X restore 468 338 graph;
#X msg 270 221 0.1 \, 0 3000;
#X connect 0 0 6 0;
#X connect 6 0 1 0;
#X connect 6 0 1 1;
#X connect 6 0 33 0;
#X connect 7 0 6 1;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 14 0 7 0;
#X connect 15 0 7 0;
#X connect 34 0 33 0;
#X connect 35 0 34 0;
#X connect 37 0 7 0;
#X restore 492 345 pd line;
#X text 547 344 Envelope using line;
#X text 580 380 More ways of using line;
#N canvas 25 23 1164 794 more_line 0;
#X obj 91 123 line;
#X msg 92 99 1 \, 0 1000;
#X floatatom 91 148 5 0 0 0 - - -;
#X obj 505 68 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 508 690 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 151 284 1 \, 0 1000;
#X obj 151 308 line~;
#X obj 91 265 noise~;
#X obj 136 342 *~;
#X obj 129 370 dac~;
#X obj 91 289 *~ 0.2;
#X obj 316 311 line~;
#X obj 256 268 noise~;
#X obj 301 345 *~;
#X obj 291 374 dac~;
#X obj 256 292 *~ 0.2;
#X msg 316 287 1 \, 0 100;
#X obj 205 580 line~;
#X obj 145 537 noise~;
#X obj 190 614 *~;
#X obj 180 643 dac~;
#X obj 145 561 *~ 0.2;
#X msg 205 557 1 \, 0 \$1;
#X obj 205 536 f;
#X obj 230 506 nbx 4 14 10 1000 1 1 empty empty empty 0 -8 0 10 -262144
-1 -1 756.236 256;
#X text 279 506 ms;
#X msg 205 477 bang;
#X text 85 437 the number box stores the time \, and the [bang( message
triggers the envelope;
#X obj 592 578 noise~;
#X obj 688 633 *~;
#X obj 678 662 dac~;
#X obj 592 602 *~ 0.2;
#X obj 600 195 line;
#X floatatom 600 220 5 0 0 0 - - -;
#X msg 554 154 1 1000;
#X msg 623 155 0 1000;
#X text 552 136 attack;
#X text 623 136 decay;
#X obj 788 222 line;
#X msg 742 147 1 1000;
#X msg 794 194 0 1000;
#X text 740 129 attack;
#X text 844 193 decay;
#X obj 793 170 delay 1000;
#X obj 748 174 t a b;
#X obj 791 247 hsl 80 12 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 132 151 hsl 80 12 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X text 586 116 MANUAL:;
#X text 772 105 AUTOMATIC:;
#X text 541 279 Now let's make a signal version of that \, using [line~]
;
#X text 86 424 Ok \, now let's make that decay time variable:;
#X text 80 193 Let's make a signal version of that \, with [line~]
and then envelope some [noise~] \, first with a 1000ms line \, and
then with a 100ms line:;
#X text 89 57 Most basic envelope: starts at 1 \, goes down to zero
in 1000ms;
#X text 631 79 Attack and Decay:;
#X text 540 294 Let's also make the attack and decay times variable.
;
#X obj 656 442 f;
#X obj 681 412 nbx 4 14 5 1000 1 0 empty empty attack 0 -8 0 10 -262144
-1 -1 5 256;
#X text 730 412 ms;
#X msg 656 378 bang;
#X obj 703 543 f;
#X obj 740 540 nbx 4 14 10 10000 1 1 empty empty decay 0 -8 0 10 -262144
-1 -1 2000 256;
#X text 787 539 ms;
#X text 537 313 We want the decay to trigger directly after the attack
is finished \, so we set the time for the [delay] object to equal the
attack time:;
#X msg 703 566 0 \$1;
#X msg 656 521 1 \$1;
#X obj 703 490 delay;
#X obj 656 465 t f f;
#X text 740 468 (sending a float to the left;
#X text 751 484 inlet of [delay] forces it to;
#X text 748 498 output a bang after x ms);
#X obj 703 597 line~;
#X connect 0 0 2 0;
#X connect 0 0 46 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 8 0 9 1;
#X connect 10 0 8 0;
#X connect 11 0 13 1;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 13 0 14 1;
#X connect 15 0 13 0;
#X connect 16 0 11 0;
#X connect 17 0 19 1;
#X connect 18 0 21 0;
#X connect 19 0 20 0;
#X connect 19 0 20 1;
#X connect 21 0 19 0;
#X connect 22 0 17 0;
#X connect 23 0 22 0;
#X connect 24 0 23 1;
#X connect 26 0 23 0;
#X connect 28 0 31 0;
#X connect 29 0 30 0;
#X connect 29 0 30 1;
#X connect 31 0 29 0;
#X connect 32 0 33 0;
#X connect 34 0 32 0;
#X connect 35 0 32 0;
#X connect 38 0 45 0;
#X connect 39 0 44 0;
#X connect 40 0 38 0;
#X connect 43 0 40 0;
#X connect 44 0 38 0;
#X connect 44 1 43 0;
#X connect 55 0 66 0;
#X connect 56 0 55 1;
#X connect 58 0 55 0;
#X connect 59 0 63 0;
#X connect 60 0 59 1;
#X connect 63 0 70 0;
#X connect 64 0 70 0;
#X connect 65 0 59 0;
#X connect 66 0 64 0;
#X connect 66 1 65 0;
#X connect 70 0 29 1;
#X restore 492 381 pd more_line;
#N canvas 227 24 1439 1004 percussive_sounds 0;
#X obj 429 295 noise~;
#X obj 441 368 *~;
#X obj 314 45 line~;
#X text 365 47 <- create a smooth signal ramp;
#X obj 658 97 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 639 143 t b b;
#X msg 318 13 1 100;
#X msg 373 14 target_value time_to_reach_target_value;
#X obj 544 338 line~;
#X msg 607 227 1 1;
#X obj 458 457 dac~;
#X obj 459 409 lop~ 500;
#X obj 1462 612 noise~;
#X obj 1469 739 *~;
#X obj 1516 635 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1516 649 t b b;
#X obj 1518 717 line~;
#X msg 1518 694 0 500;
#X msg 1573 695 1 1;
#X obj 1517 672 del 5;
#X obj 1468 772 bp~ 250 5;
#X obj 1509 810 *~;
#X obj 1558 788 line~;
#X msg 1613 766 1 1;
#X obj 1557 743 del 5;
#X obj 1508 843 bp~ 1000 5;
#X obj 1471 875 dac~;
#X msg 1558 765 0 50;
#X text 331 296 White noise gen;
#X text 523 411 Low Pass Filter;
#X text 602 318 The line~ object generates linear ramps whose levels
and timing are determined by messages you send it. The messages may
be a single target value (causing the output to jump to the target)
or a target and a time in milliseconds (to start a new ramp.);
#X text 692 95 Bang;
#X text 164 141 The delay object sends a bang to its outlet after a
delay in milliseconds specified by its right inlet or its creation
argument. Sending a bang to a delay which is already set will reschedule
its output \, replacing any previous setting.;
#X obj 539 170 del 5;
#X text 638 409 The filter is initialized to cut off frequencies above
500Hz.;
#X text 324 230 a pair of numbers starts a ramp;
#X msg 524 230 0 300;
#X connect 0 0 1 0;
#X connect 1 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 33 0;
#X connect 5 1 9 0;
#X connect 6 0 2 0;
#X connect 8 0 1 1;
#X connect 9 0 8 0;
#X connect 11 0 10 0;
#X connect 11 0 10 1;
#X connect 12 0 13 0;
#X connect 12 0 21 0;
#X connect 13 0 20 0;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 15 0 24 0;
#X connect 15 1 18 0;
#X connect 15 1 23 0;
#X connect 16 0 13 1;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 19 0 17 0;
#X connect 20 0 26 0;
#X connect 21 0 25 0;
#X connect 22 0 21 1;
#X connect 23 0 22 0;
#X connect 24 0 27 0;
#X connect 25 0 26 1;
#X connect 27 0 22 0;
#X connect 33 0 36 0;
#X connect 36 0 8 0;
#X restore 492 417 pd percussive_sounds;
#X text 626 416 Using Subtractive synthesis to make percussive sounds
;
#X obj 39 165 line~;
#X obj 39 201 del;
#X obj 39 266 hip~;
#X obj 39 338 bp~;
#X obj 39 302 lop~;
#X text 86 164 generate audio ramps;
#X text 86 264 High Pass Filter;
#X text 85 301 Low Pass Filter;
#X text 85 338 Band Pass Filter;
#X obj 39 129 noise~;
#N canvas 112 278 1025 735 more 0;
#N canvas 159 39 603 551 crash 0;
#X obj 61 227 line~;
#X obj 188 148 t b b;
#X obj 187 249 line~;
#X obj 161 189 del 4;
#X obj 119 325 *~;
#X obj 247 156 noise~;
#X obj 248 191 *~ 1;
#X obj 393 268 line~;
#X obj 27 115 t b b b;
#X obj 35 167 del 10;
#X msg 157 211 0 100;
#X obj 93 66 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 155 381 hip~ 2000;
#X obj 107 279 phasor~;
#X msg 87 189 5500 10;
#X msg 32 189 4500 100;
#X msg 215 210 1;
#X obj 373 155 t b b b;
#X msg 366 242 0 1500;
#X obj 156 429 *~ 0.04;
#X obj 355 210 del 20;
#X msg 418 219 1 50;
#X obj 248 213 hip~ 15000;
#X obj 341 305 *~;
#X msg 484 220 5 0;
#X obj 165 473 dac~;
#X connect 0 0 13 0;
#X connect 1 0 3 0;
#X connect 1 0 3 0;
#X connect 1 1 16 0;
#X connect 2 0 4 1;
#X connect 3 0 10 0;
#X connect 4 0 12 0;
#X connect 5 0 6 0;
#X connect 6 0 22 0;
#X connect 7 0 23 1;
#X connect 8 1 9 0;
#X connect 8 2 14 0;
#X connect 9 0 15 0;
#X connect 10 0 2 0;
#X connect 11 0 8 0;
#X connect 11 0 1 0;
#X connect 11 0 17 0;
#X connect 12 0 19 0;
#X connect 13 0 4 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 2 0;
#X connect 17 0 20 0;
#X connect 17 1 21 0;
#X connect 17 2 24 0;
#X connect 18 0 7 0;
#X connect 19 0 25 0;
#X connect 19 0 25 1;
#X connect 20 0 18 0;
#X connect 21 0 7 0;
#X connect 22 0 23 0;
#X connect 23 0 12 0;
#X connect 24 0 7 0;
#X restore 39 63 pd crash;
#N canvas 1172 47 450 300 bell 0;
#X obj 196 92 t b b;
#X obj 195 193 line~;
#X obj 33 184 *~;
#X obj 88 39 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 145 125 del 10;
#X msg 165 155 0 200;
#X obj 33 141 +~ 440;
#X obj 34 119 *~ 10000;
#X obj 33 206 *~ 0.5;
#X obj 25 95 osc~ 3000;
#X obj 30 163 osc~;
#X msg 224 151 0.1 0;
#X obj 116 255 dac~;
#X connect 0 0 4 0;
#X connect 0 0 4 0;
#X connect 0 1 11 0;
#X connect 1 0 2 1;
#X connect 2 0 8 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 8 0 12 0;
#X connect 8 0 12 1;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X connect 11 0 1 0;
#X restore 40 103 pd bell;
#N canvas 243 62 966 775 kick 0;
#X obj 82 255 line~;
#X obj 82 272 osc~;
#X obj 119 342 dac~;
#X obj 123 69 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 93 119 t b b;
#X obj 57 165 del 5;
#X msg 52 204 37 200;
#X msg 112 213 70;
#X obj 119 316 *~;
#X obj 154 159 t b b;
#X obj 154 232 line~;
#X msg 241 223 1 1;
#X obj 153 187 del 5;
#X msg 154 209 0 300;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 3 0 4 0;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 2 0;
#X connect 8 0 2 1;
#X connect 9 0 12 0;
#X connect 9 1 11 0;
#X connect 10 0 8 1;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X restore 40 141 pd kick;
#N canvas 25 23 1384 865 woosh 0;
#X obj 32 79 noise~;
#X obj 39 161 *~;
#X obj 86 57 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 86 71 t b b;
#X obj 88 139 line~;
#X msg 88 116 0 500;
#X obj 79 232 *~;
#X obj 128 210 line~;
#X msg 183 188 1 1;
#X obj 127 165 del 5;
#X obj 41 297 dac~;
#X msg 143 117 1 400;
#X obj 87 94 del 400;
#X msg 128 187 0 500;
#X obj 78 265 bp~ 1000 10;
#X obj 38 194 bp~ 250 10;
#X obj 228 220 *~;
#X obj 277 198 line~;
#X msg 277 175 0 500;
#X obj 227 253 bp~ 2456 20;
#X msg 332 176 1 100;
#X obj 276 153 del 100;
#X obj 382 198 *~;
#X obj 431 176 line~;
#X msg 431 153 0 500;
#X obj 430 131 del 1000;
#X msg 474 157 1 5000;
#X obj 381 231 bp~ 6000 25;
#X connect 0 0 1 0;
#X connect 0 0 6 0;
#X connect 0 0 16 0;
#X connect 0 0 22 0;
#X connect 1 0 15 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 3 0 12 0;
#X connect 3 0 21 0;
#X connect 3 0 25 0;
#X connect 3 1 11 0;
#X connect 3 1 8 0;
#X connect 3 1 20 0;
#X connect 3 1 26 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 14 0;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 9 0 13 0;
#X connect 11 0 4 0;
#X connect 12 0 5 0;
#X connect 13 0 7 0;
#X connect 14 0 10 1;
#X connect 14 0 10 0;
#X connect 15 0 10 0;
#X connect 15 0 10 1;
#X connect 16 0 19 0;
#X connect 17 0 16 1;
#X connect 18 0 17 0;
#X connect 19 0 10 0;
#X connect 19 0 10 1;
#X connect 20 0 17 0;
#X connect 21 0 18 0;
#X connect 22 0 27 0;
#X connect 23 0 22 1;
#X connect 24 0 23 0;
#X connect 25 0 24 0;
#X connect 26 0 23 0;
#X connect 27 0 10 0;
#X connect 27 0 10 1;
#X restore 39 182 pd woosh;
#N canvas 25 23 1205 914 hat 0;
#X obj 62 85 noise~;
#X obj 69 192 *~;
#X obj 135 77 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 135 92 t b b;
#X obj 118 170 line~;
#X msg 173 147 1 1;
#X msg 118 147 0 30;
#X obj 117 124 del 3;
#X floatatom 173 194 5 0 0 0 - - -;
#X obj 68 209 hip~ 5600;
#X obj 68 227 dac~;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 9 0 10 1;
#X restore 40 221 pd hat;
#N canvas 25 23 1455 976 snare 0;
#X obj 136 302 noise~;
#X obj 148 375 *~;
#X obj 365 104 bng 12 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 346 150 t b b;
#X obj 251 345 line~;
#X msg 314 234 1 1;
#X obj 165 464 dac~;
#X obj 166 416 lop~ 500;
#X text 230 418 Low Pass Filter;
#X text 399 102 Bang;
#X obj 246 177 del 5;
#X msg 231 237 0 300;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 3 1 5 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 7 0 6 0;
#X connect 7 0 6 1;
#X connect 10 0 11 0;
#X connect 11 0 4 0;
#X restore 40 263 pd snare;
#X restore 492 453 pd more percussive sounds;
#X text 658 454 kick \, snare \, hat etc;
#N canvas 172 58 961 774 basic 0;
#X msg 122 163 10;
#X msg 190 161 5;
#X obj 164 228 +;
#X text 201 212 COLD INLET;
#X text 77 215 HOT INLET;
#X text 107 44 BASIC MATH & BANG ORDER;
#X obj 135 106 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 159 303 5 0 0 0 - - -;
#X text 109 70 Pure data will send out bangs according to the order
that you connect objects to a bang;
#X msg 126 438 10;
#X msg 194 436 5;
#X obj 168 503 +;
#X text 205 491 COLD INLET;
#X text 81 490 HOT INLET;
#X obj 164 367 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 163 578 5 0 0 0 - - -;
#X text 109 346 PD works bangs right to left;
#X text 194 390 If you read right to left it is logical to join things
in that way \, but that always produce the right result in PD. To solve
this we can use an object called trigger.;
#X text 283 203 As a general rule \, only the inlet on the furthest
to the LEFT is a 'hot' inlet. any other inlets are 'cold' if you send
a value to a cold inlet \, it will be stored inside the object \, but
no will be carried out until the hot inlet receives a value \, or a
bang.;
#X obj 146 406 t b b;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 7 0;
#X connect 6 0 0 0;
#X connect 6 0 1 0;
#X connect 9 0 11 0;
#X connect 10 0 11 1;
#X connect 11 0 15 0;
#X connect 14 0 19 0;
#X connect 19 0 9 0;
#X connect 19 1 10 0;
#X restore 492 309 pd basic math order;
#X text 626 308 Order in PD (SUPER IMPORTANT);
#N canvas 301 23 1199 856 sequencer 0;
#X obj 44 30 noise~;
#X text 96 30 <- white noise generator;
#X text 108 84 <- low pass filter;
#X obj 44 82 lop~ 100;
#X floatatom 98 53 5 0 0 0 - - -;
#X text 139 62 <- cutoff frequency Hz;
#X obj 52 130 hip~ 5000;
#X floatatom 105 112 5 0 0 0 - - -;
#X text 126 128 <- high pass filter;
#X text 148 111 <- cutoff frequency Hz;
#X floatatom 93 161 5 0 0 0 - - -;
#X floatatom 131 181 5 0 0 0 - - -;
#X text 139 159 <- centre frequency Hz;
#X text 176 179 <- 'Q' ratio;
#X obj 1020 610 *~;
#X obj 1089 587 line~;
#X msg 1131 565 1 5;
#X obj 1027 454 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1089 587 line~;
#X obj 1090 523 t b b;
#X obj 1020 508 line~, f 6;
#X obj 774 670 dac~;
#X obj 1020 540 phasor~;
#X msg 1090 564 0 200;
#X obj 778 452 rev3~ 100 90 3000 20;
#X text 773 426 reverb;
#X text 50 445 reverb;
#X obj 58 204 bp~ 440 100;
#X obj 396 24 noise~;
#X obj 440 302 *~;
#X obj 400 363 dac~;
#X floatatom 459 35 5 0 0 0 - - -;
#X obj 652 275 line~;
#X msg 803 168 1 5;
#X obj 644 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 654 127 t b b b;
#X msg 712 194 0.3 50;
#X obj 646 164 del 120;
#X obj 405 302 *~;
#X obj 499 243 line~;
#X msg 567 164 1 5;
#X obj 499 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 500 190 del 5;
#X msg 499 216 0 50;
#X obj 500 126 t b b;
#X text 644 80 hh-open;
#X text 497 79 hh-closed;
#X obj 396 59 bp~ 10000 15;
#X text 302 24 white noise >;
#X text 301 58 bp filter >;
#X text 599 163 attack;
#X text 539 188 sustain;
#X text 540 215 release;
#X text 758 194 decay;
#X text 836 167 attack;
#X text 684 216 release;
#X obj 706 166 del 30;
#X msg 646 215 0 300;
#X obj 906 278 line~;
#X msg 1057 171 1 5;
#X obj 898 100 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 908 130 t b b b;
#X obj 900 167 del 120;
#X text 1012 197 decay;
#X text 1090 170 attack;
#X text 938 219 release;
#X obj 960 169 del 30;
#X text 898 83 hh-open reverb;
#X msg 900 218 0 200;
#X obj 474 302 *~;
#X msg 966 197 0.3 90;
#X obj 1128 125 osc~;
#X obj 1128 242 *~;
#X obj 1198 210 line~;
#X obj 1135 42 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1198 110 t b b;
#X obj 1128 95 line~, f 6;
#X obj 1124 273 dac~;
#X msg 1211 68 StartFrequency \, EndFrequency rampTime;
#X text 1339 136 attack;
#X text 1242 132 sustain;
#X text 1240 155 release;
#X obj 1198 132 del 5;
#X msg 1198 156 0 300;
#X text 1128 15 kick;
#X obj 402 431 noise~;
#X obj 421 631 *~;
#X obj 524 604 line~;
#X msg 566 582 1 5;
#X obj 523 513 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 524 604 line~;
#X obj 524 561 del 5;
#X obj 525 540 t b b;
#X msg 525 581 0 200;
#X obj 419 707 dac~;
#X obj 478 511 *~ 7;
#X obj 402 467 hip~ 3000;
#X text 401 409 snare;
#X obj 402 509 *~ 0.1;
#X obj 565 468 bp~ 320 20;
#X obj 650 468 bp~ 800 20;
#X obj 480 468 bp~ 400 20;
#X msg 1311 136 1 4;
#X msg 1122 69 200 \, 45 40;
#X obj 1020 557 *~ 0.2;
#X msg 1020 480 800 \, 1800 300;
#X text 1024 433 fx;
#X text 50 422 step sequencer;
#X text 50 359 subtractive envelope filters;
#X text 51 379 adsr envelopes;
#X text 51 401 pitch ramp waveforms;
#X text 50 337 week 2;
#X obj 1089 544 del 50;
#X obj 1191 328 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1195 408 f;
#X obj 1277 413 + 1;
#X floatatom 1195 482 5 0 0 0 - - -;
#X msg 1216 382 0;
#X floatatom 1237 435 5 0 0 0 - - -;
#X obj 1195 458 mod 16;
#X obj 1194 543 sel 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15;
#X obj 1193 363 metro 432;
#X text 1261 363 tempo select (ms);
#X floatatom 1250 334 5 0 0 0 - - -;
#X text 1288 335 custom tempo;
#X text 1251 384 reset to zero;
#X text 1315 412 float stores number Outputs an event which is then
+1. This is fed back into the f store thus counting upwards forever.
;
#X text 1247 458 acts as the counter value;
#X obj 1194 508 hradio 15 1 0 16 empty empty empty 0 -8 0 10 -262144
-1 -1 10;
#X floatatom 1231 668 5 0 0 0 - - -;
#X obj 1320 630 mtof;
#X obj 1323 821 dac~;
#X text 1564 589 A minor Scale MIDI Notes;
#X msg 1227 603 0;
#X obj 1417 728 line~;
#X obj 1417 637 t b b;
#X text 1578 664 attack;
#X text 1461 659 sustain;
#X text 1459 682 release;
#X obj 1322 670 line~;
#X obj 1322 727 *~;
#X obj 1321 700 phasor~;
#X msg 1417 683 0 500;
#X msg 1322 590 45;
#X msg 1356 590 47;
#X msg 1392 590 48;
#X msg 1425 590 50;
#X msg 1459 590 52;
#X msg 1493 590 53;
#X msg 1524 590 55;
#X obj 1417 659 del 120;
#X msg 1530 663 1 100;
#X obj 1322 760 hip~ 40;
#X floatatom 1361 740 5 0 0 0 - - -;
#X obj 529 646 *~ 0.5;
#X obj 1322 791 *~ 0.3;
#X text 1193 307 sequencer on/off;
#X connect 4 0 3 1;
#X connect 7 0 6 1;
#X connect 10 0 27 1;
#X connect 11 0 27 2;
#X connect 14 0 21 0;
#X connect 14 0 21 1;
#X connect 14 0 24 0;
#X connect 15 0 14 1;
#X connect 16 0 15 0;
#X connect 17 0 19 0;
#X connect 17 0 105 0;
#X connect 19 0 112 0;
#X connect 19 1 16 0;
#X connect 20 0 22 0;
#X connect 22 0 104 0;
#X connect 23 0 15 0;
#X connect 24 0 21 0;
#X connect 24 1 21 1;
#X connect 28 0 47 0;
#X connect 29 0 30 0;
#X connect 29 0 30 1;
#X connect 31 0 47 1;
#X connect 32 0 29 1;
#X connect 33 0 32 0;
#X connect 34 0 35 0;
#X connect 35 0 37 0;
#X connect 35 1 56 0;
#X connect 35 2 33 0;
#X connect 36 0 32 0;
#X connect 37 0 57 0;
#X connect 38 0 30 0;
#X connect 38 0 30 1;
#X connect 39 0 38 1;
#X connect 40 0 39 0;
#X connect 41 0 44 0;
#X connect 42 0 43 0;
#X connect 43 0 39 0;
#X connect 44 0 42 0;
#X connect 44 1 40 0;
#X connect 47 0 29 0;
#X connect 47 0 38 0;
#X connect 47 0 69 0;
#X connect 56 0 36 0;
#X connect 57 0 32 0;
#X connect 58 0 69 1;
#X connect 59 0 58 0;
#X connect 60 0 61 0;
#X connect 61 0 62 0;
#X connect 61 1 66 0;
#X connect 61 2 59 0;
#X connect 62 0 68 0;
#X connect 66 0 70 0;
#X connect 68 0 58 0;
#X connect 69 0 30 0;
#X connect 69 0 30 1;
#X connect 69 0 24 0;
#X connect 70 0 58 0;
#X connect 71 0 72 0;
#X connect 72 0 77 0;
#X connect 72 0 77 1;
#X connect 73 0 72 1;
#X connect 74 0 75 0;
#X connect 74 0 103 0;
#X connect 75 0 82 0;
#X connect 75 1 102 0;
#X connect 76 0 71 0;
#X connect 82 0 83 0;
#X connect 83 0 73 0;
#X connect 85 0 96 0;
#X connect 85 0 99 0;
#X connect 85 0 100 0;
#X connect 85 0 101 0;
#X connect 86 0 94 0;
#X connect 86 0 94 1;
#X connect 86 0 154 0;
#X connect 87 0 86 1;
#X connect 88 0 87 0;
#X connect 89 0 92 0;
#X connect 91 0 93 0;
#X connect 92 0 91 0;
#X connect 92 1 88 0;
#X connect 93 0 87 0;
#X connect 95 0 86 0;
#X connect 96 0 98 0;
#X connect 98 0 86 0;
#X connect 99 0 95 0;
#X connect 100 0 95 0;
#X connect 101 0 95 0;
#X connect 102 0 73 0;
#X connect 103 0 76 0;
#X connect 104 0 14 0;
#X connect 105 0 20 0;
#X connect 112 0 23 0;
#X connect 113 0 117 0;
#X connect 113 0 121 0;
#X connect 114 0 115 0;
#X connect 114 0 118 0;
#X connect 114 0 119 0;
#X connect 115 0 114 1;
#X connect 116 0 128 0;
#X connect 117 0 114 1;
#X connect 119 0 116 0;
#X connect 120 0 143 0;
#X connect 120 0 74 0;
#X connect 120 0 34 0;
#X connect 120 2 145 0;
#X connect 120 2 89 0;
#X connect 120 2 41 0;
#X connect 120 3 144 0;
#X connect 120 3 41 0;
#X connect 120 4 145 0;
#X connect 120 4 41 0;
#X connect 120 5 143 0;
#X connect 120 5 74 0;
#X connect 120 5 41 0;
#X connect 120 6 89 0;
#X connect 120 6 41 0;
#X connect 120 7 145 0;
#X connect 120 7 41 0;
#X connect 120 7 34 0;
#X connect 120 8 146 0;
#X connect 120 8 74 0;
#X connect 120 8 41 0;
#X connect 120 10 89 0;
#X connect 120 10 41 0;
#X connect 120 11 148 0;
#X connect 120 11 60 0;
#X connect 120 12 147 0;
#X connect 120 12 41 0;
#X connect 120 13 149 0;
#X connect 120 13 74 0;
#X connect 120 14 145 0;
#X connect 120 14 89 0;
#X connect 120 15 17 0;
#X connect 120 15 41 0;
#X connect 121 0 114 0;
#X connect 123 0 121 1;
#X connect 128 0 120 0;
#X connect 130 0 129 0;
#X connect 130 0 139 0;
#X connect 130 0 135 0;
#X connect 133 0 141 0;
#X connect 134 0 140 1;
#X connect 135 0 150 0;
#X connect 135 1 151 0;
#X connect 139 0 141 0;
#X connect 140 0 152 0;
#X connect 141 0 140 0;
#X connect 142 0 134 0;
#X connect 143 0 130 0;
#X connect 144 0 130 0;
#X connect 145 0 130 0;
#X connect 146 0 130 0;
#X connect 147 0 130 0;
#X connect 148 0 130 0;
#X connect 149 0 130 0;
#X connect 150 0 142 0;
#X connect 151 0 134 0;
#X connect 152 0 155 0;
#X connect 153 0 152 1;
#X connect 154 0 24 0;
#X connect 155 0 131 0;
#X connect 155 0 131 1;
#X restore 492 489 pd sequencer;
#X obj 39 13 cnv 15 700 40 empty empty Lab_2_-_Subtractive_Synthesis_Filters_Percussive_Sounds
20 12 0 20 -233017 -66577 0;
#X obj 39 84 cnv 15 200 25 empty empty Key_Ingredients 20 12 0 14 -228856
-66577 0;
#X obj 490 84 cnv 15 550 25 empty empty Examples_(double_click_a_[pd]_object_to_open_the_enclosed_patch)
20 12 0 14 -228856 -66577 0;
#X text 86 128 uniformly distributed white noise;
#X text 86 198 The delay object sends a bang to its outlet after a
delay in milliseconds specified by its right inlet or its creation
argument. Right click and choose 'help' to see more details and examples
;
