#N canvas 275 312 450 184 12;
#X obj 2 6 cnv 15 384 25 empty empty 2.8:\ Explore! 20 12 0 14 #dcdcdc #404040 0;
#N canvas 102 25 1159 847 crash 0;
#X obj 520 76 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 9 9 cnv 15 450 25 empty empty Simple\ Crash 20 12 0 14 #e0e0e0 #404040 0;
#X obj 10 105 cnv 15 600 300 empty empty Part\ 1\ -\ ping\ sound\ (for_the_initial_strike) 20 12 0 12 #ececf0 #404040 0;
#X obj 198 247 line~;
#X obj 334 170 t b b;
#X obj 334 247 line~;
#X obj 198 345 *~;
#X obj 198 197 del 10;
#X msg 334 217 0 100;
#X obj 198 379 hip~ 2000;
#X obj 198 307 phasor~;
#X obj 548 523 dac~;
#X obj 198 170 t b b;
#X obj 334 197 del 10;
#X obj 557 459 *~ 0.1;
#X text 27 191 A-R controls the frequency;
#X text 27 204 of [phasor~];
#X text 33 246 Frequency sweep from 5500;
#X text 33 260 to 5400 Hz;
#X text 69 307 Saw tooth generator;
#X text 15 345 apply A-R amplitude envelope;
#X text 86 379 high-pass filter;
#X text 27 171 A-R envelope 1 ---------->;
#X text 375 169 <---------- A-R envelope 2;
#X text 447 186 controls the volume of;
#X text 445 200 [phasor~];
#X obj 557 489 clip~ -1 1;
#X text 451 467 clip for safety;
#X text 457 480 & sound output;
#X obj 618 105 cnv 15 530 300 empty empty Part\ 2\ -\ the\ crash\ sound\ (main\ body\ of\ the\ sound) 20 12 0 12 #ececf0 #404040 0;
#X obj 646 308 noise~;
#X obj 723 276 line~;
#X obj 724 161 t b b b;
#X msg 724 212 0 1500;
#X msg 788 212 0.5 50;
#X obj 646 346 *~;
#X obj 198 137 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X msg 395 217 0.35 10;
#X msg 260 219 6500 10;
#X msg 198 219 2500 200;
#X text 883 160 Attack-Decay-Release Envelope;
#X obj 724 188 del 55;
#X obj 788 188 del 55;
#X msg 850 188 1 5;
#X text 883 186 Envelope has 3 parts \, an attack \, a rapid;
#X text 883 199 decay \, and then a much longer release;
#X text 732 307 Use white noise as the source for the sound;
#X text 732 369 Get a 'fizzier' sound by filtering out lower frequencies;
#X obj 646 370 hip~ 20000;
#X text 536 75 <--- TRIGGER THE CRASH SOUND;
#X text 750 137 <--- hear this on its own;
#X text 27 137 hear this on its own --->;
#X obj 724 138 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 8 36 In this example \, we use two sets of sources with three envelopes to create a crude crash sound. It's a little basic \, but we could add more filters (particularly to the main body of the sound) to make it richer and more interesting.;
#X connect 0 0 12 0;
#X connect 0 0 4 0;
#X connect 0 0 32 0;
#X connect 3 0 10 0;
#X connect 4 0 13 0;
#X connect 4 1 37 0;
#X connect 5 0 6 1;
#X connect 6 0 9 0;
#X connect 7 0 39 0;
#X connect 8 0 5 0;
#X connect 9 0 14 0;
#X connect 10 0 6 0;
#X connect 12 0 7 0;
#X connect 12 1 38 0;
#X connect 13 0 8 0;
#X connect 14 0 26 0;
#X connect 26 0 11 0;
#X connect 26 0 11 1;
#X connect 30 0 35 0;
#X connect 31 0 35 1;
#X connect 32 0 41 0;
#X connect 32 1 42 0;
#X connect 32 2 43 0;
#X connect 33 0 31 0;
#X connect 34 0 31 0;
#X connect 35 0 48 0;
#X connect 36 0 4 0;
#X connect 36 0 12 0;
#X connect 37 0 5 0;
#X connect 38 0 3 0;
#X connect 39 0 3 0;
#X connect 41 0 33 0;
#X connect 42 0 34 0;
#X connect 43 0 31 0;
#X connect 48 0 14 0;
#X connect 52 0 32 0;
#X restore 10 102 pd crash;
#N canvas 84 56 380 401 bell 0;
#X obj 153 297 *~;
#X obj 208 95 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 9 9 cnv 15 200 25 empty empty Simple_Bell 20 12 0 14 #e0e0e0 #404040 0;
#X obj 144 376 dac~;
#X obj 153 338 clip~ -1 1;
#X obj 10 130 cnv 15 200 135 empty empty FM_with_two_sinewaves 20 12 0 12 #ececf0 #404040 0;
#X obj 230 130 cnv 15 140 135 empty empty AR_Envelope 20 12 0 12 #ececf0 #404040 0;
#X text 14 39 A simple bell sound \, using Frequency;
#X text 14 52 Modulation (FM \, more on this later) and;
#X text 14 65 an AR envelope;
#X text 230 95 <--- TRIGGER THE BELL;
#X obj 250 160 t b b;
#X obj 250 239 line~;
#X obj 250 191 del 10;
#X msg 309 210 0.1 0;
#X msg 250 210 0 300;
#X obj 31 216 +~ 440;
#X obj 31 194 *~ 10000;
#X obj 31 237 osc~;
#X obj 31 173 osc~ 3000;
#X connect 0 0 4 0;
#X connect 1 0 11 0;
#X connect 4 0 3 0;
#X connect 4 0 3 1;
#X connect 11 0 13 0;
#X connect 11 1 14 0;
#X connect 12 0 0 1;
#X connect 13 0 15 0;
#X connect 14 0 12 0;
#X connect 15 0 12 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 0 0;
#X connect 19 0 17 0;
#X restore 11 142 pd bell;
#N canvas 34 143 539 458 kick 0;
#X obj 54 112 bng 12 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 9 9 cnv 15 200 25 empty empty Simple\ Kick 20 12 0 14 #e0e0e0 #404040 0;
#X obj 113 113 cnv 15 200 150 empty empty Frequency_envelope 20 12 0 12 #ececf0 #404040 0;
#X obj 128 235 line~;
#X obj 328 436 dac~;
#X obj 128 152 t b b;
#X obj 128 178 del 5;
#X obj 337 376 *~;
#X msg 128 204 20 200;
#X msg 193 204 120;
#X obj 330 113 cnv 15 200 150 empty empty Amplitude_envelope 20 12 0 12 #ececf0 #404040 0;
#X obj 352 152 t b b;
#X obj 352 235 line~;
#X msg 409 204 1 1;
#X obj 352 178 del 5;
#X msg 352 204 0 300;
#X text 8 90 TRIGGER THE KICK;
#X text 8 39 A simple Kick synth using one oscilator \, a frequency envelope and an amplitude envelope.;
#X obj 337 404 clip~ -1 1;
#X obj 113 274 cnv 15 200 50 empty empty Sinewave_Oscilator 20 12 0 12 #ececf0 #404040 0;
#X obj 128 299 osc~;
#X connect 0 0 5 0;
#X connect 0 0 11 0;
#X connect 3 0 20 0;
#X connect 5 0 6 0;
#X connect 5 1 9 0;
#X connect 6 0 8 0;
#X connect 7 0 18 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 11 0 14 0;
#X connect 11 1 13 0;
#X connect 12 0 7 1;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 12 0;
#X connect 18 0 4 0;
#X connect 18 0 4 1;
#X connect 20 0 7 0;
#X restore 131 102 pd kick;
#N canvas 248 22 892 467 woosh 0;
#X obj 241 87 noise~;
#X obj 348 86 bng 12 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 9 9 cnv 15 200 25 empty empty Woosh 20 12 0 14 #e0e0e0 #404040 0;
#X obj 348 107 s triggerWoosh;
#X text 437 107 <--- this will send our bang;
#X text 467 120 to any [r triggerWoosh];
#X text 467 133 objects;
#X obj 241 108 send~ sendNoise;
#X obj 181 168 cnv 15 150 200 empty empty Filtered_Noise_2 20 12 0 14 #e0e0e0 #404040 0;
#X obj 351 168 cnv 15 150 200 empty empty Filtered_Noise_3 20 12 0 14 #e0e0e0 #404040 0;
#X obj 521 168 cnv 15 150 200 empty empty Filtered_Noise_4 20 12 0 14 #e0e0e0 #404040 0;
#X obj 11 168 cnv 15 150 200 empty empty Filtered_Noise_1 20 12 0 14 #e0e0e0 #404040 0;
#X obj 28 323 *~;
#X obj 69 307 line~;
#X msg 107 286 1 1;
#X obj 69 265 del 5;
#X obj 308 444 dac~;
#X msg 69 286 0 500;
#X obj 28 344 bp~ 1000 10;
#X obj 69 244 t b b;
#X obj 51 223 r triggerWoosh;
#X obj 51 244 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 28 202 receive~ sendNoise;
#X obj 370 323 *~;
#X obj 411 307 line~;
#X msg 411 286 0 500;
#X obj 411 244 t b b;
#X obj 393 223 r triggerWoosh;
#X obj 393 244 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 370 202 receive~ sendNoise;
#X obj 411 265 del 400;
#X msg 450 286 1 400;
#X obj 370 344 bp~ 250 10;
#X obj 308 405 clip~ -1 1;
#X obj 198 323 *~;
#X obj 239 307 line~;
#X msg 239 286 0 500;
#X obj 239 244 t b b;
#X obj 221 223 r triggerWoosh;
#X obj 221 244 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 198 202 receive~ sendNoise;
#X obj 239 265 del 100;
#X msg 278 286 1 100;
#X obj 198 344 bp~ 2456 20;
#X obj 538 323 *~;
#X obj 579 307 line~;
#X msg 579 286 0 500;
#X obj 579 244 t b b;
#X obj 561 223 r triggerWoosh;
#X obj 561 244 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 538 202 receive~ sendNoise;
#X obj 579 265 del 1000;
#X msg 618 286 1 1000;
#X obj 538 344 bp~ 6000 25;
#X text 19 109 this will send our source sound --->;
#X text 19 119 to any [receive~] object with;
#X text 19 129 the same name.;
#X text 12 39 A synthesised wooshing sound \, made using 4 bandpass filters \, each with their own amplitude envelope.;
#X text 361 83 <--- TRIGGER WOOSH!;
#X text 677 201 <--- get the output of [noise~];
#X text 677 223 <--- get the trigger;
#X text 677 253 <--- AR envelope;
#X text 677 343 <--- Band;
#X connect 0 0 7 0;
#X connect 1 0 3 0;
#X connect 12 0 18 0;
#X connect 13 0 12 1;
#X connect 14 0 13 0;
#X connect 15 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 33 0;
#X connect 19 0 15 0;
#X connect 19 1 14 0;
#X connect 20 0 19 0;
#X connect 20 0 21 0;
#X connect 22 0 12 0;
#X connect 23 0 32 0;
#X connect 24 0 23 1;
#X connect 25 0 24 0;
#X connect 26 0 30 0;
#X connect 26 1 31 0;
#X connect 27 0 26 0;
#X connect 27 0 28 0;
#X connect 29 0 23 0;
#X connect 30 0 25 0;
#X connect 31 0 24 0;
#X connect 32 0 33 0;
#X connect 33 0 16 0;
#X connect 33 0 16 1;
#X connect 34 0 43 0;
#X connect 35 0 34 1;
#X connect 36 0 35 0;
#X connect 37 0 41 0;
#X connect 37 1 42 0;
#X connect 38 0 37 0;
#X connect 38 0 39 0;
#X connect 40 0 34 0;
#X connect 41 0 36 0;
#X connect 42 0 35 0;
#X connect 43 0 33 0;
#X connect 44 0 53 0;
#X connect 45 0 44 1;
#X connect 46 0 45 0;
#X connect 47 0 51 0;
#X connect 47 1 52 0;
#X connect 48 0 47 0;
#X connect 48 0 49 0;
#X connect 50 0 44 0;
#X connect 51 0 46 0;
#X connect 52 0 45 0;
#X connect 53 0 33 0;
#X restore 250 142 pd woosh;
#N canvas 804 25 381 371 hat 0;
#X obj 29 280 *~;
#X obj 137 97 bng 12 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 20 347 dac~;
#X obj 9 9 cnv 15 200 25 empty empty Simple_Hat 20 12 0 14 #e0e0e0 #404040 0;
#X text 8 36 A simple hi-hat synth using an;
#X text 8 48 amplitude envelope and filtered;
#X text 8 60 noise.;
#X text 153 94 <--- TRIGGER THE HI-HAT;
#X obj 222 123 cnv 15 150 135 empty empty AR_Envelope 20 12 0 12 #ececf0 #404040 0;
#X obj 241 164 t b b;
#X obj 242 232 line~;
#X msg 297 209 1 1;
#X msg 242 209 0 30;
#X obj 241 186 del 3;
#X obj 9 123 cnv 15 200 135 empty empty Filtered_Noise 20 12 0 12 #ececf0 #404040 0;
#X obj 29 164 noise~;
#X obj 29 217 hip~ 5600;
#X obj 80 200 nbx 5 14 1000 10000 0 0 empty empty roll-off_frequency 0 -8 0 10 #fcfcfc #000000 #000000 0 256;
#X obj 29 309 clip~ -1 1;
#X connect 0 0 18 0;
#X connect 1 0 9 0;
#X connect 9 0 13 0;
#X connect 9 1 11 0;
#X connect 10 0 0 1;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 13 0 12 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X connect 17 0 16 1;
#X connect 18 0 2 0;
#X connect 18 0 2 1;
#X restore 250 102 pd hat;
#N canvas 32 25 747 370 snare 0;
#X obj 9 9 cnv 15 200 25 empty empty Simple_Snare 20 12 0 14 #e0e0e0 #404040 0;
#X text 12 39 A simple snare synth made using two filtered white noise sources and two AR envelopes;
#X obj 175 131 cnv 15 200 170 empty empty Filtered_Noise_1 20 12 0 14 #e0e0e0 #404040 0;
#X obj 383 131 cnv 15 200 170 empty empty Filtered_Noise_2 20 12 0 14 #e0e0e0 #404040 0;
#X obj 405 185 noise~;
#X obj 377 104 bng 12 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 468 162 t b b;
#X obj 468 229 line~;
#X obj 190 349 dac~;
#X obj 190 318 clip~ -1 1;
#X obj 405 274 *~;
#X obj 190 185 noise~;
#X obj 284 162 t b b;
#X obj 284 229 line~;
#X obj 284 185 del 5;
#X obj 190 264 *~;
#X msg 520 207 0.5 25;
#X obj 468 185 del 25;
#X msg 336 207 1 1;
#X msg 284 207 0 35;
#X obj 405 207 hip~ 100;
#X text 391 102 TRIGGER SNARE;
#X text 593 169 Longer attack and decay \,;
#X text 592 195 lower amplitude;
#X text 592 182 lower frequency noise &;
#X text 13 170 Short attack and decay;
#X text 12 183 higher frequency;
#X text 12 196 higher amplitude;
#X text 12 134 Initial attack:;
#X text 592 134 Longer decay:;
#X obj 405 229 lop~ 400;
#X obj 190 207 bp~ 1000 0.5;
#X msg 468 207 0 200;
#X connect 4 0 20 0;
#X connect 5 0 6 0;
#X connect 5 0 12 0;
#X connect 6 0 17 0;
#X connect 6 1 16 0;
#X connect 7 0 10 1;
#X connect 9 0 8 0;
#X connect 9 0 8 1;
#X connect 10 0 9 0;
#X connect 11 0 31 0;
#X connect 12 0 14 0;
#X connect 12 1 18 0;
#X connect 13 0 15 1;
#X connect 14 0 19 0;
#X connect 15 0 9 0;
#X connect 16 0 7 0;
#X connect 17 0 32 0;
#X connect 18 0 13 0;
#X connect 19 0 13 0;
#X connect 20 0 30 0;
#X connect 30 0 10 0;
#X connect 31 0 15 0;
#X connect 32 0 7 0;
#X restore 131 142 pd snare;
#X text 14 39 Explore and adapt the examples below to get a feel for how we can create percussive sounds in Pd.;
